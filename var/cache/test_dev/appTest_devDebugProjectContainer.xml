<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/var/www/wolopay/app</parameter>
    <parameter key="kernel.environment">test_dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/var/www/wolopay/var/cache/test_dev</parameter>
    <parameter key="kernel.logs_dir">/var/www/wolopay/var/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="AppBundle">AppBundle\AppBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="GregwarCaptchaBundle">Gregwar\CaptchaBundle\GregwarCaptchaBundle</parameter>
      <parameter key="BraincraftedBootstrapBundle">Braincrafted\Bundle\BootstrapBundle\BraincraftedBootstrapBundle</parameter>
      <parameter key="MisdGuzzleBundle">Misd\GuzzleBundle\MisdGuzzleBundle</parameter>
      <parameter key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</parameter>
      <parameter key="FOSJsRoutingBundle">FOS\JsRoutingBundle\FOSJsRoutingBundle</parameter>
      <parameter key="GfreeauGetJWTBundle">Gfreeau\Bundle\GetJWTBundle\GfreeauGetJWTBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="LexikJWTAuthenticationBundle">Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle</parameter>
      <parameter key="EscapeWSSEAuthenticationBundle">Escape\WSSEAuthenticationBundle\EscapeWSSEAuthenticationBundle</parameter>
      <parameter key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="LexikTranslationBundle">Lexik\Bundle\TranslationBundle\LexikTranslationBundle</parameter>
      <parameter key="JMSDiExtraBundle">JMS\DiExtraBundle\JMSDiExtraBundle</parameter>
      <parameter key="JMSAopBundle">JMS\AopBundle\JMSAopBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
      <parameter key="SonataIntlBundle">Sonata\IntlBundle\SonataIntlBundle</parameter>
      <parameter key="SonataMediaBundle">Sonata\MediaBundle\SonataMediaBundle</parameter>
      <parameter key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</parameter>
      <parameter key="ApplicationSonataMediaBundle">Application\Sonata\MediaBundle\ApplicationSonataMediaBundle</parameter>
      <parameter key="IbrowsSonataTranslationBundle">Ibrows\SonataTranslationBundle\IbrowsSonataTranslationBundle</parameter>
      <parameter key="BeSimpleSoapBundle">BeSimple\SoapBundle\BeSimpleSoapBundle</parameter>
      <parameter key="BazingaFakerBundle">Bazinga\Bundle\FakerBundle\BazingaFakerBundle</parameter>
      <parameter key="KnpSnappyBundle">Knp\Bundle\SnappyBundle\KnpSnappyBundle</parameter>
      <parameter key="SymfonyConsoleFormBundle">Matthias\SymfonyConsoleForm\Bundle\SymfonyConsoleFormBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
      <parameter key="RaulFraileLadybugBundle">RaulFraile\Bundle\LadybugBundle\RaulFraileLadybugBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appTest_devDebugProjectContainer</parameter>
    <parameter key="shopping_cart_max_items">10</parameter>
    <parameter key="is_production">false</parameter>
    <parameter key="database_driver">pdo_mysql</parameter>
    <parameter key="database_host">localhost</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">gorrina_1</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">root</parameter>
    <parameter key="mailer_transport">gmail</parameter>
    <parameter key="mailer_host">null</parameter>
    <parameter key="mailer_user">miguelgd1985@gmail.com</parameter>
    <parameter key="mailer_password">Makalister10</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="debug_toolbar">true</parameter>
    <parameter key="debug_redirects">false</parameter>
    <parameter key="use_assetic_controller">true</parameter>
    <parameter key="php_exe_path">php</parameter>
    <parameter key="node_exe_path">/usr/bin/nodejs</parameter>
    <parameter key="node_modules_path">/home/mgarcia/npm/lib/node_modules/</parameter>
    <parameter key="node_uglify_exe">/home/mgarcia/npm/lib/node_modules/uglify-js/bin/uglifyjs</parameter>
    <parameter key="node_port">3001</parameter>
    <parameter key="domain_main">http://sym2_pay_gateway.test</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="locale_available" type="collection">
      <parameter>en</parameter>
      <parameter>es</parameter>
      <parameter>fr</parameter>
      <parameter>pl</parameter>
      <parameter>it</parameter>
      <parameter>de</parameter>
      <parameter>cz</parameter>
      <parameter>pt</parameter>
      <parameter>ko</parameter>
    </parameter>
    <parameter key="payments.paypal.email">mbrualla@nviasms.com</parameter>
    <parameter key="payments.paypal.live">false</parameter>
    <parameter key="payments.paysafecard.user">psc_clickgestionsl_test</parameter>
    <parameter key="payments.paysafecard.password">MsQc2OT1OwKAy</parameter>
    <parameter key="payments.paysafecard.live">false</parameter>
    <parameter key="payments.rixty.user">169f8139-a300-4892-9f44-31a9ab1b4d64</parameter>
    <parameter key="payments.rixty.password">96e2b7d709df80</parameter>
    <parameter key="payments.rixty.live">false</parameter>
    <parameter key="payments.ukash.user">UKASH10082</parameter>
    <parameter key="payments.ukash.password">12345678901234567890</parameter>
    <parameter key="payments.ukash.live">false</parameter>
    <parameter key="payments.xsolla.live">false</parameter>
    <parameter key="payments.adyen.live">false</parameter>
    <parameter key="payments.neteller.live">false</parameter>
    <parameter key="payments.mol_thailand.live">false</parameter>
    <parameter key="payments.g2a.live">true</parameter>
    <parameter key="payments.cherry.live">false</parameter>
    <parameter key="payments.boa_compra.live">false</parameter>
    <parameter key="payments.steam_web.live">false</parameter>
    <parameter key="payments.facebook.live">false</parameter>
    <parameter key="payments.tigo.live">false</parameter>
    <parameter key="email_developers">miguelgd1985@gmail.com</parameter>
    <parameter key="email_app">miguelgd1985@gmail.com</parameter>
    <parameter key="email_payment_manager">miguelgd1985@gmail.com</parameter>
    <parameter key="email_info_wolopay">miguelgd1985@gmail.com</parameter>
    <parameter key="email_support_gamer">miguelgd1985@gmail.com</parameter>
    <parameter key="email_billing">miguelgd1985@gmail.com</parameter>
    <parameter key="email_invoices">miguelgd1985@gmail.com</parameter>
    <parameter key="email_finance">miguelgd1985@gmail.com</parameter>
    <parameter key="analitycs">null</parameter>
    <parameter key="business_intelligence_available">false</parameter>
    <parameter key="realtime">false</parameter>
    <parameter key="transaction.life_time">3600</parameter>
    <parameter key="api_version">1</parameter>
    <parameter key="api_wsse_algorithm">sha1</parameter>
    <parameter key="api_wsse_encodehashasbase64">true</parameter>
    <parameter key="api_wsse_iterations">1</parameter>
    <parameter key="api_wsse_realm">Secured with WSSE</parameter>
    <parameter key="api_wsse_profile">UsernameToken</parameter>
    <parameter key="api_wsse_lifetime">300</parameter>
    <parameter key="api_jwt_pass_phrase">1234</parameter>
    <parameter key="assets_version">1</parameter>
    <parameter key="snappy_binary_path">/usr/local/bin/wkhtmltopdf</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">AppBundle\Service\OverrideThirdBundles\JsonSerializationVisitor</parameter>
    <parameter key="assetic.filter.uglifyjs2.class">Assetic\Filter\UglifyJs2Filter</parameter>
    <parameter key="assetic.filter.uglifyjs2.bin">/home/mgarcia/npm/lib/node_modules/uglify-js/bin/uglifyjs</parameter>
    <parameter key="assetic.filter.uglifyjs2.node">/usr/bin/nodejs</parameter>
    <parameter key="assetic.filter.uglifyjs2.timeout">null</parameter>
    <parameter key="assetic.filter.uglifyjs2.node_paths" type="collection"/>
    <parameter key="assetic.filter.uglifyjs2.compress">false</parameter>
    <parameter key="assetic.filter.uglifyjs2.beautify">false</parameter>
    <parameter key="assetic.filter.uglifyjs2.mangle">false</parameter>
    <parameter key="assetic.filter.uglifyjs2.screw_ie8">false</parameter>
    <parameter key="assetic.filter.uglifyjs2.comments">false</parameter>
    <parameter key="assetic.filter.uglifyjs2.wrap">false</parameter>
    <parameter key="assetic.filter.uglifyjs2.defines" type="collection"/>
    <parameter key="selenium_server">http://localhost:4444/wd/hub</parameter>
    <parameter key="client_paypal_email">mgarcia@nviasms.com</parameter>
    <parameter key="client_paypal_password">Makalister11</parameter>
    <parameter key="client_rixty_username">Makalister</parameter>
    <parameter key="client_rixty_password">pw4742</parameter>
    <parameter key="force_env_test_to_test_dev">true</parameter>
    <parameter key="monolog.level">100</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">AppBundle\Tests\Lib\Doctrine\ConnectionFactoryTesting</parameter>
    <parameter key="controller_resolver.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver</parameter>
    <parameter key="controller_name_converter.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser</parameter>
    <parameter key="response_listener.class">Symfony\Component\HttpKernel\EventListener\ResponseListener</parameter>
    <parameter key="streamed_response_listener.class">Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</parameter>
    <parameter key="locale_listener.class">Symfony\Component\HttpKernel\EventListener\LocaleListener</parameter>
    <parameter key="event_dispatcher.class">Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher</parameter>
    <parameter key="http_kernel.class">Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel</parameter>
    <parameter key="filesystem.class">Symfony\Component\Filesystem\Filesystem</parameter>
    <parameter key="cache_warmer.class">Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate</parameter>
    <parameter key="cache_clearer.class">Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer</parameter>
    <parameter key="file_locator.class">Symfony\Component\HttpKernel\Config\FileLocator</parameter>
    <parameter key="uri_signer.class">Symfony\Component\HttpKernel\UriSigner</parameter>
    <parameter key="request_stack.class">Symfony\Component\HttpFoundation\RequestStack</parameter>
    <parameter key="fragment.handler.class">Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler</parameter>
    <parameter key="fragment.renderer.inline.class">Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.class">Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.renderer.esi.class">Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="translator.class">Symfony\Bundle\FrameworkBundle\Translation\Translator</parameter>
    <parameter key="translator.identity.class">Symfony\Component\Translation\IdentityTranslator</parameter>
    <parameter key="translator.selector.class">Symfony\Component\Translation\MessageSelector</parameter>
    <parameter key="translation.loader.php.class">Symfony\Component\Translation\Loader\PhpFileLoader</parameter>
    <parameter key="translation.loader.yml.class">Symfony\Component\Translation\Loader\YamlFileLoader</parameter>
    <parameter key="translation.loader.xliff.class">Symfony\Component\Translation\Loader\XliffFileLoader</parameter>
    <parameter key="translation.loader.po.class">Symfony\Component\Translation\Loader\PoFileLoader</parameter>
    <parameter key="translation.loader.mo.class">Symfony\Component\Translation\Loader\MoFileLoader</parameter>
    <parameter key="translation.loader.qt.class">Symfony\Component\Translation\Loader\QtFileLoader</parameter>
    <parameter key="translation.loader.csv.class">Symfony\Component\Translation\Loader\CsvFileLoader</parameter>
    <parameter key="translation.loader.res.class">Symfony\Component\Translation\Loader\IcuResFileLoader</parameter>
    <parameter key="translation.loader.dat.class">Symfony\Component\Translation\Loader\IcuDatFileLoader</parameter>
    <parameter key="translation.loader.ini.class">Symfony\Component\Translation\Loader\IniFileLoader</parameter>
    <parameter key="translation.loader.json.class">Symfony\Component\Translation\Loader\JsonFileLoader</parameter>
    <parameter key="translation.dumper.php.class">Symfony\Component\Translation\Dumper\PhpFileDumper</parameter>
    <parameter key="translation.dumper.xliff.class">Symfony\Component\Translation\Dumper\XliffFileDumper</parameter>
    <parameter key="translation.dumper.po.class">Symfony\Component\Translation\Dumper\PoFileDumper</parameter>
    <parameter key="translation.dumper.mo.class">Symfony\Component\Translation\Dumper\MoFileDumper</parameter>
    <parameter key="translation.dumper.yml.class">Symfony\Component\Translation\Dumper\YamlFileDumper</parameter>
    <parameter key="translation.dumper.qt.class">Symfony\Component\Translation\Dumper\QtFileDumper</parameter>
    <parameter key="translation.dumper.csv.class">Symfony\Component\Translation\Dumper\CsvFileDumper</parameter>
    <parameter key="translation.dumper.ini.class">Symfony\Component\Translation\Dumper\IniFileDumper</parameter>
    <parameter key="translation.dumper.json.class">Symfony\Component\Translation\Dumper\JsonFileDumper</parameter>
    <parameter key="translation.dumper.res.class">Symfony\Component\Translation\Dumper\IcuResFileDumper</parameter>
    <parameter key="translation.extractor.php.class">Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor</parameter>
    <parameter key="translation.loader.class">Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader</parameter>
    <parameter key="translation.extractor.class">Symfony\Component\Translation\Extractor\ChainExtractor</parameter>
    <parameter key="translation.writer.class">Symfony\Component\Translation\Writer\TranslationWriter</parameter>
    <parameter key="property_accessor.class">Symfony\Component\PropertyAccess\PropertyAccessor</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection">
      <parameter>127.0.0.1</parameter>
    </parameter>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="test.client.class">Symfony\Bundle\FrameworkBundle\Client</parameter>
    <parameter key="test.client.parameters" type="collection"/>
    <parameter key="test.client.history.class">Symfony\Component\BrowserKit\History</parameter>
    <parameter key="test.client.cookiejar.class">Symfony\Component\BrowserKit\CookieJar</parameter>
    <parameter key="test.session.listener.class">Symfony\Bundle\FrameworkBundle\EventListener\TestSessionListener</parameter>
    <parameter key="session.class">Symfony\Component\HttpFoundation\Session\Session</parameter>
    <parameter key="session.flashbag.class">Symfony\Component\HttpFoundation\Session\Flash\FlashBag</parameter>
    <parameter key="session.attribute_bag.class">Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag</parameter>
    <parameter key="session.storage.metadata_bag.class">Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.native.class">Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage</parameter>
    <parameter key="session.storage.php_bridge.class">Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage</parameter>
    <parameter key="session.storage.mock_file.class">Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage</parameter>
    <parameter key="session.handler.native_file.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler</parameter>
    <parameter key="session.handler.write_check.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler</parameter>
    <parameter key="session_listener.class">Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="name">WOLOPAY</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/var/www/wolopay/app/../var/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="security.secure_random.class">Symfony\Component\Security\Core\Util\SecureRandom</parameter>
    <parameter key="form.resolved_type_factory.class">Symfony\Component\Form\ResolvedFormTypeFactory</parameter>
    <parameter key="form.registry.class">Symfony\Component\Form\FormRegistry</parameter>
    <parameter key="form.factory.class">Symfony\Component\Form\FormFactory</parameter>
    <parameter key="form.extension.class">Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension</parameter>
    <parameter key="form.type_guesser.validator.class">Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</parameter>
    <parameter key="form.type_extension.form.request_handler.class">Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="security.csrf.token_generator.class">Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator</parameter>
    <parameter key="security.csrf.token_storage.class">Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage</parameter>
    <parameter key="security.csrf.token_manager.class">Symfony\Component\Security\Csrf\CsrfTokenManager</parameter>
    <parameter key="templating.engine.delegating.class">Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine</parameter>
    <parameter key="templating.name_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser</parameter>
    <parameter key="templating.filename_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser</parameter>
    <parameter key="templating.cache_warmer.template_paths.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer</parameter>
    <parameter key="templating.locator.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator</parameter>
    <parameter key="templating.loader.filesystem.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader</parameter>
    <parameter key="templating.loader.cache.class">Symfony\Component\Templating\Loader\CacheLoader</parameter>
    <parameter key="templating.loader.chain.class">Symfony\Component\Templating\Loader\ChainLoader</parameter>
    <parameter key="templating.finder.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder</parameter>
    <parameter key="templating.helper.assets.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper</parameter>
    <parameter key="templating.helper.router.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper</parameter>
    <parameter key="templating.helper.code.file_link_format">javascript: var r = new XMLHttpRequest; r.open('get', 'http://localhost:8091?message=%f:%l');r.send()</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.class">Symfony\Component\Validator\Validator\ValidatorInterface</parameter>
    <parameter key="validator.builder.class">Symfony\Component\Validator\ValidatorBuilderInterface</parameter>
    <parameter key="validator.builder.factory.class">Symfony\Component\Validator\Validation</parameter>
    <parameter key="validator.mapping.cache.apc.class">Symfony\Component\Validator\Mapping\Cache\ApcCache</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.validator_factory.class">Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory</parameter>
    <parameter key="validator.expression.class">Symfony\Component\Validator\Constraints\ExpressionValidator</parameter>
    <parameter key="validator.email.class">Symfony\Component\Validator\Constraints\EmailValidator</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="validator.api">2.5-bc</parameter>
    <parameter key="fragment.listener.class">Symfony\Component\HttpKernel\EventListener\FragmentListener</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="profiler.class">Symfony\Component\HttpKernel\Profiler\Profiler</parameter>
    <parameter key="profiler_listener.class">Symfony\Component\HttpKernel\EventListener\ProfilerListener</parameter>
    <parameter key="data_collector.config.class">Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector</parameter>
    <parameter key="data_collector.request.class">Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</parameter>
    <parameter key="data_collector.exception.class">Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector</parameter>
    <parameter key="data_collector.events.class">Symfony\Component\HttpKernel\DataCollector\EventDataCollector</parameter>
    <parameter key="data_collector.logger.class">Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector</parameter>
    <parameter key="data_collector.time.class">Symfony\Component\HttpKernel\DataCollector\TimeDataCollector</parameter>
    <parameter key="data_collector.memory.class">Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector</parameter>
    <parameter key="data_collector.router.class">Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector</parameter>
    <parameter key="form.resolved_type_factory.data_collector_proxy.class">Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy</parameter>
    <parameter key="form.type_extension.form.data_collector.class">Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</parameter>
    <parameter key="data_collector.form.class">Symfony\Component\Form\Extension\DataCollector\FormDataCollector</parameter>
    <parameter key="data_collector.form.extractor.class">Symfony\Component\Form\Extension\DataCollector\FormDataExtractor</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/var/www/wolopay/var/cache/test_dev/profiler</parameter>
    <parameter key="profiler.storage.username"></parameter>
    <parameter key="profiler.storage.password"></parameter>
    <parameter key="profiler.storage.lifetime">86400</parameter>
    <parameter key="router.class">Symfony\Bundle\FrameworkBundle\Routing\Router</parameter>
    <parameter key="router.request_context.class">Symfony\Component\Routing\RequestContext</parameter>
    <parameter key="routing.loader.class">Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader</parameter>
    <parameter key="routing.resolver.class">Symfony\Component\Config\Loader\LoaderResolver</parameter>
    <parameter key="routing.loader.xml.class">Symfony\Component\Routing\Loader\XmlFileLoader</parameter>
    <parameter key="routing.loader.yml.class">Symfony\Component\Routing\Loader\YamlFileLoader</parameter>
    <parameter key="routing.loader.php.class">Symfony\Component\Routing\Loader\PhpFileLoader</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.cache_warmer.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer</parameter>
    <parameter key="router.options.matcher.cache_class">appTest_devUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appTest_devUrlGenerator</parameter>
    <parameter key="router_listener.class">Symfony\Component\HttpKernel\EventListener\RouterListener</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/var/www/wolopay/app/config/routing.yml</parameter>
    <parameter key="router.cache_class_prefix">appTest_dev</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="annotations.reader.class">Doctrine\Common\Annotations\AnnotationReader</parameter>
    <parameter key="annotations.cached_reader.class">Doctrine\Common\Annotations\CachedReader</parameter>
    <parameter key="annotations.file_cache_reader.class">Doctrine\Common\Annotations\FileCacheReader</parameter>
    <parameter key="debug.debug_handlers_listener.class">Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</parameter>
    <parameter key="debug.stopwatch.class">Symfony\Component\Stopwatch\Stopwatch</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.event_dispatcher.class">Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher</parameter>
    <parameter key="debug.container.dump">/var/www/wolopay/var/cache/test_dev/appTest_devDebugProjectContainer.xml</parameter>
    <parameter key="debug.controller_resolver.class">Symfony\Component\HttpKernel\Controller\TraceableControllerResolver</parameter>
    <parameter key="security.context.class">Symfony\Component\Security\Core\SecurityContext</parameter>
    <parameter key="security.user_checker.class">Symfony\Component\Security\Core\User\UserChecker</parameter>
    <parameter key="security.encoder_factory.generic.class">Symfony\Component\Security\Core\Encoder\EncoderFactory</parameter>
    <parameter key="security.encoder.digest.class">Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder</parameter>
    <parameter key="security.encoder.plain.class">Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder</parameter>
    <parameter key="security.encoder.pbkdf2.class">Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder</parameter>
    <parameter key="security.encoder.bcrypt.class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</parameter>
    <parameter key="security.user.provider.in_memory.class">Symfony\Component\Security\Core\User\InMemoryUserProvider</parameter>
    <parameter key="security.user.provider.in_memory.user.class">Symfony\Component\Security\Core\User\User</parameter>
    <parameter key="security.user.provider.chain.class">Symfony\Component\Security\Core\User\ChainUserProvider</parameter>
    <parameter key="security.authentication.trust_resolver.class">Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.authentication.manager.class">Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager</parameter>
    <parameter key="security.authentication.session_strategy.class">Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy</parameter>
    <parameter key="security.access.decision_manager.class">Symfony\Component\Security\Core\Authorization\AccessDecisionManager</parameter>
    <parameter key="security.access.simple_role_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleVoter</parameter>
    <parameter key="security.access.authenticated_voter.class">Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter</parameter>
    <parameter key="security.access.role_hierarchy_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter</parameter>
    <parameter key="security.access.expression_voter.class">Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter</parameter>
    <parameter key="security.firewall.class">Symfony\Component\Security\Http\Firewall</parameter>
    <parameter key="security.firewall.map.class">Symfony\Bundle\SecurityBundle\Security\FirewallMap</parameter>
    <parameter key="security.firewall.context.class">Symfony\Bundle\SecurityBundle\Security\FirewallContext</parameter>
    <parameter key="security.matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="security.expression_matcher.class">Symfony\Component\HttpFoundation\ExpressionRequestMatcher</parameter>
    <parameter key="security.role_hierarchy.class">Symfony\Component\Security\Core\Role\RoleHierarchy</parameter>
    <parameter key="security.http_utils.class">Symfony\Component\Security\Http\HttpUtils</parameter>
    <parameter key="security.validator.user_password.class">Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator</parameter>
    <parameter key="security.expression_language.class">Symfony\Component\Security\Core\Authorization\ExpressionLanguage</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_APP_ADMIN_FIN_MOVEMENT_ALL" type="collection">
        <parameter>ROLE_APP_ADMIN_FIN_MOVEMENT_LIST</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_MOVEMENT_VIEW</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_MOVEMENT_CREATE</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_MOVEMENT_EDIT</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_MOVEMENT_DELETE</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_MOVEMENT_EXPORT</parameter>
      </parameter>
      <parameter key="ROLE_APP_ADMIN_FIN_INVOICE_ALL" type="collection">
        <parameter>ROLE_APP_ADMIN_FIN_INVOICE_LIST</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_INVOICE_VIEW</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_INVOICE_CREATE</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_INVOICE_EDIT</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_INVOICE_DELETE</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_INVOICE_EXPORT</parameter>
      </parameter>
      <parameter key="ROLE_APP_ADMIN_CLIENT_DOCUMENT_ALL" type="collection">
        <parameter>ROLE_APP_ADMIN_CLIENT_DOCUMENT_LIST</parameter>
        <parameter>ROLE_APP_ADMIN_CLIENT_DOCUMENT_VIEW</parameter>
        <parameter>ROLE_APP_ADMIN_CLIENT_DOCUMENT_CREATE</parameter>
        <parameter>ROLE_APP_ADMIN_CLIENT_DOCUMENT_EDIT</parameter>
        <parameter>ROLE_APP_ADMIN_CLIENT_DOCUMENT_DELETE</parameter>
        <parameter>ROLE_APP_ADMIN_CLIENT_DOCUMENT_EXPORT</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_TRANSLATOR</parameter>
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_SONATA_ADMIN</parameter>
        <parameter>ROLE_ADMIN_CLIENT</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
        <parameter>ROLE_TEST</parameter>
        <parameter>ROLE_SONATA_FIN_MOVEMENT</parameter>
        <parameter>ROLE_SONATA_STATS_INTERNAL</parameter>
        <parameter>ROLE_SONATA_BILLING_INVOICES_PENDING_ALL</parameter>
      </parameter>
      <parameter key="ROLE_SONATA_FIN_MOVEMENT" type="collection">
        <parameter>ROLE_SONATA_ADMIN</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_MOVEMENT_ALL</parameter>
        <parameter>ROLE_APP_ADMIN_FIN_INVOICE_ALL</parameter>
        <parameter>ROLE_SONATA_STATS_INTERNAL</parameter>
        <parameter>ROLE_APP_ADMIN_CLIENT_DOCUMENT_ALL</parameter>
      </parameter>
      <parameter key="ROLE_SONATA_STATS_INTERNAL" type="collection">
        <parameter>ROLE_SONATA_ADMIN</parameter>
        <parameter>ROLE_SONATA_STATS_INTERNAL_ALL</parameter>
      </parameter>
    </parameter>
    <parameter key="security.authentication.retry_entry_point.class">Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint</parameter>
    <parameter key="security.channel_listener.class">Symfony\Component\Security\Http\Firewall\ChannelListener</parameter>
    <parameter key="security.authentication.form_entry_point.class">Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.form.class">Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_form.class">Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_preauth.class">Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.basic.class">Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener</parameter>
    <parameter key="security.authentication.basic_entry_point.class">Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.digest.class">Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener</parameter>
    <parameter key="security.authentication.digest_entry_point.class">Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.x509.class">Symfony\Component\Security\Http\Firewall\X509AuthenticationListener</parameter>
    <parameter key="security.authentication.listener.anonymous.class">Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener</parameter>
    <parameter key="security.authentication.switchuser_listener.class">Symfony\Component\Security\Http\Firewall\SwitchUserListener</parameter>
    <parameter key="security.logout_listener.class">Symfony\Component\Security\Http\Firewall\LogoutListener</parameter>
    <parameter key="security.logout.handler.session.class">Symfony\Component\Security\Http\Logout\SessionLogoutHandler</parameter>
    <parameter key="security.logout.handler.cookie_clearing.class">Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler</parameter>
    <parameter key="security.logout.success_handler.class">Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler</parameter>
    <parameter key="security.access_listener.class">Symfony\Component\Security\Http\Firewall\AccessListener</parameter>
    <parameter key="security.access_map.class">Symfony\Component\Security\Http\AccessMap</parameter>
    <parameter key="security.exception_listener.class">Symfony\Component\Security\Http\Firewall\ExceptionListener</parameter>
    <parameter key="security.context_listener.class">Symfony\Component\Security\Http\Firewall\ContextListener</parameter>
    <parameter key="security.authentication.provider.dao.class">Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.simple.class">Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.pre_authenticated.class">Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.anonymous.class">Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider</parameter>
    <parameter key="security.authentication.success_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler</parameter>
    <parameter key="security.authentication.failure_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler</parameter>
    <parameter key="security.authentication.simple_success_failure_handler.class">Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler</parameter>
    <parameter key="security.authentication.provider.rememberme.class">Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider</parameter>
    <parameter key="security.authentication.listener.rememberme.class">Symfony\Component\Security\Http\Firewall\RememberMeListener</parameter>
    <parameter key="security.rememberme.token.provider.in_memory.class">Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider</parameter>
    <parameter key="security.authentication.rememberme.services.persistent.class">Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices</parameter>
    <parameter key="security.authentication.rememberme.services.simplehash.class">Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices</parameter>
    <parameter key="security.rememberme.response_listener.class">Symfony\Component\Security\Http\RememberMe\ResponseListener</parameter>
    <parameter key="templating.helper.logout_url.class">Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper</parameter>
    <parameter key="templating.helper.security.class">Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper</parameter>
    <parameter key="twig.extension.logout_url.class">Symfony\Bridge\Twig\Extension\LogoutUrlExtension</parameter>
    <parameter key="twig.extension.security.class">Symfony\Bridge\Twig\Extension\SecurityExtension</parameter>
    <parameter key="data_collector.security.class">Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector</parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.class">Twig_Environment</parameter>
    <parameter key="twig.loader.filesystem.class">Symfony\Bundle\TwigBundle\Loader\FilesystemLoader</parameter>
    <parameter key="twig.loader.chain.class">Twig_Loader_Chain</parameter>
    <parameter key="templating.engine.twig.class">Symfony\Bundle\TwigBundle\TwigEngine</parameter>
    <parameter key="twig.cache_warmer.class">Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer</parameter>
    <parameter key="twig.extension.trans.class">Symfony\Bridge\Twig\Extension\TranslationExtension</parameter>
    <parameter key="twig.extension.actions.class">Symfony\Bundle\TwigBundle\Extension\ActionsExtension</parameter>
    <parameter key="twig.extension.code.class">Symfony\Bridge\Twig\Extension\CodeExtension</parameter>
    <parameter key="twig.extension.routing.class">Symfony\Bridge\Twig\Extension\RoutingExtension</parameter>
    <parameter key="twig.extension.yaml.class">Symfony\Bridge\Twig\Extension\YamlExtension</parameter>
    <parameter key="twig.extension.form.class">Symfony\Bridge\Twig\Extension\FormExtension</parameter>
    <parameter key="twig.extension.httpkernel.class">Symfony\Bridge\Twig\Extension\HttpKernelExtension</parameter>
    <parameter key="twig.extension.debug.stopwatch.class">Symfony\Bridge\Twig\Extension\StopwatchExtension</parameter>
    <parameter key="twig.extension.expression.class">Symfony\Bridge\Twig\Extension\ExpressionExtension</parameter>
    <parameter key="twig.form.engine.class">Symfony\Bridge\Twig\Form\TwigRendererEngine</parameter>
    <parameter key="twig.form.renderer.class">Symfony\Bridge\Twig\Form\TwigRenderer</parameter>
    <parameter key="twig.translation.extractor.class">Symfony\Bridge\Twig\Translation\TwigExtractor</parameter>
    <parameter key="twig.exception_listener.class">Symfony\Component\HttpKernel\EventListener\ExceptionListener</parameter>
    <parameter key="twig.controller.exception.class">Symfony\Bundle\TwigBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.controller.preview_error.class">Symfony\Bundle\TwigBundle\Controller\PreviewErrorController</parameter>
    <parameter key="twig.exception_listener.controller">AppBundle\Exception\TwigException::showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>GregwarCaptchaBundle::captcha.html.twig</parameter>
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>SonataCoreBundle:Form:datepicker.html.twig</parameter>
      <parameter>::Sonata/media_widgets.html.twig</parameter>
      <parameter>@App/Partials/captcha_horizontal.html.twig</parameter>
      <parameter>BraincraftedBootstrapBundle:Form:bootstrap.html.twig</parameter>
    </parameter>
    <parameter key="monolog.logger.class">Symfony\Bridge\Monolog\Logger</parameter>
    <parameter key="monolog.gelf.publisher.class">Gelf\MessagePublisher</parameter>
    <parameter key="monolog.gelfphp.publisher.class">Gelf\Publisher</parameter>
    <parameter key="monolog.handler.stream.class">Monolog\Handler\StreamHandler</parameter>
    <parameter key="monolog.handler.console.class">Symfony\Bridge\Monolog\Handler\ConsoleHandler</parameter>
    <parameter key="monolog.handler.group.class">Monolog\Handler\GroupHandler</parameter>
    <parameter key="monolog.handler.buffer.class">Monolog\Handler\BufferHandler</parameter>
    <parameter key="monolog.handler.deduplication.class">Monolog\Handler\DeduplicationHandler</parameter>
    <parameter key="monolog.handler.rotating_file.class">Monolog\Handler\RotatingFileHandler</parameter>
    <parameter key="monolog.handler.syslog.class">Monolog\Handler\SyslogHandler</parameter>
    <parameter key="monolog.handler.syslogudp.class">Monolog\Handler\SyslogUdpHandler</parameter>
    <parameter key="monolog.handler.null.class">Monolog\Handler\NullHandler</parameter>
    <parameter key="monolog.handler.test.class">Monolog\Handler\TestHandler</parameter>
    <parameter key="monolog.handler.gelf.class">Monolog\Handler\GelfHandler</parameter>
    <parameter key="monolog.handler.rollbar.class">Monolog\Handler\RollbarHandler</parameter>
    <parameter key="monolog.handler.flowdock.class">Monolog\Handler\FlowdockHandler</parameter>
    <parameter key="monolog.handler.browser_console.class">Monolog\Handler\BrowserConsoleHandler</parameter>
    <parameter key="monolog.handler.firephp.class">Symfony\Bridge\Monolog\Handler\FirePHPHandler</parameter>
    <parameter key="monolog.handler.chromephp.class">Symfony\Bridge\Monolog\Handler\ChromePhpHandler</parameter>
    <parameter key="monolog.handler.debug.class">Symfony\Bridge\Monolog\Handler\DebugHandler</parameter>
    <parameter key="monolog.handler.swift_mailer.class">Symfony\Bridge\Monolog\Handler\SwiftMailerHandler</parameter>
    <parameter key="monolog.handler.native_mailer.class">Monolog\Handler\NativeMailerHandler</parameter>
    <parameter key="monolog.handler.socket.class">Monolog\Handler\SocketHandler</parameter>
    <parameter key="monolog.handler.pushover.class">Monolog\Handler\PushoverHandler</parameter>
    <parameter key="monolog.handler.raven.class">Monolog\Handler\RavenHandler</parameter>
    <parameter key="monolog.handler.newrelic.class">Monolog\Handler\NewRelicHandler</parameter>
    <parameter key="monolog.handler.hipchat.class">Monolog\Handler\HipChatHandler</parameter>
    <parameter key="monolog.handler.slack.class">Monolog\Handler\SlackHandler</parameter>
    <parameter key="monolog.handler.cube.class">Monolog\Handler\CubeHandler</parameter>
    <parameter key="monolog.handler.amqp.class">Monolog\Handler\AmqpHandler</parameter>
    <parameter key="monolog.handler.error_log.class">Monolog\Handler\ErrorLogHandler</parameter>
    <parameter key="monolog.handler.loggly.class">Monolog\Handler\LogglyHandler</parameter>
    <parameter key="monolog.handler.logentries.class">Monolog\Handler\LogEntriesHandler</parameter>
    <parameter key="monolog.handler.whatfailuregroup.class">Monolog\Handler\WhatFailureGroupHandler</parameter>
    <parameter key="monolog.activation_strategy.not_found.class">Symfony\Bundle\MonologBundle\NotFoundActivationStrategy</parameter>
    <parameter key="monolog.handler.fingers_crossed.class">Monolog\Handler\FingersCrossedHandler</parameter>
    <parameter key="monolog.handler.fingers_crossed.error_level_activation_strategy.class">Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy</parameter>
    <parameter key="monolog.handler.filter.class">Monolog\Handler\FilterHandler</parameter>
    <parameter key="monolog.handler.mongo.class">Monolog\Handler\MongoDBHandler</parameter>
    <parameter key="monolog.mongo.client.class">MongoClient</parameter>
    <parameter key="monolog.handler.elasticsearch.class">Monolog\Handler\ElasticSearchHandler</parameter>
    <parameter key="monolog.elastica.client.class">Elastica\Client</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection"/>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">false</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">ssl</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">465</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">smtp.gmail.com</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">miguelgd1985@gmail.com</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">Makalister10</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">login</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/var/www/wolopay/var/cache/test_dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">false</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="assetic.asset_factory.class">Symfony\Bundle\AsseticBundle\Factory\AssetFactory</parameter>
    <parameter key="assetic.asset_manager.class">Assetic\Factory\LazyAssetManager</parameter>
    <parameter key="assetic.asset_manager_cache_warmer.class">Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer</parameter>
    <parameter key="assetic.cached_formula_loader.class">Assetic\Factory\Loader\CachedFormulaLoader</parameter>
    <parameter key="assetic.config_cache.class">Assetic\Cache\ConfigCache</parameter>
    <parameter key="assetic.config_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader</parameter>
    <parameter key="assetic.config_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource</parameter>
    <parameter key="assetic.coalescing_directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource</parameter>
    <parameter key="assetic.directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource</parameter>
    <parameter key="assetic.filter_manager.class">Symfony\Bundle\AsseticBundle\FilterManager</parameter>
    <parameter key="assetic.worker.ensure_filter.class">Assetic\Factory\Worker\EnsureFilterWorker</parameter>
    <parameter key="assetic.worker.cache_busting.class">Assetic\Factory\Worker\CacheBustingWorker</parameter>
    <parameter key="assetic.value_supplier.class">Symfony\Bundle\AsseticBundle\DefaultValueSupplier</parameter>
    <parameter key="assetic.node.paths" type="collection"/>
    <parameter key="assetic.cache_dir">/var/www/wolopay/var/cache/test_dev/assetic</parameter>
    <parameter key="assetic.bundles" type="collection">
      <parameter>FOSUserBundle</parameter>
      <parameter>AppBundle</parameter>
    </parameter>
    <parameter key="assetic.twig_extension.class">Symfony\Bundle\AsseticBundle\Twig\AsseticExtension</parameter>
    <parameter key="assetic.twig_formula_loader.class">Assetic\Extension\Twig\TwigFormulaLoader</parameter>
    <parameter key="assetic.helper.dynamic.class">Symfony\Bundle\AsseticBundle\Templating\DynamicAsseticHelper</parameter>
    <parameter key="assetic.helper.static.class">Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper</parameter>
    <parameter key="assetic.php_formula_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader</parameter>
    <parameter key="assetic.debug">true</parameter>
    <parameter key="assetic.use_controller">false</parameter>
    <parameter key="assetic.enable_profiler">false</parameter>
    <parameter key="assetic.read_from">/var/www/wolopay/app/../web</parameter>
    <parameter key="assetic.write_to">/var/www/wolopay/app/../web</parameter>
    <parameter key="assetic.variables" type="collection"/>
    <parameter key="assetic.java.bin">/usr/bin/java</parameter>
    <parameter key="assetic.node.bin">/usr/bin/nodejs</parameter>
    <parameter key="assetic.ruby.bin">/usr/bin/ruby</parameter>
    <parameter key="assetic.sass.bin">/usr/bin/sass</parameter>
    <parameter key="assetic.reactjsx.bin">/usr/bin/jsx</parameter>
    <parameter key="assetic.filter.less.class">Assetic\Filter\LessFilter</parameter>
    <parameter key="assetic.filter.less.node">/usr/bin/nodejs</parameter>
    <parameter key="assetic.filter.less.node_paths" type="collection">
      <parameter>/home/mgarcia/npm/lib/node_modules/</parameter>
    </parameter>
    <parameter key="assetic.filter.less.timeout">null</parameter>
    <parameter key="assetic.filter.less.compress">true</parameter>
    <parameter key="assetic.filter.less.load_paths" type="collection"/>
    <parameter key="assetic.filter.cssrewrite.class">Assetic\Filter\CssRewriteFilter</parameter>
    <parameter key="assetic.twig_extension.functions" type="collection"/>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="json" type="collection">
        <parameter key="class">Sonata\Doctrine\Types\JsonType</parameter>
        <parameter key="commented">true</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\ORM\Mapping\DefaultEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/wolopay/var/cache/test_dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="doctrine_migrations.dir_name">/var/www/wolopay/app/DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.namespace">Application\Migrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="gregwar_captcha.captcha_type.class">Gregwar\CaptchaBundle\Type\CaptchaType</parameter>
    <parameter key="gregwar_captcha.captcha_generator.class">Gregwar\CaptchaBundle\Generator\CaptchaGenerator</parameter>
    <parameter key="gregwar_captcha.image_file_handler.class">Gregwar\CaptchaBundle\Generator\ImageFileHandler</parameter>
    <parameter key="gregwar_captcha.captcha_builder.class">Gregwar\Captcha\CaptchaBuilder</parameter>
    <parameter key="gregwar_captcha.phrase_builder.class">Gregwar\Captcha\PhraseBuilder</parameter>
    <parameter key="gregwar_captcha.config" type="collection">
      <parameter key="length">5</parameter>
      <parameter key="width">130</parameter>
      <parameter key="height">50</parameter>
      <parameter key="font">/var/www/wolopay/vendor/gregwar/captcha-bundle/DependencyInjection/../Generator/Font/captcha.ttf</parameter>
      <parameter key="keep_value">false</parameter>
      <parameter key="charset">abcdefhjkmnprstuvwxyz23456789</parameter>
      <parameter key="as_file">false</parameter>
      <parameter key="as_url">false</parameter>
      <parameter key="reload">false</parameter>
      <parameter key="image_folder">captcha</parameter>
      <parameter key="web_path">/var/www/wolopay/app/../web</parameter>
      <parameter key="gc_freq">100</parameter>
      <parameter key="expiration">60</parameter>
      <parameter key="quality">30</parameter>
      <parameter key="invalid_message">Bad code value</parameter>
      <parameter key="bypass_code">null</parameter>
      <parameter key="whitelist_key">captcha_whitelist_key</parameter>
      <parameter key="humanity">0</parameter>
      <parameter key="distortion">true</parameter>
      <parameter key="max_front_lines">null</parameter>
      <parameter key="max_behind_lines">null</parameter>
      <parameter key="interpolation">true</parameter>
      <parameter key="text_color" type="collection"/>
      <parameter key="background_color" type="collection"/>
      <parameter key="background_images" type="collection"/>
      <parameter key="disabled">false</parameter>
      <parameter key="ignore_all_effects">false</parameter>
    </parameter>
    <parameter key="gregwar_captcha.config.image_folder">captcha</parameter>
    <parameter key="gregwar_captcha.config.web_path">/var/www/wolopay/app/../web</parameter>
    <parameter key="gregwar_captcha.config.gc_freq">100</parameter>
    <parameter key="gregwar_captcha.config.expiration">60</parameter>
    <parameter key="gregwar_captcha.config.whitelist_key">captcha_whitelist_key</parameter>
    <parameter key="braincrafted_bootstrap.form.type.collection.class">Braincrafted\Bundle\BootstrapBundle\Form\Type\BootstrapCollectionType</parameter>
    <parameter key="braincrafted_bootstrap.form.type.money.class">Braincrafted\Bundle\BootstrapBundle\Form\Type\MoneyType</parameter>
    <parameter key="braincrafted_bootstrap.form.type.form_actions.class">Braincrafted\Bundle\BootstrapBundle\Form\Type\FormActionsType</parameter>
    <parameter key="braincrafted_bootstrap.form.type.form_static_control.class">Braincrafted\Bundle\BootstrapBundle\Form\Type\FormStaticControlType</parameter>
    <parameter key="braincrafted_bootstrap.form.extension.typesetter_extension.class">Braincrafted\Bundle\BootstrapBundle\Form\Extension\TypeSetterExtension</parameter>
    <parameter key="braincrafted_bootstrap.form.extension.button_extension.class">Braincrafted\Bundle\BootstrapBundle\Form\Extension\ButtonTypeExtension</parameter>
    <parameter key="braincrafted_bootstrap.form.extension.static_control.class">Braincrafted\Bundle\BootstrapBundle\Form\Extension\StaticControlExtension</parameter>
    <parameter key="braincrafted_bootstrap.form.extension.input_group_button.class">Braincrafted\Bundle\BootstrapBundle\Form\Extension\InputGroupButtonExtension</parameter>
    <parameter key="braincrafted_bootstrap.twig.icon_extension.class">Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapIconExtension</parameter>
    <parameter key="braincrafted_bootstrap.twig.button_extension.class">Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapButtonExtension</parameter>
    <parameter key="braincrafted_bootstrap.twig.label_extension.class">Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapLabelExtension</parameter>
    <parameter key="braincrafted_bootstrap.twig.badge_extension.class">Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapBadgeExtension</parameter>
    <parameter key="braincrafted_bootstrap.twig.form_extension.class">Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapFormExtension</parameter>
    <parameter key="braincrafted_bootstrap.icon_prefix">glyphicon</parameter>
    <parameter key="braincrafted_bootstrap.flash.class">Braincrafted\Bundle\BootstrapBundle\Session\FlashMessage</parameter>
    <parameter key="braincrafted_bootstrap.customize" type="collection">
      <parameter key="bootstrap_output">/var/www/wolopay/app/Resources/less/bootstrap.less</parameter>
      <parameter key="bootstrap_template">BraincraftedBootstrapBundle:Bootstrap:bootstrap.less.twig</parameter>
    </parameter>
    <parameter key="braincrafted_bootstrap.assets_dir">/var/www/wolopay/app/../vendor/twbs/bootstrap</parameter>
    <parameter key="braincrafted_bootstrap.fontawesome_dir">/var/www/wolopay/app/../vendor/fortawesome/font-awesome</parameter>
    <parameter key="braincrafted_bootstrap.fonts_dir">/var/www/wolopay/app/../web/fonts</parameter>
    <parameter key="braincrafted_bootstrap.output_dir"></parameter>
    <parameter key="braincrafted_bootstrap.css_preprocessor">less</parameter>
    <parameter key="braincrafted_bootstrap.icon_tag">span</parameter>
    <parameter key="guzzle.client.class">Guzzle\Service\Client</parameter>
    <parameter key="misd_guzzle.listener.request_listener.class">Misd\GuzzleBundle\EventListener\RequestListener</parameter>
    <parameter key="misd_guzzle.data_collector.class">Misd\GuzzleBundle\DataCollector\GuzzleDataCollector</parameter>
    <parameter key="misd_guzzle.log.format">{hostname} {req_header_User-Agent} - [{ts}] "{method} {resource} {protocol}/{version}" {code} {res_header_Content-Length}</parameter>
    <parameter key="guzzle.plugin.async.class">Guzzle\Plugin\Async\AsyncPlugin</parameter>
    <parameter key="guzzle.plugin.backoff.class">Guzzle\Plugin\Backoff\BackoffPlugin</parameter>
    <parameter key="guzzle.plugin.cache.class">Guzzle\Plugin\Cache\CachePlugin</parameter>
    <parameter key="guzzle.plugin.cookie.class">Guzzle\Plugin\Cookie\CookiePlugin</parameter>
    <parameter key="guzzle.plugin.curl_auth.class">Guzzle\Plugin\CurlAuth\CurlAuthPlugin</parameter>
    <parameter key="guzzle.plugin.error_response.class">Guzzle\Plugin\ErrorResponse\ErrorResponsePlugin</parameter>
    <parameter key="guzzle.plugin.history.class">Guzzle\Plugin\History\HistoryPlugin</parameter>
    <parameter key="guzzle.plugin.log.class">Guzzle\Plugin\Log\LogPlugin</parameter>
    <parameter key="guzzle.plugin.md5_validator.class">Guzzle\Plugin\Md5\Md5ValidatorPlugin</parameter>
    <parameter key="guzzle.plugin.command_content_md5.class">Guzzle\Plugin\Md5\CommandContentMd5Plugin</parameter>
    <parameter key="guzzle.plugin.mock.class">Guzzle\Plugin\Mock\MockPlugin</parameter>
    <parameter key="guzzle.plugin.oauth.class">Guzzle\Plugin\Oauth\OauthPlugin</parameter>
    <parameter key="guzzle.log.adapter.monolog.class">Guzzle\Log\MonologLogAdapter</parameter>
    <parameter key="guzzle.log.adapter.array.class">Guzzle\Log\ArrayLogAdapter</parameter>
    <parameter key="misd_guzzle.listener.command.class">Misd\GuzzleBundle\EventListener\CommandListener</parameter>
    <parameter key="misd_guzzle.request.visitor.body.class">Misd\GuzzleBundle\Service\Command\LocationVisitor\Request\JMSSerializerBodyVisitor</parameter>
    <parameter key="misd_guzzle.response.parser.class">Misd\GuzzleBundle\Service\Command\JMSSerializerResponseParser</parameter>
    <parameter key="misd_guzzle.response.parser.fallback.class">Guzzle\Service\Command\OperationResponseParser</parameter>
    <parameter key="misd_guzzle.param_converter.class">Misd\GuzzleBundle\Request\ParamConverter\GuzzleParamConverter3x</parameter>
    <parameter key="guzzle.service_description.class">Guzzle\Service\Description\ServiceDescription</parameter>
    <parameter key="guzzle.service_builder.class">Guzzle\Service\Builder\ServiceBuilder</parameter>
    <parameter key="guzzle.service_builder.configuration_file">/var/www/wolopay/app/config/webservices.json</parameter>
    <parameter key="guzzle.cache.doctrine.class">Guzzle\Cache\DoctrineCacheAdapter</parameter>
    <parameter key="guzzle.cache.doctrine.filesystem.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="misd_guzzle.cache.filesystem.path">/var/www/wolopay/var/cache/test_dev/guzzle/</parameter>
    <parameter key="misd_guzzle.log.enabled">false</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.locale.class">Stof\DoctrineExtensionsBundle\EventListener\LocaleListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.logger.class">Stof\DoctrineExtensionsBundle\EventListener\LoggerListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.blame.class">Stof\DoctrineExtensionsBundle\EventListener\BlameListener</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.manager.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.mime_type_guesser.class">Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.default_file_info.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</parameter>
    <parameter key="stof_doctrine_extensions.default_locale">en</parameter>
    <parameter key="stof_doctrine_extensions.default_file_path">null</parameter>
    <parameter key="stof_doctrine_extensions.translation_fallback">false</parameter>
    <parameter key="stof_doctrine_extensions.persist_default_translation">false</parameter>
    <parameter key="stof_doctrine_extensions.skip_translation_on_load">false</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.validate_writable_directory">true</parameter>
    <parameter key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</parameter>
    <parameter key="fos_js_routing.extractor.class">FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor</parameter>
    <parameter key="fos_js_routing.controller.class">FOS\JsRoutingBundle\Controller\Controller</parameter>
    <parameter key="fos_js_routing.cache_control" type="collection">
      <parameter key="enabled">false</parameter>
    </parameter>
    <parameter key="fos_rest.serializer.exclusion_strategy.version"></parameter>
    <parameter key="fos_rest.serializer.exclusion_strategy.groups"></parameter>
    <parameter key="fos_rest.view_handler.jsonp.callback_param"></parameter>
    <parameter key="fos_rest.view.exception_wrapper_handler">FOS\RestBundle\View\ExceptionWrapperHandler</parameter>
    <parameter key="fos_rest.view_handler.default.class">FOS\RestBundle\View\ViewHandler</parameter>
    <parameter key="fos_rest.view_handler.jsonp.class">FOS\RestBundle\View\JsonpHandler</parameter>
    <parameter key="fos_rest.serializer.exception_wrapper_serialize_handler.class">FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler</parameter>
    <parameter key="fos_rest.routing.loader.controller.class">FOS\RestBundle\Routing\Loader\RestRouteLoader</parameter>
    <parameter key="fos_rest.routing.loader.yaml_collection.class">FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader</parameter>
    <parameter key="fos_rest.routing.loader.xml_collection.class">FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader</parameter>
    <parameter key="fos_rest.routing.loader.processor.class">FOS\RestBundle\Routing\Loader\RestRouteProcessor</parameter>
    <parameter key="fos_rest.routing.loader.reader.controller.class">FOS\RestBundle\Routing\Loader\Reader\RestControllerReader</parameter>
    <parameter key="fos_rest.routing.loader.reader.action.class">FOS\RestBundle\Routing\Loader\Reader\RestActionReader</parameter>
    <parameter key="fos_rest.format_negotiator.class">FOS\RestBundle\Util\FormatNegotiator</parameter>
    <parameter key="fos_rest.inflector.class">FOS\RestBundle\Util\Inflector\DoctrineInflector</parameter>
    <parameter key="fos_rest.request_matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="fos_rest.violation_formatter.class">FOS\RestBundle\Util\ViolationFormatter</parameter>
    <parameter key="fos_rest.request.param_fetcher.class">FOS\RestBundle\Request\ParamFetcher</parameter>
    <parameter key="fos_rest.request.param_fetcher.reader.class">FOS\RestBundle\Request\ParamReader</parameter>
    <parameter key="fos_rest.cache_dir">/var/www/wolopay/var/cache/test_dev/fos_rest</parameter>
    <parameter key="fos_rest.routing.loader.default_format">json</parameter>
    <parameter key="fos_rest.routing.loader.include_format">true</parameter>
    <parameter key="fos_rest.serializer.serialize_null">true</parameter>
    <parameter key="fos_rest.exception_listener.class">Symfony\Component\HttpKernel\EventListener\ExceptionListener</parameter>
    <parameter key="fos_rest.controller.exception.class">FOS\RestBundle\Controller\ExceptionController</parameter>
    <parameter key="fos_rest.exception_listener.controller">fos_rest.controller.exception:showAction</parameter>
    <parameter key="fos_rest.exception.codes" type="collection">
      <parameter key="Doctrine\ORM\OptimisticLockException">409</parameter>
    </parameter>
    <parameter key="fos_rest.exception.messages" type="collection">
      <parameter key="Symfony\Component\Routing\Exception\ResourceNotFoundException">true</parameter>
      <parameter key="Symfony\Component\HttpKernel\Exception\BadRequestHttpException">true</parameter>
      <parameter key="Symfony\Component\HttpKernel\Exception\UnprocessableEntityHttpException">true</parameter>
      <parameter key="AppBundle\Exception\NviaApiPublicException">true</parameter>
    </parameter>
    <parameter key="fos_rest.converter.request_body.class">FOS\RestBundle\Request\RequestBodyParamConverter</parameter>
    <parameter key="fos_rest.converter.request_body.validation_errors_argument">validationErrors</parameter>
    <parameter key="fos_rest.mime_types" type="collection"/>
    <parameter key="fos_rest.formats" type="collection">
      <parameter key="xml">false</parameter>
      <parameter key="json">false</parameter>
      <parameter key="html">true</parameter>
    </parameter>
    <parameter key="fos_rest.force_redirects" type="collection">
      <parameter key="html">302</parameter>
    </parameter>
    <parameter key="fos_rest.failed_validation">400</parameter>
    <parameter key="fos_rest.empty_content">204</parameter>
    <parameter key="fos_rest.serialize_null">true</parameter>
    <parameter key="fos_rest.default_engine">twig</parameter>
    <parameter key="fos_rest.normalizer.camel_keys.class">FOS\RestBundle\Normalizer\CamelKeysNormalizer</parameter>
    <parameter key="fos_rest.decoder.json.class">FOS\RestBundle\Decoder\JsonDecoder</parameter>
    <parameter key="fos_rest.decoder.jsontoform.class">FOS\RestBundle\Decoder\JsonToFormDecoder</parameter>
    <parameter key="fos_rest.decoder.xml.class">FOS\RestBundle\Decoder\XmlDecoder</parameter>
    <parameter key="fos_rest.decoder_provider.class">FOS\RestBundle\Decoder\ContainerDecoderProvider</parameter>
    <parameter key="fos_rest.body_listener.class">FOS\RestBundle\EventListener\BodyListener</parameter>
    <parameter key="fos_rest.throw_exception_on_unsupported_content_type">false</parameter>
    <parameter key="fos_rest.body_default_format">null</parameter>
    <parameter key="fos_rest.decoders" type="collection">
      <parameter key="json">fos_rest.decoder.json</parameter>
      <parameter key="xml">fos_rest.decoder.xml</parameter>
    </parameter>
    <parameter key="fos_rest.format_listener.class">FOS\RestBundle\EventListener\FormatListener</parameter>
    <parameter key="fos_rest.version_listener.class">FOS\RestBundle\EventListener\VersionListener</parameter>
    <parameter key="fos_rest.format_listener.rules" type="collection">
      <parameter type="collection">
        <parameter key="path">^/api</parameter>
        <parameter key="prefer_extension">true</parameter>
        <parameter key="priorities" type="collection">
          <parameter>json</parameter>
          <parameter>xml</parameter>
          <parameter>yml</parameter>
        </parameter>
        <parameter key="fallback_format">json</parameter>
        <parameter key="host">null</parameter>
        <parameter key="methods">null</parameter>
        <parameter key="stop">false</parameter>
        <parameter key="exception_fallback_format">json</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="path">^/</parameter>
        <parameter key="fallback_format">html</parameter>
        <parameter key="prefer_extension">true</parameter>
        <parameter key="host">null</parameter>
        <parameter key="methods">null</parameter>
        <parameter key="stop">false</parameter>
        <parameter key="exception_fallback_format">html</parameter>
        <parameter key="priorities" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="fos_rest.param_fetcher_listener.class">FOS\RestBundle\EventListener\ParamFetcherListener</parameter>
    <parameter key="fos_rest.param_fetcher_listener.set_params_as_attributes">true</parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">JMS\Serializer\Handler\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="lexik_jwt_authentication.jwt_encoder.class">Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoder</parameter>
    <parameter key="lexik_jwt_authentication.jwt_manager.class">Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager</parameter>
    <parameter key="lexik_jwt_authentication.handler.authentication_success.class">Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler</parameter>
    <parameter key="lexik_jwt_authentication.handler.authentication_failure.class">Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler</parameter>
    <parameter key="lexik_jwt_authentication.openssl_key_loader.class">Lexik\Bundle\JWTAuthenticationBundle\Services\OpenSSLKeyLoader</parameter>
    <parameter key="lexik_jwt_authentication.security.authentication.provider.class">Lexik\Bundle\JWTAuthenticationBundle\Security\Authentication\Provider\JWTProvider</parameter>
    <parameter key="lexik_jwt_authentication.security.authentication.listener.class">Lexik\Bundle\JWTAuthenticationBundle\Security\Firewall\JWTListener</parameter>
    <parameter key="lexik_jwt_authentication.security.authentication.entry_point.class">Lexik\Bundle\JWTAuthenticationBundle\Security\Http\EntryPoint\JWTEntryPoint</parameter>
    <parameter key="lexik_jwt_authentication.extractor.authorization_header_extractor.class">Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\AuthorizationHeaderTokenExtractor</parameter>
    <parameter key="lexik_jwt_authentication.extractor.query_parameter_extractor.class">Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\QueryParameterTokenExtractor</parameter>
    <parameter key="lexik_jwt_authentication.extractor.cookie_extractor.class">Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\CookieTokenExtractor</parameter>
    <parameter key="lexik_jwt_authentication.private_key_path">/var/www/wolopay/app/config/jwt/test/private.pem</parameter>
    <parameter key="lexik_jwt_authentication.public_key_path">/var/www/wolopay/app/config/jwt/test/public.pem</parameter>
    <parameter key="lexik_jwt_authentication.pass_phrase">1234</parameter>
    <parameter key="lexik_jwt_authentication.token_ttl">86400</parameter>
    <parameter key="lexik_jwt_authentication.user_identity_field">username</parameter>
    <parameter key="escape_wsse_authentication.provider.class">AppBundle\Security\Authentication\Provider\ProviderWSSEOverride</parameter>
    <parameter key="escape_wsse_authentication.listener.class">Escape\WSSEAuthenticationBundle\Security\Http\Firewall\Listener</parameter>
    <parameter key="escape_wsse_authentication.entry_point.class">Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint</parameter>
    <parameter key="escape_wsse_authentication.encoder.class">Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder</parameter>
    <parameter key="escape_wsse_authentication.nonce_cache.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="nelmio_api_doc.motd.template">NelmioApiDocBundle::Components/motd.html.twig</parameter>
    <parameter key="nelmio_api_doc.exclude_sections" type="collection"/>
    <parameter key="nelmio_api_doc.default_sections_opened">true</parameter>
    <parameter key="nelmio_api_doc.api_name">Wolopay Api doc</parameter>
    <parameter key="nelmio_api_doc.sandbox.enabled">true</parameter>
    <parameter key="nelmio_api_doc.sandbox.endpoint">null</parameter>
    <parameter key="nelmio_api_doc.sandbox.accept_type">null</parameter>
    <parameter key="nelmio_api_doc.sandbox.body_format.formats" type="collection">
      <parameter>form</parameter>
      <parameter>json</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.sandbox.body_format.default_format">form</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.method">accept_header</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.default_format">json</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.formats" type="collection">
      <parameter key="json">application/json</parameter>
      <parameter key="xml">application/xml</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.sandbox.entity_to_choice">true</parameter>
    <parameter key="nelmio_api_doc.formatter.abstract_formatter.class">Nelmio\ApiDocBundle\Formatter\AbstractFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.markdown_formatter.class">Nelmio\ApiDocBundle\Formatter\MarkdownFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.simple_formatter.class">Nelmio\ApiDocBundle\Formatter\SimpleFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.html_formatter.class">Nelmio\ApiDocBundle\Formatter\HtmlFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.swagger_formatter.class">Nelmio\ApiDocBundle\Formatter\SwaggerFormatter</parameter>
    <parameter key="nelmio_api_doc.sandbox.authentication" type="collection">
      <parameter key="name">Authorization</parameter>
      <parameter key="delivery">http</parameter>
      <parameter key="type">basic</parameter>
      <parameter key="custom_endpoint">false</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.extractor.api_doc_extractor.class">Nelmio\ApiDocBundle\Extractor\ApiDocExtractor</parameter>
    <parameter key="nelmio_api_doc.form.extension.description_form_type_extension.class">Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension</parameter>
    <parameter key="nelmio_api_doc.twig.extension.extra_markdown.class">Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension</parameter>
    <parameter key="nelmio_api_doc.doc_comment_extractor.class">Nelmio\ApiDocBundle\Util\DocCommentExtractor</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.fos_rest.class">Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.jms_security.class">Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.sensio_framework_extra.class">Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.phpdoc.class">Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler</parameter>
    <parameter key="nelmio_api_doc.parser.collection_parser.class">Nelmio\ApiDocBundle\Parser\CollectionParser</parameter>
    <parameter key="nelmio_api_doc.parser.form_errors_parser.class">Nelmio\ApiDocBundle\Parser\FormErrorsParser</parameter>
    <parameter key="nelmio_api_doc.parser.json_serializable_parser.class">Nelmio\ApiDocBundle\Parser\JsonSerializableParser</parameter>
    <parameter key="nelmio_api_doc.request_listener.parameter">_doc</parameter>
    <parameter key="nelmio_api_doc.event_listener.request.class">Nelmio\ApiDocBundle\EventListener\RequestListener</parameter>
    <parameter key="nelmio_api_doc.swagger.base_path">/api</parameter>
    <parameter key="nelmio_api_doc.swagger.swagger_version">1.2</parameter>
    <parameter key="nelmio_api_doc.swagger.api_version">0.1</parameter>
    <parameter key="nelmio_api_doc.swagger.info" type="collection">
      <parameter key="title">Symfony2</parameter>
      <parameter key="description">My awesome Symfony2 app!</parameter>
      <parameter key="TermsOfServiceUrl">null</parameter>
      <parameter key="contact">null</parameter>
      <parameter key="license">null</parameter>
      <parameter key="licenseUrl">null</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.swagger.model_naming_strategy">dot_notation</parameter>
    <parameter key="fos_user.backend_type_orm">true</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\EventListener\LastLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">FOSUserBundle:Resetting:email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">FOSUserBundle:Registration:email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">AppBundle\Entity\ClientUser</parameter>
    <parameter key="fos_user.profile.form.type">fos_user_profile</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">false</parameter>
    <parameter key="fos_user.registration.form.type">fos_user_registration</parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">fos_user_change_password</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">fos_user_resetting</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="lexik_translation.translator.class">Lexik\Bundle\TranslationBundle\Translation\Translator</parameter>
    <parameter key="lexik_translation.loader.database.class">Lexik\Bundle\TranslationBundle\Translation\Loader\DatabaseLoader</parameter>
    <parameter key="lexik_translation.trans_unit.manager.class">Lexik\Bundle\TranslationBundle\Manager\TransUnitManager</parameter>
    <parameter key="lexik_translation.file.manager.class">Lexik\Bundle\TranslationBundle\Manager\FileManager</parameter>
    <parameter key="lexik_translation.locale.manager.class">Lexik\Bundle\TranslationBundle\Manager\LocaleManager</parameter>
    <parameter key="lexik_translation.importer.file.class">Lexik\Bundle\TranslationBundle\Translation\Importer\FileImporter</parameter>
    <parameter key="lexik_translation.exporter_collector.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\ExporterCollector</parameter>
    <parameter key="lexik_translation.exporter.xliff.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\XliffExporter</parameter>
    <parameter key="lexik_translation.exporter.json.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\JsonExporter</parameter>
    <parameter key="lexik_translation.exporter.yml.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\YamlExporter</parameter>
    <parameter key="lexik_translation.exporter.php.class">Lexik\Bundle\TranslationBundle\Translation\Exporter\PhpExporter</parameter>
    <parameter key="lexik_translation.orm.translation_storage.class">Lexik\Bundle\TranslationBundle\Storage\DoctrineORMStorage</parameter>
    <parameter key="lexik_translation.orm.trans_unit.class">Lexik\Bundle\TranslationBundle\Entity\TransUnit</parameter>
    <parameter key="lexik_translation.orm.translation.class">Lexik\Bundle\TranslationBundle\Entity\Translation</parameter>
    <parameter key="lexik_translation.orm.file.class">Lexik\Bundle\TranslationBundle\Entity\File</parameter>
    <parameter key="lexik_translation.mongodb.translation_storage.class">Lexik\Bundle\TranslationBundle\Storage\DoctrineMongoDBStorage</parameter>
    <parameter key="lexik_translation.mongodb.trans_unit.class">Lexik\Bundle\TranslationBundle\Document\TransUnit</parameter>
    <parameter key="lexik_translation.mongodb.translation.class">Lexik\Bundle\TranslationBundle\Document\Translation</parameter>
    <parameter key="lexik_translation.mongodb.file.class">Lexik\Bundle\TranslationBundle\Document\File</parameter>
    <parameter key="lexik_translation.propel.translation_storage.class">Lexik\Bundle\TranslationBundle\Storage\PropelStorage</parameter>
    <parameter key="lexik_translation.propel.trans_unit.class">Lexik\Bundle\TranslationBundle\Propel\TransUnit</parameter>
    <parameter key="lexik_translation.propel.translation.class">Lexik\Bundle\TranslationBundle\Propel\Translation</parameter>
    <parameter key="lexik_translation.propel.file.class">Lexik\Bundle\TranslationBundle\Propel\File</parameter>
    <parameter key="lexik_translation.data_grid.formatter.class">Lexik\Bundle\TranslationBundle\Util\DataGrid\DataGridFormatter</parameter>
    <parameter key="lexik_translation.data_grid.request_handler.class">Lexik\Bundle\TranslationBundle\Util\DataGrid\DataGridRequestHandler</parameter>
    <parameter key="lexik_translation.overview.stats_aggregator.class">Lexik\Bundle\TranslationBundle\Util\Overview\StatsAggregator</parameter>
    <parameter key="lexik_translation.form.handler.trans_unit.class">Lexik\Bundle\TranslationBundle\Form\Handler\TransUnitFormHandler</parameter>
    <parameter key="lexik_translation.listener.get_database_resources.class">Lexik\Bundle\TranslationBundle\EventDispatcher\GetDatabaseResourcesListener</parameter>
    <parameter key="lexik_translation.listener.clean_translation_cache.class">Lexik\Bundle\TranslationBundle\EventDispatcher\CleanTranslationCacheListener</parameter>
    <parameter key="lexik_translation.token_finder.class">Lexik\Bundle\TranslationBundle\Util\Profiler\TokenFinder</parameter>
    <parameter key="lexik_translation.importer.case_insensitive">false</parameter>
    <parameter key="lexik_translation.token_finder.limit">15</parameter>
    <parameter key="lexik_translation.managed_locales" type="collection">
      <parameter>cz</parameter>
      <parameter>de</parameter>
      <parameter>en</parameter>
      <parameter>es</parameter>
      <parameter>fr</parameter>
      <parameter>it</parameter>
      <parameter>ko</parameter>
      <parameter>pl</parameter>
      <parameter>pt</parameter>
    </parameter>
    <parameter key="lexik_translation.fallback_locale" type="collection">
      <parameter>en</parameter>
    </parameter>
    <parameter key="lexik_translation.storage" type="collection">
      <parameter key="type">orm</parameter>
    </parameter>
    <parameter key="lexik_translation.base_layout">LexikTranslationBundle::layout.html.twig</parameter>
    <parameter key="lexik_translation.grid_input_type">textarea</parameter>
    <parameter key="lexik_translation.grid_toggle_similar">false</parameter>
    <parameter key="lexik_translation.grid_list_n_rows">100</parameter>
    <parameter key="lexik_translation.use_yml_tree">false</parameter>
    <parameter key="lexik_translation.auto_cache_clean">false</parameter>
    <parameter key="lexik_translation.dev_tools.enable">false</parameter>
    <parameter key="lexik_translation.dev_tools.create_missing">false</parameter>
    <parameter key="lexik_translation.storage.type">orm</parameter>
    <parameter key="jms_di_extra.metadata.driver.annotation_driver.class">JMS\DiExtraBundle\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_di_extra.metadata.driver.configured_controller_injections.class">JMS\DiExtraBundle\Metadata\Driver\ConfiguredControllerInjectionsDriver</parameter>
    <parameter key="jms_di_extra.metadata.driver.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_di_extra.service_naming_strategy.default.class">JMS\DiExtraBundle\Metadata\DefaultNamingStrategy</parameter>
    <parameter key="jms_di_extra.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_di_extra.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_di_extra.metadata.converter.class">JMS\DiExtraBundle\Metadata\MetadataConverter</parameter>
    <parameter key="jms_di_extra.controller_resolver.class">JMS\DiExtraBundle\HttpKernel\ControllerResolver</parameter>
    <parameter key="jms_di_extra.controller_injectors_warmer.class">JMS\DiExtraBundle\HttpKernel\ControllerInjectorsWarmer</parameter>
    <parameter key="jms_di_extra.all_bundles">false</parameter>
    <parameter key="jms_di_extra.bundles" type="collection">
      <parameter>AppBundle</parameter>
    </parameter>
    <parameter key="jms_di_extra.directories" type="collection">
      <parameter>/var/www/wolopay/app/../src</parameter>
    </parameter>
    <parameter key="jms_di_extra.cache_dir">/var/www/wolopay/var/cache/test_dev/jms_diextra</parameter>
    <parameter key="jms_di_extra.disable_grep">false</parameter>
    <parameter key="jms_di_extra.doctrine_integration">true</parameter>
    <parameter key="jms_di_extra.cache_warmer.controller_file_blacklist" type="collection"/>
    <parameter key="jms_di_extra.doctrine_integration.entity_manager.file">/var/www/wolopay/var/cache/test_dev/jms_diextra/doctrine/EntityManager_575fe61833913.php</parameter>
    <parameter key="jms_di_extra.doctrine_integration.entity_manager.class">EntityManager575fe61833913_546a8d27f194334ee012bfe64f629947b07e4919\__CG__\Doctrine\ORM\EntityManager</parameter>
    <parameter key="jms_aop.cache_dir">/var/www/wolopay/var/cache/test_dev/jms_aop</parameter>
    <parameter key="jms_aop.interceptor_loader.class">JMS\AopBundle\Aop\InterceptorLoader</parameter>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.core.form_type">standard</parameter>
    <parameter key="sonata.core.form.mapping.type" type="collection"/>
    <parameter key="sonata.core.form.mapping.extension" type="collection"/>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.user.block.menu" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.account" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.text" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.rss" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.search_result" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.media" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.gallery" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.feature_media" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.user.block.menu">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.account">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.text">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.rss">sonata.cache.noop</parameter>
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
        <parameter key="sonata.admin.block.search_result">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.media">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.gallery">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.feature_media">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\MenuFactory</parameter>
    <parameter key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</parameter>
    <parameter key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</parameter>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">BraincraftedBootstrapBundle:Menu:bootstrap.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</parameter>
      <parameter key="layout">::sonata_layout.html.twig</parameter>
      <parameter key="search">SonataAdminBundle:Core:search.html.twig</parameter>
      <parameter key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</parameter>
      <parameter key="user_block">SonataAdminBundle:Core:user_block.html.twig</parameter>
      <parameter key="add_block">SonataAdminBundle:Core:add_block.html.twig</parameter>
      <parameter key="ajax">SonataAdminBundle::ajax_layout.html.twig</parameter>
      <parameter key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</parameter>
      <parameter key="list">SonataAdminBundle:CRUD:list.html.twig</parameter>
      <parameter key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      <parameter key="show">SonataAdminBundle:CRUD:show.html.twig</parameter>
      <parameter key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</parameter>
      <parameter key="edit">SonataAdminBundle:CRUD:edit.html.twig</parameter>
      <parameter key="preview">SonataAdminBundle:CRUD:preview.html.twig</parameter>
      <parameter key="history">SonataAdminBundle:CRUD:history.html.twig</parameter>
      <parameter key="acl">SonataAdminBundle:CRUD:acl.html.twig</parameter>
      <parameter key="action">SonataAdminBundle:CRUD:action.html.twig</parameter>
      <parameter key="select">SonataAdminBundle:CRUD:list__select.html.twig</parameter>
      <parameter key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</parameter>
      <parameter key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</parameter>
      <parameter key="delete">SonataAdminBundle:CRUD:delete.html.twig</parameter>
      <parameter key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</parameter>
      <parameter key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</parameter>
      <parameter key="pager_links">SonataAdminBundle:Pager:links.html.twig</parameter>
      <parameter key="pager_results">SonataAdminBundle:Pager:results.html.twig</parameter>
      <parameter key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection">
      <parameter key="sonata.admin.group.common" type="collection">
        <parameter key="label">Clients</parameter>
        <parameter key="label_catalogue">CommonBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-group"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>nvia_common.admin.client</parameter>
          <parameter>nvia_common.admin.client_user</parameter>
          <parameter>nvia_common.admin.client_user_notification</parameter>
          <parameter>app.admin.affiliate</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.app" type="collection">
        <parameter key="label">App</parameter>
        <parameter key="label_catalogue">AppShopBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-rocket"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>nvia_shop_app.admin.app</parameter>
          <parameter>nvia_shop_app.admin.app_shop</parameter>
          <parameter>nvia_app_shop.admin.promo</parameter>
          <parameter>nvia_shop_app.admin.offer_programmer</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.paymethod_config" type="collection">
        <parameter key="label">PayMethods Config</parameter>
        <parameter key="label_catalogue">PayMethodConfigBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-credit-card"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>nvia_pay_method_config.admin.provider</parameter>
          <parameter>nvia_pay_method_config.admin.pay_method</parameter>
          <parameter>nvia_pay_method_config.admin.pay_method_has_provider</parameter>
          <parameter>nvia_pay_method_config.admin.pay_method_provider_has_country</parameter>
          <parameter>nvia_pay_method_config.admin.sms</parameter>
          <parameter>nvia_pay_method_config.admin.sms_alias</parameter>
          <parameter>nvia_pay_method_config.admin.sms_operator</parameter>
          <parameter>nvia_pay_method_config.admin.voice</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.payments" type="collection">
        <parameter key="label">Payments</parameter>
        <parameter key="label_catalogue">Payments</parameter>
        <parameter key="icon">&lt;i class="fa fa-shopping-cart"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>nvia_app_shop.admin.transaction</parameter>
          <parameter>nvia_app_shop.admin.payment</parameter>
          <parameter>nvia_app_shop.admin.purchase</parameter>
          <parameter>nvia_app_shop.admin.purchase_notification</parameter>
          <parameter>app.admin.subscription</parameter>
          <parameter>app.admin.single_payment</parameter>
          <parameter>app.admin.single_free_payment</parameter>
          <parameter>app.admin.single_custom_payment</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="group.billing" type="collection">
        <parameter key="label">Billing</parameter>
        <parameter key="label_catalogue">Billing</parameter>
        <parameter key="icon">&lt;i class="fa fa-money"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter>app.admin.fin_invoice</parameter>
          <parameter>app.admin.fin_movement</parameter>
          <parameter>app.admin.client_document</parameter>
        </parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="group.translation" type="collection">
        <parameter key="label">Translation</parameter>
        <parameter key="icon">&lt;i class="fa fa-globe"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection"/>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection"/>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection">
      <parameter key="EDIT" type="collection">
        <parameter>EDIT</parameter>
      </parameter>
      <parameter key="LIST" type="collection">
        <parameter>LIST</parameter>
      </parameter>
      <parameter key="CREATE" type="collection">
        <parameter>CREATE</parameter>
      </parameter>
      <parameter key="VIEW" type="collection">
        <parameter>VIEW</parameter>
      </parameter>
      <parameter key="DELETE" type="collection">
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="EXPORT" type="collection">
        <parameter>EXPORT</parameter>
      </parameter>
      <parameter key="OPERATOR" type="collection">
        <parameter>OPERATOR</parameter>
      </parameter>
      <parameter key="MASTER" type="collection">
        <parameter>MASTER</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:list_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</parameter>
          <parameter key="date">SonataIntlBundle:CRUD:list_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:list_time.html.twig</parameter>
          <parameter key="datetime">SonataIntlBundle:CRUD:list_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="smallint">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="bigint">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="integer">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="decimal">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="currency">SonataIntlBundle:CRUD:list_currency.html.twig</parameter>
          <parameter key="percent">SonataIntlBundle:CRUD:list_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:list_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:list_html.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:show_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</parameter>
          <parameter key="date">SonataIntlBundle:CRUD:show_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:show_time.html.twig</parameter>
          <parameter key="datetime">SonataIntlBundle:CRUD:show_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="smallint">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="bigint">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="integer">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="decimal">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="currency">SonataIntlBundle:CRUD:show_currency.html.twig</parameter>
          <parameter key="percent">SonataIntlBundle:CRUD:show_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:show_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:show_html.html.twig</parameter>
        </parameter>
      </parameter>
      <parameter key="form" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.intl.locale_detector.request.class">Sonata\IntlBundle\Locale\RequestDetector</parameter>
    <parameter key="sonata.intl.locale_detector.session.class">Sonata\IntlBundle\Locale\SessionDetector</parameter>
    <parameter key="sonata.intl.templating.helper.locale.class">Sonata\IntlBundle\Templating\Helper\LocaleHelper</parameter>
    <parameter key="sonata.intl.templating.helper.number.class">Sonata\IntlBundle\Templating\Helper\NumberHelper</parameter>
    <parameter key="sonata.intl.templating.helper.datetime.class">Sonata\IntlBundle\Templating\Helper\DateTimeHelper</parameter>
    <parameter key="sonata.intl.timezone_detector.chain.class">Sonata\IntlBundle\Timezone\ChainTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.user.class">Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.locale.class">Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.twig.helper.locale.class">Sonata\IntlBundle\Twig\Extension\LocaleExtension</parameter>
    <parameter key="sonata.intl.twig.helper.number.class">Sonata\IntlBundle\Twig\Extension\NumberExtension</parameter>
    <parameter key="sonata.intl.twig.helper.datetime.class">Sonata\IntlBundle\Twig\Extension\DateTimeExtension</parameter>
    <parameter key="sonata_intl.timezone.detectors" type="collection">
      <parameter>sonata.intl.timezone_detector.locale</parameter>
    </parameter>
    <parameter key="sonata.media.provider.image.class">Sonata\MediaBundle\Provider\ImageProvider</parameter>
    <parameter key="sonata.media.provider.file.class">Sonata\MediaBundle\Provider\FileProvider</parameter>
    <parameter key="sonata.media.provider.youtube.class">Sonata\MediaBundle\Provider\YouTubeProvider</parameter>
    <parameter key="sonata.media.provider.dailymotion.class">Sonata\MediaBundle\Provider\DailyMotionProvider</parameter>
    <parameter key="sonata.media.provider.vimeo.class">Sonata\MediaBundle\Provider\VimeoProvider</parameter>
    <parameter key="sonata.media.thumbnail.format">Sonata\MediaBundle\Thumbnail\FormatThumbnail</parameter>
    <parameter key="sonata.media.thumbnail.format.default">jpg</parameter>
    <parameter key="sonata.media.thumbnail.liip_imagine">Sonata\MediaBundle\Thumbnail\LiipImagineThumbnail</parameter>
    <parameter key="sonata.media.pool.class">Sonata\MediaBundle\Provider\Pool</parameter>
    <parameter key="sonata.media.resizer.simple.class">Sonata\MediaBundle\Resizer\SimpleResizer</parameter>
    <parameter key="sonata.media.resizer.square.class">Sonata\MediaBundle\Resizer\SquareResizer</parameter>
    <parameter key="sonata.media.block.media.class">Sonata\MediaBundle\Block\MediaBlockService</parameter>
    <parameter key="sonata.media.block.feature_media.class">Sonata\MediaBundle\Block\FeatureMediaBlockService</parameter>
    <parameter key="sonata.media.block.gallery.class">Sonata\MediaBundle\Block\GalleryBlockService</parameter>
    <parameter key="sonata.media.metadata.proxy.class">Sonata\MediaBundle\Metadata\ProxyMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.amazon.class">Sonata\MediaBundle\Metadata\AmazonMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.noop.class">Sonata\MediaBundle\Metadata\NoopMetadataBuilder</parameter>
    <parameter key="sonata.media.adapater.filesystem.opencloud.class"></parameter>
    <parameter key="sonata.media.manager.media.class">Sonata\MediaBundle\Entity\MediaManager</parameter>
    <parameter key="sonata.media.manager.gallery.class">Sonata\MediaBundle\Entity\GalleryManager</parameter>
    <parameter key="sonata.media.admin.media.class">Sonata\MediaBundle\Admin\ORM\MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.controller">SonataMediaBundle:MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery.class">Sonata\MediaBundle\Admin\GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.controller">SonataMediaBundle:GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.class">Sonata\MediaBundle\Admin\GalleryHasMediaAdmin</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.resizer.simple.adapter.mode">inset</parameter>
    <parameter key="sonata.media.resizer.square.adapter.mode">inset</parameter>
    <parameter key="sonata.media.admin.media.entity">Application\Sonata\MediaBundle\Entity\Media</parameter>
    <parameter key="sonata.media.admin.gallery.entity">Application\Sonata\MediaBundle\Entity\Gallery</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.entity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</parameter>
    <parameter key="sonata.media.media.class">Application\Sonata\MediaBundle\Entity\Media</parameter>
    <parameter key="sonata.media.gallery.class">Application\Sonata\MediaBundle\Entity\Gallery</parameter>
    <parameter key="ibrows_sonata_translation.defaultdomain">messages</parameter>
    <parameter key="ibrows_sonata_translation.editable" type="collection">
      <parameter key="mode">inline</parameter>
      <parameter key="type">textarea</parameter>
      <parameter key="emptytext">Empty</parameter>
      <parameter key="placement">top</parameter>
    </parameter>
    <parameter key="ibrows_sonata_translation.editable.mode">inline</parameter>
    <parameter key="ibrows_sonata_translation.editable.type">textarea</parameter>
    <parameter key="ibrows_sonata_translation.editable.emptytext">Empty</parameter>
    <parameter key="ibrows_sonata_translation.editable.placement">top</parameter>
    <parameter key="ibrows_sonata_translation.defaultselections" type="collection">
      <parameter key="nonTranslatedOnly">false</parameter>
    </parameter>
    <parameter key="ibrows_sonata_translation.defaultselections.nontranslatedonly">false</parameter>
    <parameter key="ibrows_sonata_translation.emptyprefixes" type="collection">
      <parameter>__</parameter>
      <parameter>new_</parameter>
      <parameter></parameter>
    </parameter>
    <parameter key="ibrows_sonata_translation.emptyprefixes.0">__</parameter>
    <parameter key="ibrows_sonata_translation.emptyprefixes.1">new_</parameter>
    <parameter key="ibrows_sonata_translation.emptyprefixes.2"></parameter>
    <parameter key="besimple.soap.request_format.listener.class">BeSimple\SoapBundle\EventListener\RequestFormatListener</parameter>
    <parameter key="besimple.soap.definition.loader.resolver.class">Symfony\Component\Config\Loader\LoaderResolver</parameter>
    <parameter key="besimple.soap.definition.loader.class">Symfony\Component\Config\Loader\DelegatingLoader</parameter>
    <parameter key="besimple.soap.definition.loader.annot_dir.class">BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="besimple.soap.definition.loader.annot_file.class">BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationFileLoader</parameter>
    <parameter key="besimple.soap.definition.loader.annot_class.class">BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationClassLoader</parameter>
    <parameter key="besimple.soap.definition.loader.annot_complextype.class">BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationComplexTypeLoader</parameter>
    <parameter key="besimple.soap.converter.collection.class">BeSimple\SoapCommon\Converter\TypeConverterCollection</parameter>
    <parameter key="besimple.soap.converter.date_time.class">BeSimple\SoapCommon\Converter\DateTimeTypeConverter</parameter>
    <parameter key="besimple.soap.converter.date.class">BeSimple\SoapCommon\Converter\DateTypeConverter</parameter>
    <parameter key="besimple.soap.response.class">BeSimple\SoapBundle\Soap\SoapResponse</parameter>
    <parameter key="besimple.soap.response.listener.class">BeSimple\SoapBundle\EventListener\SoapResponseListener</parameter>
    <parameter key="besimple.soap.exception_listener.class">BeSimple\SoapBundle\EventListener\SoapExceptionListener</parameter>
    <parameter key="besimple.soap.context.class">BeSimple\SoapBundle\WebServiceContext</parameter>
    <parameter key="besimple.soap.binder.request_header.rpcliteral.class">BeSimple\SoapBundle\ServiceBinding\RpcLiteralRequestHeaderMessageBinder</parameter>
    <parameter key="besimple.soap.binder.request.rpcliteral.class">BeSimple\SoapBundle\ServiceBinding\RpcLiteralRequestMessageBinder</parameter>
    <parameter key="besimple.soap.binder.response.rpcliteral.class">BeSimple\SoapBundle\ServiceBinding\RpcLiteralResponseMessageBinder</parameter>
    <parameter key="besimple.soap.binder.request.documentwrapped.class">BeSimple\SoapBundle\ServiceBinding\DocumentLiteralWrappedRequestMessageBinder</parameter>
    <parameter key="besimple.soap.binder.request_header.documentwrapped.class">BeSimple\SoapBundle\ServiceBinding\DocumentLiteralWrappedRequestHeaderMessageBinder</parameter>
    <parameter key="besimple.soap.binder.response.documentwrapped.class">BeSimple\SoapBundle\ServiceBinding\DocumentLiteralWrappedResponseMessageBinder</parameter>
    <parameter key="besimple.soap.type.repository.class">BeSimple\SoapCommon\Definition\Type\TypeRepository</parameter>
    <parameter key="besimple.soap.server.classmap.class">BeSimple\SoapServer\Classmap</parameter>
    <parameter key="besimple.soap.cache.class">BeSimple\SoapBundle\Cache</parameter>
    <parameter key="besimple.soap.cache.dir">/var/www/wolopay/var/cache/test_dev/besimple/soap</parameter>
    <parameter key="besimple.soap.cache.type">1</parameter>
    <parameter key="besimple.soap.cache.lifetime">null</parameter>
    <parameter key="besimple.soap.cache.limit">null</parameter>
    <parameter key="besimple.soap.definition.dumper.options.stylesheet">null</parameter>
    <parameter key="besimple.soap.exception_listener.controller">BeSimpleSoapBundle:SoapWebService:exception</parameter>
    <parameter key="faker.generator.class">Faker\Factory</parameter>
    <parameter key="faker.populator.class">Faker\ORM\Doctrine\Populator</parameter>
    <parameter key="faker.entity.class">Faker\ORM\Doctrine\EntityPopulator</parameter>
    <parameter key="knp_snappy.pdf.internal_generator.class">Knp\Snappy\Pdf</parameter>
    <parameter key="knp_snappy.pdf.class">Knp\Bundle\SnappyBundle\Snappy\LoggableGenerator</parameter>
    <parameter key="knp_snappy.pdf.binary">/usr/local/bin/wkhtmltopdf</parameter>
    <parameter key="knp_snappy.pdf.options" type="collection"/>
    <parameter key="knp_snappy.pdf.env" type="collection"/>
    <parameter key="knp_snappy.image.internal_generator.class">Knp\Snappy\Image</parameter>
    <parameter key="knp_snappy.image.class">Knp\Bundle\SnappyBundle\Snappy\LoggableGenerator</parameter>
    <parameter key="knp_snappy.image.binary">wkhtmltoimage</parameter>
    <parameter key="knp_snappy.image.options" type="collection"/>
    <parameter key="knp_snappy.image.env" type="collection"/>
    <parameter key="matthias_symfony_console_form.cache_directory">/var/www/wolopay/var/cache/test_dev/matthias_symfony_console_form</parameter>
    <parameter key="web_profiler.controller.profiler.class">Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController</parameter>
    <parameter key="web_profiler.controller.router.class">Symfony\Bundle\WebProfilerBundle\Controller\RouterController</parameter>
    <parameter key="web_profiler.controller.exception.class">Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.extension.webprofiler.class">Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="ladybug.options" type="collection">
      <parameter key="extra_helpers" type="collection">
        <parameter>RaulFraile\Bundle\LadybugBundle\DataCollector\LadybugDataCollector:log</parameter>
      </parameter>
      <parameter key="theme">modern</parameter>
      <parameter key="expanded">false</parameter>
      <parameter key="silenced">false</parameter>
      <parameter key="array_max_nesting_level">9</parameter>
      <parameter key="object_max_nesting_level">3</parameter>
    </parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="misd_guzzle.data_collector" type="collection">
        <parameter>guzzle</parameter>
        <parameter>MisdGuzzleBundle:Collector:guzzle</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>SonataBlockBundle:Profiler:block.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ladybug_data_collector" type="collection">
        <parameter>ladybug</parameter>
        <parameter>RaulFraileLadybugBundle:Collector:ladybug</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>nvia_api.command.request</parameter>
      <parameter>sensio_distribution.security_checker.command</parameter>
      <parameter>command.common.node_emit</parameter>
      <parameter>command.paymethods_complete_configuration</parameter>
      <parameter>command.shop.simulate_payment_cancel</parameter>
      <parameter>command.time_zone_to_each_country</parameter>
      <parameter>shop.command.transaction.create</parameter>
      <parameter>shop.command.transaction_temp.expire</parameter>
      <parameter>command.shop.simulate_payment_complete</parameter>
      <parameter>command.internal_payment_notification</parameter>
      <parameter>command.shop.offer.sync</parameter>
      <parameter>shop_app.business_intelligent</parameter>
      <parameter>shop_app.business_intelligent_resend</parameter>
      <parameter>api.command.wsse</parameter>
      <parameter>command.need_make_payment_request</parameter>
      <parameter>command.date_to_utc</parameter>
      <parameter>app.import_temp</parameter>
      <parameter>command.nginx_clear_cache</parameter>
      <parameter>command.currency_exchange</parameter>
      <parameter>command.shop.simulate_extra_cost</parameter>
      <parameter>command.payment_cancel</parameter>
      <parameter>command.app_fakedata_populate</parameter>
      <parameter>command.xsolla_sync</parameter>
      <parameter>app.billing.client.owes_command</parameter>
      <parameter>app.billing.client.send_invoice_command</parameter>
      <parameter>app.migration</parameter>
      <parameter>shop.command.subscription.expire</parameter>
      <parameter>app.business_intelligent_sync</parameter>
      <parameter>shop.command.transaction.expire</parameter>
      <parameter>command.shop.app_notification.send</parameter>
      <parameter>command.shop.simulate_send_ipn_voice</parameter>
      <parameter>command.idcgames.import.gameraffiliateids</parameter>
      <parameter>command.nginx_call_routes_with_cache</parameter>
      <parameter>command.shop.simulate_send_ipn_sms</parameter>
      <parameter>command.fortuno_sync</parameter>
      <parameter>command.app_paymethods_add</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.parser.form_type_parser.class">Nelmio\ApiDocBundle\Parser\FormTypeParser</parameter>
    <parameter key="nelmio_api_doc.parser.validation_parser.class">Nelmio\ApiDocBundle\Parser\ValidationParser</parameter>
    <parameter key="nelmio_api_doc.parser.jms_metadata_parser.class">Nelmio\ApiDocBundle\Parser\JmsMetadataParser</parameter>
    <parameter key="sonata.core.form.types" type="collection">
      <parameter>app_shop_form_type_app</parameter>
      <parameter>form.type.form</parameter>
      <parameter>form.type.birthday</parameter>
      <parameter>form.type.checkbox</parameter>
      <parameter>form.type.choice</parameter>
      <parameter>form.type.collection</parameter>
      <parameter>form.type.country</parameter>
      <parameter>form.type.date</parameter>
      <parameter>form.type.datetime</parameter>
      <parameter>form.type.email</parameter>
      <parameter>form.type.file</parameter>
      <parameter>form.type.hidden</parameter>
      <parameter>form.type.integer</parameter>
      <parameter>form.type.language</parameter>
      <parameter>form.type.locale</parameter>
      <parameter>form.type.money</parameter>
      <parameter>form.type.number</parameter>
      <parameter>form.type.password</parameter>
      <parameter>form.type.percent</parameter>
      <parameter>form.type.radio</parameter>
      <parameter>form.type.range</parameter>
      <parameter>form.type.repeated</parameter>
      <parameter>form.type.search</parameter>
      <parameter>form.type.textarea</parameter>
      <parameter>form.type.text</parameter>
      <parameter>form.type.time</parameter>
      <parameter>form.type.timezone</parameter>
      <parameter>form.type.url</parameter>
      <parameter>form.type.button</parameter>
      <parameter>form.type.submit</parameter>
      <parameter>form.type.reset</parameter>
      <parameter>form.type.currency</parameter>
      <parameter>form.type.entity</parameter>
      <parameter>captcha.type</parameter>
      <parameter>braincrafted_bootstrap.form.type.collection</parameter>
      <parameter>braincrafted_bootstrap.form.type.money</parameter>
      <parameter>braincrafted_bootstrap.form.type.form_actions</parameter>
      <parameter>braincrafted_bootstrap.form.type.form_control_static</parameter>
      <parameter>fos_user.username_form_type</parameter>
      <parameter>fos_user.profile.form.type</parameter>
      <parameter>fos_user.registration.form.type</parameter>
      <parameter>fos_user.change_password.form.type</parameter>
      <parameter>fos_user.resetting.form.type</parameter>
      <parameter>sonata.core.form.type.array</parameter>
      <parameter>sonata.core.form.type.boolean</parameter>
      <parameter>sonata.core.form.type.collection</parameter>
      <parameter>sonata.core.form.type.translatable_choice</parameter>
      <parameter>sonata.core.form.type.date_range</parameter>
      <parameter>sonata.core.form.type.datetime_range</parameter>
      <parameter>sonata.core.form.type.date_picker</parameter>
      <parameter>sonata.core.form.type.datetime_picker</parameter>
      <parameter>sonata.core.form.type.date_range_picker</parameter>
      <parameter>sonata.core.form.type.datetime_range_picker</parameter>
      <parameter>sonata.core.form.type.equal</parameter>
      <parameter>sonata.core.form.type.color_selector</parameter>
      <parameter>sonata.block.form.type.block</parameter>
      <parameter>sonata.block.form.type.container_template</parameter>
      <parameter>sonata.admin.form.type.admin</parameter>
      <parameter>sonata.admin.form.type.model_choice</parameter>
      <parameter>sonata.admin.form.type.model_list</parameter>
      <parameter>sonata.admin.form.type.model_reference</parameter>
      <parameter>sonata.admin.form.type.model_hidden</parameter>
      <parameter>sonata.admin.form.type.model_autocomplete</parameter>
      <parameter>sonata.admin.form.type.collection</parameter>
      <parameter>sonata.admin.form.filter.type.number</parameter>
      <parameter>sonata.admin.form.filter.type.choice</parameter>
      <parameter>sonata.admin.form.filter.type.default</parameter>
      <parameter>sonata.admin.form.filter.type.date</parameter>
      <parameter>sonata.admin.form.filter.type.daterange</parameter>
      <parameter>sonata.admin.form.filter.type.datetime</parameter>
      <parameter>sonata.admin.form.filter.type.datetime_range</parameter>
      <parameter>sonata.media.form.type.media</parameter>
      <parameter>sonata.media.api.form.type.doctrine.media</parameter>
      <parameter>sonata.media.api.form.type.media</parameter>
      <parameter>sonata.media.api.form.type.gallery</parameter>
      <parameter>sonata.media.api.form.type.gallery_has_media</parameter>
      <parameter>shop.form.data_transformer.transaction_id</parameter>
    </parameter>
    <parameter key="sonata.core.form.type_extensions" type="collection">
      <parameter>form.type_extension.form.http_foundation</parameter>
      <parameter>form.type_extension.form.validator</parameter>
      <parameter>form.type_extension.repeated.validator</parameter>
      <parameter>form.type_extension.submit.validator</parameter>
      <parameter>form.type_extension.csrf</parameter>
      <parameter>form.type_extension.form.data_collector</parameter>
      <parameter>braincrafted_bootstrap.form.extension.typesetter_extension</parameter>
      <parameter>braincrafted_bootstrap.form.extension.form_action_button</parameter>
      <parameter>braincrafted_bootstrap.form.extension.static_control</parameter>
      <parameter>braincrafted_bootstrap.form.extension.input_group_button</parameter>
      <parameter>nelmio_api_doc.form.extension.description_form_type_extension</parameter>
      <parameter>sonata.admin.form.extension.field</parameter>
      <parameter>sonata.admin.form.extension.field.mopa</parameter>
      <parameter>matthias_symfony_console_form.console_form_type_extension</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="nvia_shop_app.admin.app" class="AppBundle\Admin\AppAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Shop" label="App"/>
      <argument>nvia_shop_app.admin.app</argument>
      <argument>AppBundle\Entity\App</argument>
      <argument>AppBundle:Admin\AppAdmin</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>App</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_shop_app.admin.app_shop" class="AppBundle\Admin\AppShopAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Shop" label="Shops"/>
      <argument>nvia_shop_app.admin.app_shop</argument>
      <argument>AppBundle\Entity\AppShop</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Shops</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_shop_app.admin.article" class="AppBundle\Admin\ArticleAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Shop" label="Article"/>
      <argument>nvia_shop_app.admin.article</argument>
      <argument>AppBundle\Entity\Article</argument>
      <argument>AppBundle:Admin\ArticleAdmin</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Article</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_shop_app.admin.item" class="AppBundle\Admin\ItemAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Shop" label="Item"/>
      <argument>nvia_shop_app.admin.item</argument>
      <argument>AppBundle\Entity\Item</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Item</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_shop_app.admin.app_shop_has_articles" class="AppBundle\Admin\AppShopHasArticlesAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Shop" label="AppShopHasArticles"/>
      <argument>nvia_shop_app.admin.app_shop_has_articles</argument>
      <argument>AppBundle\Entity\AppShopHasArticle</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>AppShopHasArticles</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_shop_app.admin.article_has_pmpc" class="AppBundle\Admin\ArticleHasPMPCAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="ArticleHasPMPC"/>
      <argument>nvia_shop_app.admin.article_has_pmpc</argument>
      <argument>AppBundle\Entity\ArticleHasPMPC</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>ArticleHasPMPC</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_shop_app.admin.shop_css" class="AppBundle\Admin\ShopCssAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Shop" label="Shop Css"/>
      <argument>nvia_shop_app.admin.shop_css</argument>
      <argument>AppBundle\Entity\ShopCss</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Shop Css</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_shop_app.admin.offer_programmer" class="AppBundle\Admin\OfferProgrammerAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="OfferProgrammer"/>
      <argument>nvia_shop_app.admin.offer_programmer</argument>
      <argument>AppBundle\Entity\OfferProgrammer</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>OfferProgrammer</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_app_shop.admin.transaction" class="AppBundle\Admin\TransactionAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="payments" label="Transactions"/>
      <argument>nvia_app_shop.admin.transaction</argument>
      <argument>AppBundle\Entity\Transaction</argument>
      <argument>AppBundle:Admin\TransactionAdmin</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Transactions</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_app_shop.admin.payment" class="AppBundle\Admin\PaymentAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="Payment"/>
      <argument>nvia_app_shop.admin.payment</argument>
      <argument>AppBundle\Entity\Payment</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Payment</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_app_shop.admin.payment_service_category" class="AppBundle\Admin\PaymentServiceCategoryAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="PaymentServiceCategory"/>
      <argument>nvia_app_shop.admin.payment_service_category</argument>
      <argument>AppBundle\Entity\PaymentServiceCategory</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>PaymentServiceCategory</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_app_shop.admin.purchase_notification" class="AppBundle\Admin\PurchaseNotificationAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="PurchaseNotification"/>
      <argument>nvia_app_shop.admin.purchase_notification</argument>
      <argument>AppBundle\Entity\PurchaseNotification</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>PurchaseNotification</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_app_shop.admin.promo" class="AppBundle\Admin\PromoAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="Promo"/>
      <argument>nvia_app_shop.admin.promo</argument>
      <argument>AppBundle\Entity\Promo</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Promo</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_app_shop.admin.promo_code" class="AppBundle\Admin\PromoCodeAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="PromoCode"/>
      <argument>nvia_app_shop.admin.promo_code</argument>
      <argument>AppBundle\Entity\PromoCode</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>PromoCode</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_api.admin.app_api_credentials" class="AppBundle\Admin\AppApiCredentialsAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="AppApiCredentials"/>
      <argument>nvia_api.admin.app_api_credentials</argument>
      <argument>AppBundle\Entity\AppApiCredentials</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>AppApiCredentials</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_common.admin.client" class="AppBundle\Admin\ClientAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Common" label="Client"/>
      <argument>nvia_common.admin.client</argument>
      <argument>AppBundle\Entity\Client</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Client</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_common.admin.client_user" class="AppBundle\Admin\ClientUserAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="Common" label="Client user"/>
      <argument>nvia_common.admin.client_user</argument>
      <argument>AppBundle\Entity\ClientUser</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setUserManager">
        <argument type="service" id="fos_user.user_manager"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Client user</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_common.admin.client_user_notification" class="AppBundle\Admin\ClientUserNotificationAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="Client notifications"/>
      <argument>nvia_common.admin.client_user_notification</argument>
      <argument>AppBundle\Entity\ClientUserNotification</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Client notifications</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_pay_method_config.admin.pay_method" class="AppBundle\Admin\PayMethodAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="PayMethods" label="PayMethods"/>
      <argument>nvia_pay_method_config.admin.pay_method</argument>
      <argument>AppBundle\Entity\PayMethod</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>PayMethods</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_pay_method_config.admin.provider" class="AppBundle\Admin\ProviderAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="PayMethods" label="Providers"/>
      <argument>nvia_pay_method_config.admin.provider</argument>
      <argument>AppBundle\Entity\Provider</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Providers</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_pay_method_config.admin.pay_method_has_provider" class="AppBundle\Admin\PayMethodHasProviderAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="PayMethods" label="PMP All in one"/>
      <argument>nvia_pay_method_config.admin.pay_method_has_provider</argument>
      <argument>AppBundle\Entity\PayMethodHasProvider</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>PMP All in one</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_pay_method_config.admin.pay_method_provider_has_country" class="AppBundle\Admin\PayMethodProviderHasCountryAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="PayMethods" label="PMP has country"/>
      <argument>nvia_pay_method_config.admin.pay_method_provider_has_country</argument>
      <argument>AppBundle\Entity\PayMethodProviderHasCountry</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>PMP has country</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_pay_method_config.admin.sms" class="AppBundle\Admin\SMSAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="PayMethods" label="SMS"/>
      <argument>nvia_pay_method_config.admin.sms</argument>
      <argument>AppBundle\Entity\SMS</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SMS</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_pay_method_config.admin.sms_alias" class="AppBundle\Admin\SMSAliasAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="PayMethods" label="SMSAlias"/>
      <argument>nvia_pay_method_config.admin.sms_alias</argument>
      <argument>AppBundle\Entity\SMSAlias</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SMSAlias</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_pay_method_config.admin.sms_operator" class="AppBundle\Admin\SMSOperatorAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="PayMethods" label="SMSOperator"/>
      <argument>nvia_pay_method_config.admin.sms_operator</argument>
      <argument>AppBundle\Entity\SMSOperator</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SMSOperator</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_pay_method_config.admin.voice" class="AppBundle\Admin\VoiceAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="PayMethods" label="Voice"/>
      <argument>nvia_pay_method_config.admin.voice</argument>
      <argument>AppBundle\Entity\Voice</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Voice</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="nvia_app_shop.admin.purchase" class="AppBundle\Admin\PurchaseAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="Purchase"/>
      <argument>nvia_app_shop.admin.purchase</argument>
      <argument>AppBundle\Entity\Purchase</argument>
      <argument>AppBundle:Admin\PurchaseAdmin</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Purchase</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.client_user_has_app" class="AppBundle\Admin\ClientUserHasAppAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="ClientUserHasApp"/>
      <argument>app.admin.client_user_has_app</argument>
      <argument>AppBundle\Entity\ClientUserHasApp</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>ClientUserHasApp</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.offer" class="AppBundle\Admin\OfferAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="Offers Types"/>
      <argument>app.admin.offer</argument>
      <argument>AppBundle\Entity\Offer</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Offers Types</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.app_has_pay_method_provider_country" class="AppBundle\Admin\AppHasPayMethodProviderCountryAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="AppHasPayMethodProviderCountry"/>
      <argument>app.admin.app_has_pay_method_provider_country</argument>
      <argument>AppBundle\Entity\AppHasPayMethodProviderCountry</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>AppHasPayMethodProviderCountry</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.subscription" class="AppBundle\Admin\SubscriptionAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="Subscription"/>
      <argument>app.admin.subscription</argument>
      <argument>AppBundle\Entity\Subscription</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Subscription</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.single_payment" class="AppBundle\Admin\SinglePaymentAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="SinglePayment"/>
      <argument>app.admin.single_payment</argument>
      <argument>AppBundle\Entity\SinglePayment</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SinglePayment</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.single_free_payment" class="AppBundle\Admin\SingleFreePaymentAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="SingleFreePayment"/>
      <argument>app.admin.single_free_payment</argument>
      <argument>AppBundle\Entity\SingleFreePayment</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SingleFreePayment</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.single_custom_payment" class="AppBundle\Admin\SingleCustomPaymentAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="SingleCustomPayment"/>
      <argument>app.admin.single_custom_payment</argument>
      <argument>AppBundle\Entity\SingleCustomPayment</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SingleCustomPayment</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.affiliate" class="AppBundle\Admin\AffiliateAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="Affiliate"/>
      <argument>app.admin.affiliate</argument>
      <argument>AppBundle\Entity\Affiliate</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Affiliate</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.fin_invoice" class="AppBundle\Admin\FinInvoiceAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="FinInvoice"/>
      <argument>app.admin.fin_invoice</argument>
      <argument>AppBundle\Entity\FinInvoice</argument>
      <argument>AppBundle:Admin\Invoice</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>FinInvoice</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.fin_movement" class="AppBundle\Admin\FinMovementAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="FinMovement"/>
      <argument>app.admin.fin_movement</argument>
      <argument>AppBundle\Entity\FinMovement</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>FinMovement</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.client_document" class="AppBundle\Admin\ClientDocumentAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="ClientDocument"/>
      <argument>app.admin.client_document</argument>
      <argument>AppBundle\Entity\ClientDocument</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>ClientDocument</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="s_transaction.security.authentication.provider" class="AppBundle\Security\Authentication\Provider\STransactionProvider">
      <argument></argument>
      <argument type="service" id="shop.logger.transaction_helper"/>
    </service>
    <service id="s_transaction.security.authentication.listener" class="AppBundle\Security\Firewall\STransactionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="templating"/>
    </service>
    <service id="app_shop_form_type_app" class="AppBundle\Form\Type\AppType">
      <tag name="form.type" alias="app_shop_form_type_app"/>
    </service>
    <service id="app.doctrine.apc_cache" class="Doctrine\Common\Cache\ApcCache">
      <call method="setNamespace">
        <argument>http://sym2_pay_gateway.test</argument>
      </call>
    </service>
    <service id="nvia_api.command.request" class="AppBundle\Command\ApiRequestCommand">
      <tag name="console.command"/>
      <argument type="service" id="api.make_request"/>
    </service>
    <service id="nvia_api.securiy.authentication.listener" class="AppBundle\Security\Factory\GetJWTListener">
      <tag name="monolog.logger"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="shop.logger.transaction_handler" class="AppBundle\Logger\StreamHandlerDynamicFileTransaction">
      <argument>/var/www/wolopay/var/logs</argument>
      <argument>100</argument>
    </service>
    <service id="shop.logger.dynamic_handler" class="AppBundle\Logger\StreamHandlerDynamicFile">
      <argument>/var/www/wolopay/var/logs</argument>
      <argument>100</argument>
    </service>
    <service id="assetic.filter.uglifyjs2" class="Assetic\Filter\UglifyJs2Filter">
      <tag name="assetic.filter" alias="uglifyjs2"/>
      <argument>/home/mgarcia/npm/lib/node_modules/uglify-js/bin/uglifyjs</argument>
      <argument>/usr/bin/nodejs</argument>
      <call method="setTimeout">
        <argument>null</argument>
      </call>
      <call method="setNodePaths">
        <argument type="collection"/>
      </call>
      <call method="setCompress">
        <argument>false</argument>
      </call>
      <call method="setBeautify">
        <argument>false</argument>
      </call>
      <call method="setMangle">
        <argument>false</argument>
      </call>
      <call method="setScrewIe8">
        <argument>false</argument>
      </call>
      <call method="setComments">
        <argument>false</argument>
      </call>
      <call method="setWrap">
        <argument>false</argument>
      </call>
      <call method="setDefines">
        <argument type="collection"/>
      </call>
    </service>
    <service id="test.client_without_shutdown" class="AppBundle\Service\ClientWrapped" shared="false" scope="prototype">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument type="service">
        <service class="Symfony\Component\BrowserKit\History" shared="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\BrowserKit\CookieJar" shared="false"/>
      </argument>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument>false</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="20"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/var/www/wolopay/app/Resources</argument>
              </service>
            </argument>
            <argument type="service" id="templating.locator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="10"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
        <argument type="service" id="kernel.class_cache.cache_warmer"/>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="lexik_translation.translator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/var/www/wolopay/app/Resources</argument>
              </service>
            </argument>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="twig"/>
            <argument type="service">
              <service class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
                <argument type="service" id="kernel"/>
                <argument>/var/www/wolopay/app</argument>
                <argument type="collection"/>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
        <argument type="service">
          <service class="JMS\DiExtraBundle\HttpKernel\ControllerInjectorsWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="kernel"/>
            <argument type="service" id="jms_di_extra.controller_resolver"/>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service" id="sonata.admin.route.cache_warmup"/>
      </argument>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <tag name="kernel.cache_warmer"/>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection"/>
    </service>
    <service id="request" scope="request" synthetic="true" synchronized="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 2.7 and will be removed in 3.0. Use the "request_stack" service instead.</deprecated>
    </service>
    <service id="service_container" synthetic="true">
      <autowiring-type>Symfony\Component\DependencyInjection\ContainerInterface</autowiring-type>
      <autowiring-type>Symfony\Component\DependencyInjection\Container</autowiring-type>
    </service>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/var/www/wolopay/app/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
            <tag name="config_cache.resource_checker" priority="-990"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Config\Resource\BCResourceInterfaceChecker" public="false">
            <tag name="config_cache.resource_checker" priority="-1000"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <call method="addRendererService">
        <argument>inline</argument>
        <argument>fragment.renderer.inline</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>esi</argument>
        <argument>fragment.renderer.esi</argument>
      </call>
      <call method="addRendererService">
        <argument>ssi</argument>
        <argument>fragment.renderer.ssi</argument>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="ssi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.selector"/>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
        <argument key="lexik_translation.loader.database" type="collection">
          <argument>database</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/wolopay/var/cache/test_dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="cs" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.cs.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.cs.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.cs.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.cs.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.cs.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.cs.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.cs.xliff</argument>
          </argument>
          <argument key="af" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pl.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.pl.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.pl.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pl.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pl.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pl.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pl.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pl.xliff</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lb.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lb.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lb.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lb.xliff</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ca.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ca.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ca.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ca.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ca.xliff</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.it.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.it.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.it.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.it.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.it.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.it.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.it.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.it.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.it.xliff</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.nl.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.nl.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.nl.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nl.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nl.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.nl.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.nl.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.nl.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.nl.xliff</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ar.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.ar.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.ar.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ar.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ar.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ar.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ar.xliff</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fa.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fa.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fa.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fa.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fa.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ru.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.ru.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.ru.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ru.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ru.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.ru.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ru.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ru.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.ru.xliff</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt.xliff</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lt.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lt.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lt.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.lt.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lt.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lt.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.lt.xliff</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.de.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.de.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.de.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.de.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.de.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.de.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.de.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.de.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.de.xliff</argument>
            <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/SonataAdminBundle.de.yml</argument>
            <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/IbrowsSonataTranslationBundle.de.yml</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.id.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.id.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.id.yml</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.th.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.th.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.th.yml</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_BR.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.pt_BR.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.pt_BR.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt_BR.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt_BR.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt_BR.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt_BR.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pt_BR.xliff</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sv.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sv.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sv.yml</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.tr.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.tr.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.tr.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.tr.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.tr.yml</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fr.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.fr.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.fr.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fr.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fr.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.fr.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fr.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fr.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.fr.xliff</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.vi.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.vi.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.vi.yml</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hu.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hu.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hu.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hu.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hu.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.hu.xliff</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.en.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.en.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.en.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.en.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.en.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.en.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.en.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.en.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.en.xliff</argument>
            <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/SonataAdminBundle.en.yml</argument>
            <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/IbrowsSonataTranslationBundle.en.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/user_notifications.en.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/admin.en.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/default.en.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/shop.en.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/messages.en.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/sms.en.yml</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ro.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.ro.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.ro.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ro.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ro.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.ro.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ro.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ro.xliff</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hr.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hr.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hr.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hr.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hr.xliff</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.et.yml</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.bg.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.bg.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.bg.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bg.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bg.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.bg.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.bg.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.bg.xliff</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ja.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ja.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ja.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ja.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ja.xliff</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sk.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sk.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sk.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.sk.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sk.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sk.xliff</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fi.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fi.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fi.xliff</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.he.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.he.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.he.yml</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Latn.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sr_Latn.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sr_Latn.yml</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.da.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.da.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.da.yml</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.zh_CN.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.zh_CN.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.zh_CN.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.zh_CN.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.zh_CN.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.zh_CN.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.zh_CN.xliff</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.el.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.el.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.el.yml</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sl.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sl.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sl.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sl.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sl.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.sl.xliff</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.es.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.es.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.es.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.es.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.es.yml</argument>
            <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.es.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.es.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.es.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.es.xliff</argument>
            <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/IbrowsSonataTranslationBundle.es.yml</argument>
            <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/SonataAdminBundle.es.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/shop.es.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/messages.es.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/sms.es.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/admin.es.yml</argument>
            <argument>/var/www/wolopay/app/Resources/translations/default.es.yml</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.uk.yml</argument>
            <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.uk.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.uk.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.uk.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.uk.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.uk.xliff</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.eu.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.eu.yml</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.eu.xliff</argument>
            <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.eu.xliff</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lv.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lv.yml</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ua.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nb.yml</argument>
            <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nb.yml</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
      <autowiring-type>Symfony\Component\Translation\TranslatorInterface</autowiring-type>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
      <call method="addLoader">
        <argument>database</argument>
        <argument type="service" id="lexik_translation.loader.database"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="test.client" class="Symfony\Bundle\FrameworkBundle\Client" shared="false">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument type="service">
        <service class="Symfony\Component\BrowserKit\History" shared="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\BrowserKit\CookieJar" shared="false"/>
      </argument>
    </service>
    <service id="test.client.history" class="Symfony\Component\BrowserKit\History" shared="false"/>
    <service id="test.client.cookiejar" class="Symfony\Component\BrowserKit\CookieJar" shared="false"/>
    <service id="test.session.listener" class="Symfony\Bundle\FrameworkBundle\EventListener\TestSessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.filesystem"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="name">WOLOPAY</argument>
        <argument key="cookie_httponly">true</argument>
        <argument key="gc_probability">1</argument>
      </argument>
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="security.secure_random" class="Symfony\Component\Security\Core\Util\SecureRandom">
      <deprecated>The "%service_id%" service is deprecated since Symfony 2.8 and will be removed in 3.0. Use the random_bytes() function instead.</deprecated>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type" alias="form"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <tag name="form.type" alias="birthday"/>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <tag name="form.type" alias="checkbox"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type" alias="choice"/>
      <argument type="service">
        <service class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
              <argument type="service">
                <service class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
              </argument>
              <argument type="service" id="property_accessor"/>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <tag name="form.type" alias="collection"/>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <tag name="form.type" alias="country"/>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <tag name="form.type" alias="date"/>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <tag name="form.type" alias="datetime"/>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <tag name="form.type" alias="email"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type" alias="file"/>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <tag name="form.type" alias="hidden"/>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <tag name="form.type" alias="integer"/>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <tag name="form.type" alias="language"/>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <tag name="form.type" alias="locale"/>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <tag name="form.type" alias="money"/>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <tag name="form.type" alias="number"/>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <tag name="form.type" alias="password"/>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <tag name="form.type" alias="percent"/>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <tag name="form.type" alias="radio"/>
    </service>
    <service id="form.type.range" class="Symfony\Component\Form\Extension\Core\Type\RangeType">
      <tag name="form.type" alias="range"/>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <tag name="form.type" alias="repeated"/>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <tag name="form.type" alias="search"/>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <tag name="form.type" alias="textarea"/>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <tag name="form.type" alias="text"/>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <tag name="form.type" alias="time"/>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <tag name="form.type" alias="timezone"/>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <tag name="form.type" alias="url"/>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <tag name="form.type" alias="button"/>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <tag name="form.type" alias="submit"/>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <tag name="form.type" alias="reset"/>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <tag name="form.type" alias="currency"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service">
        <service class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\Util\ServerParams" public="false">
              <argument type="service" id="request_stack"/>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.csrf_provider" class="Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter">
      <argument type="service" id="security.csrf.token_manager"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 2.4 and will be removed in 3.0. Use the "security.csrf.token_manager" service instead.</deprecated>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
          <argument type="service" id="session"/>
        </service>
      </argument>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service">
        <service class="Symfony\Component\Asset\UrlPackage" public="false">
          <argument type="collection">
            <argument>http://sym2_pay_gateway.test</argument>
          </argument>
          <argument type="service" id="assets._version__default"/>
          <argument type="service" id="assets.context"/>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="assets._version__default" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy">
      <argument>1</argument>
      <argument>%%s?%%s</argument>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/var/www/wolopay/var/cache/test_dev</argument>
    </service>
    <service id="templating.helper.assets" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper">
      <tag name="templating.helper" alias="assets"/>
      <argument type="service" id="assets.packages"/>
      <argument type="collection"/>
    </service>
    <service id="templating.helper.router" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper">
      <tag name="templating.helper" alias="router"/>
      <argument type="service" id="router"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
          <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/config/validation.xml</argument>
          <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service">
            <service class="FOS\UserBundle\Validator\Initializer" public="false">
              <tag name="validator.initializer"/>
              <argument type="service" id="fos_user.user_manager"/>
            </service>
          </argument>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/DependencyInjection/Compiler/../../Resources/config/storage-validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="validator.expression">validator.expression</argument>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator">validator.expression</argument>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator">validator.email</argument>
        <argument key="security.validator.user_password">security.validator.user_password</argument>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">security.validator.user_password</argument>
        <argument key="doctrine.orm.validator.unique">doctrine.orm.validator.unique</argument>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">doctrine.orm.validator.unique</argument>
        <argument key="sonata.core.validator.inline">sonata.core.validator.inline</argument>
        <argument key="Sonata\CoreBundle\Validator\InlineValidator">sonata.core.validator.inline</argument>
        <argument key="sonata.admin.validator.inline">sonata.admin.validator.inline</argument>
        <argument key="Sonata\AdminBundle\Validator\InlineValidator">sonata.admin.validator.inline</argument>
        <argument key="sonata.media.validator.format">sonata.media.validator.format</argument>
        <argument key="Sonata\MediaBundle\Validator\FormatValidator">sonata.media.validator.format</argument>
        <argument key="transaction_general_validation">transaction.validator.value_current</argument>
        <argument key="AppBundle\Validator\Constraints\TransactionGeneralValidator">transaction.validator.value_current</argument>
      </argument>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler">
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
          <argument>file:/var/www/wolopay/var/cache/test_dev/profiler</argument>
          <argument></argument>
          <argument></argument>
          <argument>86400</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <call method="disable"/>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
            <argument type="service" id="kernel" on-invalid="ignore"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
            <tag name="monolog.logger" channel="profiler"/>
            <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
            <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
            <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            <argument type="service" id="security.role_hierarchy"/>
            <argument type="service" id="security.logout_url_generator"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
            <argument type="service" id="twig.profile"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
            <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
            <argument type="service" id="doctrine"/>
            <call method="addLogger">
              <argument>default</argument>
              <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
            <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Misd\GuzzleBundle\DataCollector\GuzzleDataCollector" public="false">
            <tag name="data_collector" template="MisdGuzzleBundle:Collector:guzzle" id="guzzle"/>
            <argument type="service" id="misd_guzzle.log.adapter.array"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector" public="false">
            <tag name="data_collector" id="block" template="SonataBlockBundle:Profiler:block.html.twig"/>
            <argument type="service" id="sonata.block.templating.helper"/>
            <argument type="collection">
              <argument>sonata.block.service.container</argument>
              <argument>sonata.page.block.container</argument>
              <argument>cmf.block.container</argument>
              <argument>cmf.block.slideshow</argument>
            </argument>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ladybug_data_collector"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
            <call method="setKernel">
              <argument type="service" id="kernel" on-invalid="ignore"/>
            </call>
          </service>
        </argument>
      </call>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.controller"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.yaml_collection"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.xml_collection"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="sonata.admin.route_loader"/>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>-4182</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>javascript: var r = new XMLHttpRequest; r.open('get', 'http://localhost:8091?message=%%f:%%l');r.send()</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>data_collector.router</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>fos_rest.body_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>fos_rest.format_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>34</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>fos_rest.param_fetcher_listener</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>nelmio_api_doc.event_listener.request</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>lexik_translation.event.get_database_resources</argument>
        <argument type="collection">
          <argument>lexik_translation.listener.get_database_resources</argument>
          <argument>onGetDatabaseResources</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>sonata.block.cache.handler.default</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>knp_menu.listener.voters</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>besimple.soap.request_format.listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument>besimple.soap.response.listener</argument>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>console.command</argument>
        <argument type="collection">
          <argument>matthias_symfony_console_form.handle_form_based_command_event_listener</argument>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListenerService">
        <argument>console.command</argument>
        <argument type="collection">
          <argument>matthias_symfony_console_form.set_input_definition_of_form_based_command_event_listener</argument>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListenerService">
        <argument>console.command</argument>
        <argument type="collection">
          <argument>matthias_symfony_console.register_styles_event_listener</argument>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>1000</argument>
      </call>
      <call method="addListenerService">
        <argument>console.command</argument>
        <argument type="collection">
          <argument>matthias_symfony_console_form.register_helpers_event_listener</argument>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>1000</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>ladybug.event_listener.ladybug_config_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.completed</argument>
        <argument type="collection">
          <argument>app.gamer_wallet</argument>
          <argument>onShopPaymentCompleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.cancelled</argument>
        <argument type="collection">
          <argument>app.gamer_wallet</argument>
          <argument>onShopPaymentCancelled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.completed</argument>
        <argument type="collection">
          <argument>app.internal_payment_notification</argument>
          <argument>onShopPaymentCompleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.cancelled</argument>
        <argument type="collection">
          <argument>app.internal_payment_notification</argument>
          <argument>onShopPaymentCancelled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.completed</argument>
        <argument type="collection">
          <argument>command.common.node_emit</argument>
          <argument>onShopPaymentCompleted</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.pending</argument>
        <argument type="collection">
          <argument>command.common.node_emit</argument>
          <argument>onShopPaymentPending</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.completed</argument>
        <argument type="collection">
          <argument>command.shop.offer.sync</argument>
          <argument>onShopPaymentCompleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.completed</argument>
        <argument type="collection">
          <argument>shop_app.business_intelligent</argument>
          <argument>onShopPaymentCompleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.cancelled</argument>
        <argument type="collection">
          <argument>shop_app.business_intelligent</argument>
          <argument>onShopPaymentCancelled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.transaction.started</argument>
        <argument type="collection">
          <argument>shop_app.business_intelligent</argument>
          <argument>onShopTransactionStarted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.purchase.extra_cost</argument>
        <argument type="collection">
          <argument>shop_app.business_intelligent</argument>
          <argument>onShopPurchaseExtracost</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.completed</argument>
        <argument type="collection">
          <argument>command.shop.app_notification.send</argument>
          <argument>onShopPaymentCompleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument>app.kernel_exception</argument>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>app.gamer.create</argument>
        <argument type="collection">
          <argument>app.gamer</argument>
          <argument>onAppGamerCreate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.completed</argument>
        <argument type="collection">
          <argument>shop_app.article</argument>
          <argument>onShopPaymentCompleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.completed</argument>
        <argument type="collection">
          <argument>app.emails</argument>
          <argument>onShopPaymentCompleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>payment.notification.failed</argument>
        <argument type="collection">
          <argument>app.emails</argument>
          <argument>onPaymentNotificationFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.cancelled</argument>
        <argument type="collection">
          <argument>app.emails</argument>
          <argument>onShopPaymentCancelled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>app.billing_invoices.generated</argument>
        <argument type="collection">
          <argument>app.emails</argument>
          <argument>onAppBillinginvoicesGenerated</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shop.payment.cancelled</argument>
        <argument type="collection">
          <argument>app.client_user_notifications</argument>
          <argument>onShopPaymentCancelled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>payment.notification.failed</argument>
        <argument type="collection">
          <argument>app.client_user_notifications</argument>
          <argument>onPaymentNotificationFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument>app.user_details</argument>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>app.api_language</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>translator_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\TranslatorListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>test.session.listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\TestSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session.save_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\SaveSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fragment.listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\FragmentListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>profiler_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ProfilerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>data_collector.request</argument>
        <argument>Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.firewall</argument>
        <argument>Symfony\Component\Security\Http\Firewall</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.rememberme.response_listener</argument>
        <argument>Symfony\Component\Security\Http\RememberMe\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>swiftmailer.email_sender.listener</argument>
        <argument>Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.controller.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.converter.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.view.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.cache.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.security.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>stof_doctrine_extensions.event_listener.locale</argument>
        <argument>Stof\DoctrineExtensionsBundle\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_rest.exception_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.security.interactive_login_listener</argument>
        <argument>FOS\UserBundle\EventListener\LastLoginListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.listener.authentication</argument>
        <argument>FOS\UserBundle\EventListener\AuthenticationListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.listener.flash</argument>
        <argument>FOS\UserBundle\EventListener\FlashListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.listener.resetting</argument>
        <argument>FOS\UserBundle\EventListener\ResettingListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>besimple.soap.exception_listener</argument>
        <argument>BeSimple\SoapBundle\EventListener\SoapExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.dump_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DumpListener</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service" id="jms_di_extra.controller_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="security.context" class="Symfony\Component\Security\Core\SecurityContext">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 2.6 and will be removed in 3.0.</deprecated>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="security.user.provider.concrete.api_user"/>
            <argument type="service" id="security.user_checker.gettoken"/>
            <argument>gettoken</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authentication\Provider\JWTProvider" public="false">
            <argument type="service" id="security.user.provider.concrete.api_user"/>
            <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
            <argument type="service" id="debug.event_dispatcher"/>
            <call method="setUserIdentityField">
              <argument>username</argument>
            </call>
          </service>
        </argument>
        <argument type="service" id="escape_wsse_authentication.provider.api"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="security.user.provider.concrete.api_user"/>
            <argument type="service" id="security.user_checker.gettoken"/>
            <argument>api</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service" id="security.authentication.provider.s_transaction.shop"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="fos_user.user_provider.username_email"/>
            <argument type="service" id="security.user_checker.gettoken"/>
            <argument>main</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false">
            <argument type="service" id="security.user_checker.gettoken"/>
            <argument>ThisTokenIsNotSoSecretChangeIt</argument>
            <argument>main</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>575fe618034499.46771083</argument>
          </service>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="collection"/>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
      <call method="setVoters">
        <argument type="collection">
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
              <tag name="security.voter" priority="245"/>
              <argument type="service" id="security.role_hierarchy"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
              <tag name="security.voter" priority="245"/>
              <argument type="service">
                <service class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
              </argument>
              <argument type="service" id="security.authentication.trust_resolver"/>
              <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
              <tag name="security.voter" priority="250"/>
              <argument type="service" id="security.authentication.trust_resolver"/>
            </service>
          </argument>
        </argument>
      </call>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection">
        <argument key="ROLE_APP_ADMIN_FIN_MOVEMENT_ALL" type="collection">
          <argument>ROLE_APP_ADMIN_FIN_MOVEMENT_LIST</argument>
          <argument>ROLE_APP_ADMIN_FIN_MOVEMENT_VIEW</argument>
          <argument>ROLE_APP_ADMIN_FIN_MOVEMENT_CREATE</argument>
          <argument>ROLE_APP_ADMIN_FIN_MOVEMENT_EDIT</argument>
          <argument>ROLE_APP_ADMIN_FIN_MOVEMENT_DELETE</argument>
          <argument>ROLE_APP_ADMIN_FIN_MOVEMENT_EXPORT</argument>
        </argument>
        <argument key="ROLE_APP_ADMIN_FIN_INVOICE_ALL" type="collection">
          <argument>ROLE_APP_ADMIN_FIN_INVOICE_LIST</argument>
          <argument>ROLE_APP_ADMIN_FIN_INVOICE_VIEW</argument>
          <argument>ROLE_APP_ADMIN_FIN_INVOICE_CREATE</argument>
          <argument>ROLE_APP_ADMIN_FIN_INVOICE_EDIT</argument>
          <argument>ROLE_APP_ADMIN_FIN_INVOICE_DELETE</argument>
          <argument>ROLE_APP_ADMIN_FIN_INVOICE_EXPORT</argument>
        </argument>
        <argument key="ROLE_APP_ADMIN_CLIENT_DOCUMENT_ALL" type="collection">
          <argument>ROLE_APP_ADMIN_CLIENT_DOCUMENT_LIST</argument>
          <argument>ROLE_APP_ADMIN_CLIENT_DOCUMENT_VIEW</argument>
          <argument>ROLE_APP_ADMIN_CLIENT_DOCUMENT_CREATE</argument>
          <argument>ROLE_APP_ADMIN_CLIENT_DOCUMENT_EDIT</argument>
          <argument>ROLE_APP_ADMIN_CLIENT_DOCUMENT_DELETE</argument>
          <argument>ROLE_APP_ADMIN_CLIENT_DOCUMENT_EXPORT</argument>
        </argument>
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_TRANSLATOR</argument>
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
          <argument>ROLE_ADMIN_CLIENT</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
          <argument>ROLE_TEST</argument>
          <argument>ROLE_SONATA_FIN_MOVEMENT</argument>
          <argument>ROLE_SONATA_STATS_INTERNAL</argument>
          <argument>ROLE_SONATA_BILLING_INVOICES_PENDING_ALL</argument>
        </argument>
        <argument key="ROLE_SONATA_FIN_MOVEMENT" type="collection">
          <argument>ROLE_SONATA_ADMIN</argument>
          <argument>ROLE_APP_ADMIN_FIN_MOVEMENT_ALL</argument>
          <argument>ROLE_APP_ADMIN_FIN_INVOICE_ALL</argument>
          <argument>ROLE_SONATA_STATS_INTERNAL</argument>
          <argument>ROLE_APP_ADMIN_CLIENT_DOCUMENT_ALL</argument>
        </argument>
        <argument key="ROLE_SONATA_STATS_INTERNAL" type="collection">
          <argument>ROLE_SONATA_ADMIN</argument>
          <argument>ROLE_SONATA_STATS_INTERNAL_ALL</argument>
        </argument>
      </argument>
    </service>
    <service id="security.firewall" class="Symfony\Component\Security\Http\Firewall">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="security.firewall.map.context.gettoken" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/api/jwtokens$</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.api" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/api/v.*</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.shop" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/shop/.*</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.main" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/</argument>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="router" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
          <argument>80</argument>
          <argument>443</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/login$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/register</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/resetting</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/resetting</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/backoffice/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_SUPER_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/translator/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_TRANSLATOR</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_ADMIN_CLIENT</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/payment/done_static/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/payment/cancel_static/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/payment/ipn_static/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/sms/ipn_static</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/sms_fortuno/ipn_static</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/sms_fortuno/billing</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/voice/ipn_static</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/demo$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/demo_test$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_TEST</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/shop/</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_TRANSACTION</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/api/v[0-9]+</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_API</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.user.provider.concrete.api_user" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>AppBundle\Entity\AppApiCredentials</argument>
      <argument>codeKey</argument>
      <argument>null</argument>
    </service>
    <service id="security.user.provider.concrete.transaction_prov" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>AppBundle\Entity\Transaction</argument>
      <argument>id</argument>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.gettoken" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Gfreeau\Bundle\GetJWTBundle\Security\Firewall\GetJWTListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument>gettoken</argument>
            <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
            <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
            <argument type="collection">
              <argument key="username_parameter">apiCode</argument>
              <argument key="password_parameter">apiSecret</argument>
              <argument key="post_only">true</argument>
              <argument key="success_handler">lexik_jwt_authentication.handler.authentication_success</argument>
              <argument key="failure_handler">lexik_jwt_authentication.handler.authentication_failure</argument>
              <argument key="throw_exceptions">false</argument>
              <argument key="authentication_provider">security.authentication.provider.dao</argument>
              <argument key="user_checker">security.user_checker</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>gettoken</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>true</argument>
        </service>
      </argument>
    </service>
    <service id="escape_wsse_authentication.encoder.api" class="Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder">
      <argument>sha1</argument>
      <argument>true</argument>
      <argument>1</argument>
    </service>
    <service id="escape_wsse_authentication.nonce_cache.api" class="Doctrine\Common\Cache\PhpFileCache">
      <argument>/var/www/wolopay/var/cache/test_dev/security/nonces</argument>
    </service>
    <service id="escape_wsse_authentication.provider.api" class="AppBundle\Security\Authentication\Provider\ProviderWSSEOverride">
      <argument type="service" id="security.user_checker.gettoken"/>
      <argument type="service" id="security.user.provider.concrete.api_user"/>
      <argument>api</argument>
      <argument type="service" id="escape_wsse_authentication.encoder.api"/>
      <argument type="service" id="escape_wsse_authentication.nonce_cache.api"/>
      <argument>300</argument>
      <argument>/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/</argument>
    </service>
    <service id="escape_wsse_authentication.entry_point.api" class="Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint">
      <argument type="service" id="logger"/>
      <argument>Secured with WSSE</argument>
      <argument>UsernameToken</argument>
    </service>
    <service id="escape_wsse_authentication.listener.api" class="Escape\WSSEAuthenticationBundle\Security\Http\Firewall\Listener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>api</argument>
      <argument type="service" id="escape_wsse_authentication.entry_point.api"/>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Lexik\Bundle\JWTAuthenticationBundle\Security\Firewall\JWTListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="collection">
              <argument key="authorization_header" type="collection">
                <argument key="enabled">true</argument>
                <argument key="prefix">Bearer</argument>
                <argument key="name">Authorization</argument>
              </argument>
              <argument key="cookie" type="collection">
                <argument key="enabled">false</argument>
                <argument key="name">BEARER</argument>
              </argument>
              <argument key="query_parameter" type="collection">
                <argument key="enabled">false</argument>
                <argument key="name">bearer</argument>
              </argument>
              <argument key="throw_exceptions">false</argument>
              <argument key="create_entry_point">true</argument>
              <argument key="authentication_provider">lexik_jwt_authentication.security.authentication.provider</argument>
              <argument key="authentication_listener">lexik_jwt_authentication.security.authentication.listener</argument>
            </argument>
            <call method="setDispatcher">
              <argument type="service" id="debug.event_dispatcher"/>
            </call>
            <call method="addTokenExtractor">
              <argument type="service">
                <service class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\AuthorizationHeaderTokenExtractor" public="false">
                  <argument>Bearer</argument>
                  <argument>Authorization</argument>
                </service>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service" id="escape_wsse_authentication.listener.api"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument>api</argument>
            <argument type="service" id="escape_wsse_authentication.entry_point.api"/>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>api</argument>
          <argument type="service" id="escape_wsse_authentication.entry_point.api"/>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>true</argument>
        </service>
      </argument>
    </service>
    <service id="security.authentication.provider.s_transaction.shop" class="AppBundle\Security\Authentication\Provider\STransactionProvider">
      <argument type="service" id="security.user.provider.concrete.transaction_prov"/>
      <argument type="service" id="shop.logger.transaction_helper"/>
    </service>
    <service id="security.authentication.listener.s_transaction.shop" class="AppBundle\Security\Firewall\STransactionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="templating"/>
    </service>
    <service id="security.firewall.map.context.shop" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.s_transaction.shop"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>shop</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>true</argument>
        </service>
      </argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="collection">
              <argument type="service" id="fos_user.user_provider.username_email"/>
              <argument type="service" id="security.user.provider.concrete.api_user"/>
              <argument type="service" id="security.user.provider.concrete.transaction_prov"/>
            </argument>
            <argument>main</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>/admin</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">logout</argument>
              <argument key="logout_path">/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service">
                <service class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
              </argument>
            </call>
            <call method="addHandler">
              <argument type="service">
                <service class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false">
                  <argument type="collection">
                    <argument type="service" id="fos_user.user_provider.username_email"/>
                  </argument>
                  <argument>ThisTokenIsNotSoSecretChangeIt</argument>
                  <argument>main</argument>
                  <argument type="collection">
                    <argument key="lifetime">31536000</argument>
                    <argument key="path">/</argument>
                    <argument key="domain">null</argument>
                    <argument key="name">REMEMBERME</argument>
                    <argument key="secure">false</argument>
                    <argument key="httponly">true</argument>
                    <argument key="always_remember_me">false</argument>
                    <argument key="remember_me_parameter">_remember_me</argument>
                  </argument>
                  <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                </service>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.fos_userbundle"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>main</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="default_target_path">/admin/</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="login_path">/login</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>main</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="check_path">/login_check</argument>
              <argument key="use_forward">false</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument type="service" id="form.csrf_provider"/>
            <call method="setRememberMeServices">
              <argument type="service">
                <service class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false">
                  <argument type="collection">
                    <argument type="service" id="fos_user.user_provider.username_email"/>
                  </argument>
                  <argument>ThisTokenIsNotSoSecretChangeIt</argument>
                  <argument>main</argument>
                  <argument type="collection">
                    <argument key="lifetime">31536000</argument>
                    <argument key="path">/</argument>
                    <argument key="domain">null</argument>
                    <argument key="name">REMEMBERME</argument>
                    <argument key="secure">false</argument>
                    <argument key="httponly">true</argument>
                    <argument key="always_remember_me">false</argument>
                    <argument key="remember_me_parameter">_remember_me</argument>
                  </argument>
                  <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                </service>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false">
                <argument type="collection">
                  <argument type="service" id="fos_user.user_provider.username_email"/>
                </argument>
                <argument>ThisTokenIsNotSoSecretChangeIt</argument>
                <argument>main</argument>
                <argument type="collection">
                  <argument key="lifetime">31536000</argument>
                  <argument key="path">/</argument>
                  <argument key="domain">null</argument>
                  <argument key="name">REMEMBERME</argument>
                  <argument key="secure">false</argument>
                  <argument key="httponly">true</argument>
                  <argument key="always_remember_me">false</argument>
                  <argument key="remember_me_parameter">_remember_me</argument>
                </argument>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
              </service>
            </argument>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>true</argument>
            <argument type="service" id="security.authentication.session_strategy"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument>575fe618034499.46771083</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="fos_user.user_provider.username_email"/>
            <argument type="service" id="security.user_checker.gettoken"/>
            <argument>main</argument>
            <argument type="service" id="security.access.decision_manager"/>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument>_switch_user</argument>
            <argument>ROLE_ALLOWED_TO_SWITCH</argument>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>main</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>/login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="twig" class="Twig_Environment">
      <argument type="service" id="twig.loader"/>
      <argument type="collection">
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>SonataCoreBundle:Form:datepicker.html.twig</argument>
          <argument>::Sonata/media_widgets.html.twig</argument>
          <argument>@App/Partials/captcha_horizontal.html.twig</argument>
          <argument>BraincraftedBootstrapBundle:Form:bootstrap.html.twig</argument>
        </argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">AppBundle\Exception\TwigException::showAction</argument>
        <argument key="autoescape">filename</argument>
        <argument key="cache">/var/www/wolopay/var/cache/test_dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="paths" type="collection"/>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="AppBundle\Twig\PrintRExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="AppBundle\Twig\EvaluateExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="AppBundle\Twig\InjectExtension" public="false">
            <tag name="twig.extension"/>
            <argument>/var/www/wolopay/app</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="AppBundle\Twig\InjectExternalContentExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.logout_url_generator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="twig.profile"/>
            <argument type="service" id="debug.stopwatch" on-invalid="null"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="translator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="assets.packages"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
                <tag name="twig.extension"/>
                <argument type="service" id="request_stack"/>
                <argument type="service" id="router.request_context" on-invalid="ignore"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\ActionsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
            <tag name="twig.extension"/>
            <argument>javascript: var r = new XMLHttpRequest; r.open('get', 'http://localhost:8091?message=%%f:%%l');r.send()</argument>
            <argument>/var/www/wolopay/app</argument>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="router.request_context" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Form\TwigRenderer" public="false">
                <argument type="service">
                  <service class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
                    <argument type="collection">
                      <argument>GregwarCaptchaBundle::captcha.html.twig</argument>
                      <argument>form_div_layout.html.twig</argument>
                      <argument>SonataCoreBundle:Form:datepicker.html.twig</argument>
                      <argument>::Sonata/media_widgets.html.twig</argument>
                      <argument>@App/Partials/captcha_horizontal.html.twig</argument>
                      <argument>BraincraftedBootstrapBundle:Form:bootstrap.html.twig</argument>
                    </argument>
                  </service>
                </argument>
                <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Debug" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Twig\AsseticExtension" public="false">
            <tag name="twig.extension"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service" id="assetic.asset_factory"/>
            <argument type="service" id="templating.name_parser"/>
            <argument>false</argument>
            <argument type="collection"/>
            <argument type="collection">
              <argument>FOSUserBundle</argument>
              <argument>AppBundle</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Bundle\AsseticBundle\DefaultValueSupplier" public="false">
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="braincrafted_bootstrap.twig.icon_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="braincrafted_bootstrap.twig.button_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="braincrafted_bootstrap.twig.label_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="braincrafted_bootstrap.twig.badge_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="braincrafted_bootstrap.twig.form_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="JMS\Serializer\Twig\SerializerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="jms_serializer"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="nelmio_api_doc.twig.extension.extra_markdown"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.block.templating.helper"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Twig\MenuExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Knp\Menu\Twig\Helper" public="false">
                <argument type="service" id="knp_menu.renderer_provider"/>
                <argument type="service" id="knp_menu.menu_provider"/>
                <argument type="service">
                  <service class="Knp\Menu\Util\MenuManipulator" public="false"/>
                </argument>
              </service>
            </argument>
            <argument type="service" id="knp_menu.matcher"/>
            <argument type="service">
              <service class="Knp\Menu\Util\MenuManipulator" public="false"/>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\LocaleExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.locale"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\NumberExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.number"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\DateTimeExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.datetime"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="RaulFraile\Bundle\LadybugBundle\Twig\Extension\LadybugExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="ladybug.dumper"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="var_dumper.cloner"/>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service">
          <service class="Symfony\Bridge\Twig\AppVariable" public="false">
            <call method="setEnvironment">
              <argument>test_dev</argument>
            </call>
            <call method="setDebug">
              <argument>true</argument>
            </call>
            <call method="setTokenStorage">
              <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            </call>
            <call method="setRequestStack">
              <argument type="service" id="request_stack" on-invalid="ignore"/>
            </call>
            <call method="setContainer">
              <argument type="service" id="service_container"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>analitycs</argument>
        <argument>null</argument>
      </call>
      <call method="addGlobal">
        <argument>assets_version</argument>
        <argument>1</argument>
      </call>
      <call method="addGlobal">
        <argument>domain_main</argument>
        <argument>http://sym2_pay_gateway.test</argument>
      </call>
      <call method="addGlobal">
        <argument>kernel_root_dir</argument>
        <argument>/var/www/wolopay/app</argument>
      </call>
      <call method="addGlobal">
        <argument>email_billing</argument>
        <argument>miguelgd1985@gmail.com</argument>
      </call>
      <call method="addGlobal">
        <argument>email_finance</argument>
        <argument>miguelgd1985@gmail.com</argument>
      </call>
      <call method="addGlobal">
        <argument>shopping_cart_max_items</argument>
        <argument>10</argument>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_media</argument>
        <argument type="service" id="sonata.media.twig.global"/>
      </call>
      <configurator method="configure">
        <service class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
          <argument>F j, Y H:i</argument>
          <argument>%d days</argument>
          <argument>null</argument>
          <argument>0</argument>
          <argument>.</argument>
          <argument>,</argument>
        </service>
      </configurator>
    </service>
    <service id="twig.profile" class="Twig_Profiler_Profile"/>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController">
      <argument type="service" id="http_kernel"/>
      <argument>AppBundle\Exception\TwigException::showAction</argument>
    </service>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="assetic.filter_manager" class="Symfony\Bundle\AsseticBundle\FilterManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="uglifyjs2">assetic.filter.uglifyjs2</argument>
        <argument key="less">assetic.filter.less</argument>
        <argument key="cssrewrite">assetic.filter.cssrewrite</argument>
      </argument>
    </service>
    <service id="assetic.asset_manager" class="Assetic\Factory\LazyAssetManager">
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="collection">
        <argument key="config" type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader" public="false">
            <tag name="assetic.formula_loader" alias="config"/>
          </service>
        </argument>
        <argument key="twig" type="service">
          <service class="Assetic\Factory\Loader\CachedFormulaLoader" public="false">
            <tag name="assetic.formula_loader" alias="twig"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service">
              <service class="Assetic\Extension\Twig\TwigFormulaLoader" public="false">
                <tag name="assetic.templating.twig"/>
                <tag name="monolog.logger" channel="assetic"/>
                <argument type="service" id="twig"/>
                <argument type="service" id="monolog.logger.assetic" on-invalid="ignore"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Assetic\Cache\ConfigCache" public="false">
                <argument>/var/www/wolopay/var/cache/test_dev/assetic/config</argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </argument>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource" public="false">
            <tag name="assetic.formula_resource" loader="config"/>
            <argument type="collection">
              <argument key="bootstrap_css" type="collection">
                <argument type="collection">
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/less/bootstrap.less</argument>
                  <argument>/var/www/wolopay/vendor/braincrafted/bootstrap-bundle/Braincrafted/Bundle/BootstrapBundle/DependencyInjection/../Resources/less/form.less</argument>
                </argument>
                <argument type="collection">
                  <argument>less</argument>
                </argument>
                <argument type="collection">
                  <argument key="output">css/bootstrap.css</argument>
                </argument>
              </argument>
              <argument key="bootstrap_js" type="collection">
                <argument type="collection">
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/transition.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/alert.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/button.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/carousel.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/collapse.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/dropdown.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/modal.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/tooltip.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/popover.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/scrollspy.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/tab.js</argument>
                  <argument>/var/www/wolopay/app/../vendor/twbs/bootstrap/js/affix.js</argument>
                  <argument>/var/www/wolopay/vendor/braincrafted/bootstrap-bundle/Braincrafted/Bundle/BootstrapBundle/DependencyInjection/../Resources/js/bc-bootstrap-collection.js</argument>
                </argument>
                <argument type="collection"/>
                <argument type="collection">
                  <argument key="output">js/bootstrap.js</argument>
                </argument>
              </argument>
              <argument key="jquery" type="collection">
                <argument type="collection">
                  <argument>/var/www/wolopay/app/../web/bower_components/jquery/dist/jquery.min.js</argument>
                </argument>
                <argument type="collection"/>
                <argument type="collection">
                  <argument key="output">js/jquery.js</argument>
                </argument>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>config</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>FOSUserBundle</argument>
                  <argument>/var/www/wolopay/app/Resources/FOSUserBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>FOSUserBundle</argument>
                  <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AppBundle</argument>
                  <argument>/var/www/wolopay/app/Resources/AppBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AppBundle</argument>
                  <argument>/var/www/wolopay/src/AppBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="service" id="templating.loader"/>
            <argument></argument>
            <argument>/var/www/wolopay/app/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
    </service>
    <service id="assetic.asset_factory" class="Symfony\Bundle\AsseticBundle\Factory\AssetFactory" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag" public="false">
          <factory service="service_container" method="getParameterBag"/>
        </service>
      </argument>
      <argument>/var/www/wolopay/app/../web</argument>
      <argument>true</argument>
      <call method="addWorker">
        <argument type="service">
          <service class="Assetic\Factory\Worker\EnsureFilterWorker" public="false">
            <tag name="assetic.factory_worker"/>
            <argument>/\.less$/</argument>
            <argument type="service" id="assetic.filter.less"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="assetic.filter.less" class="Assetic\Filter\LessFilter">
      <tag name="assetic.filter" alias="less"/>
      <argument>/usr/bin/nodejs</argument>
      <argument type="collection">
        <argument>/home/mgarcia/npm/lib/node_modules/</argument>
      </argument>
      <call method="setTimeout">
        <argument>null</argument>
      </call>
      <call method="setCompress">
        <argument>true</argument>
      </call>
      <call method="setLoadPaths">
        <argument type="collection"/>
      </call>
    </service>
    <service id="assetic.filter.cssrewrite" class="Assetic\Filter\CssRewriteFilter">
      <tag name="assetic.filter" alias="cssrewrite"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="AppBundle\Tests\Lib\Doctrine\ConnectionFactoryTesting">
      <argument type="collection">
        <argument key="json" type="collection">
          <argument key="class">Sonata\Doctrine\Types\JsonType</argument>
          <argument key="commented">true</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection">
      <argument type="collection">
        <argument key="driver">pdo_sqlite</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="dbname">gorrina_1</argument>
        <argument key="user">root</argument>
        <argument key="password">root</argument>
        <argument key="charset">UTF8</argument>
        <argument key="memory">false</argument>
        <argument key="path">/ramcache/test.db</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="wrapperClass">AppBundle\Doctrine\Connection</argument>
        <argument key="serverVersion">5.6</argument>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\DBAL\Configuration" public="false">
          <call method="setSQLLogger">
            <argument type="service">
              <service class="Doctrine\DBAL\Logging\LoggerChain" public="false">
                <call method="addLogger">
                  <argument type="service">
                    <service class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
                      <tag name="monolog.logger" channel="doctrine"/>
                      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
                      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
                <call method="addLogger">
                  <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
          <argument type="service" id="service_container"/>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Gedmo\Sluggable\SluggableListener" public="false">
                <tag name="doctrine.event_subscriber" connection="default"/>
                <call method="setAnnotationReader">
                  <argument type="service" id="annotation_reader"/>
                </call>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Gedmo\Sortable\SortableListener" public="false">
                <tag name="doctrine.event_subscriber" connection="default"/>
                <call method="setAnnotationReader">
                  <argument type="service" id="annotation_reader"/>
                </call>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Gedmo\Timestampable\TimestampableListener" public="false">
                <tag name="doctrine.event_subscriber" connection="default"/>
                <call method="setAnnotationReader">
                  <argument type="service" id="annotation_reader"/>
                </call>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="FOS\UserBundle\Doctrine\Orm\UserListener" public="false">
                <tag name="doctrine.event_subscriber"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.media.doctrine.event_subscriber"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.easy_extends.doctrine.mapper"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="stof_doctrine_extensions.listener.translatable"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>loadClassMetadata</argument>
            </argument>
            <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
          </call>
        </service>
      </argument>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_895626530a69242b12b0db26bb63ac6a9b694f18121e5b157be65eafd91bcd5c</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_895626530a69242b12b0db26bb63ac6a9b694f18121e5b157be65eafd91bcd5c</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_895626530a69242b12b0db26bb63ac6a9b694f18121e5b157be65eafd91bcd5c</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\ORM\Mapping\DefaultEntityListenerResolver"/>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_second_level_cache.region_cache_driver" class="Doctrine\Common\Cache\ApcCache">
      <call method="setNamespace">
        <argument>sf2orm_default_895626530a69242b12b0db26bb63ac6a9b694f18121e5b157be65eafd91bcd5c</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_second_level_cache.cache_configuration" class="Doctrine\ORM\Cache\CacheConfiguration">
      <call method="setCacheLogger">
        <argument type="service">
          <service class="Doctrine\ORM\Cache\Logging\CacheLoggerChain">
            <call method="setLogger">
              <argument>statistics</argument>
              <argument type="service">
                <service class="Doctrine\ORM\Cache\Logging\StatisticsCacheLogger"/>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setCacheFactory">
        <argument type="service">
          <service class="Doctrine\ORM\Cache\DefaultCacheFactory">
            <argument type="service" id="doctrine.orm.default_second_level_cache.regions_configuration"/>
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_second_level_cache.region_cache_driver"/>
          </service>
        </argument>
      </call>
      <call method="setRegionsConfiguration">
        <argument type="service">
          <service class="Doctrine\ORM\Cache\RegionsConfiguration"/>
        </argument>
      </call>
    </service>
    <service id="doctrine.orm.default_second_level_cache.regions_configuration" class="Doctrine\ORM\Cache\RegionsConfiguration"/>
    <service id="doctrine.orm.default_second_level_cache.default_cache_factory" class="Doctrine\ORM\Cache\DefaultCacheFactory">
      <argument type="service" id="doctrine.orm.default_second_level_cache.regions_configuration"/>
      <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_second_level_cache.region_cache_driver"/>
    </service>
    <service id="doctrine.orm.default_second_level_cache.logger_chain" class="Doctrine\ORM\Cache\Logging\CacheLoggerChain">
      <call method="setLogger">
        <argument>statistics</argument>
        <argument type="service">
          <service class="Doctrine\ORM\Cache\Logging\StatisticsCacheLogger"/>
        </argument>
      </call>
    </service>
    <service id="doctrine.orm.default_second_level_cache.logger_statistics" class="Doctrine\ORM\Cache\Logging\StatisticsCacheLogger"/>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="EntityManager575fe61833913_546a8d27f194334ee012bfe64f629947b07e4919\__CG__\Doctrine\ORM\EntityManager">
      <file>/var/www/wolopay/var/cache/test_dev/jms_diextra/doctrine/EntityManager_575fe61833913.php</file>
      <argument type="service">
        <service class="Doctrine\ORM\EntityManager" public="false">
          <argument type="service" id="doctrine.dbal.default_connection"/>
          <argument type="service">
            <service class="Doctrine\ORM\Configuration" public="false">
              <call method="setEntityNamespaces">
                <argument type="collection">
                  <argument key="AppBundle">AppBundle\Entity</argument>
                  <argument key="LexikTranslationBundle">Lexik\Bundle\TranslationBundle\Entity</argument>
                  <argument key="SonataMediaBundle">Sonata\MediaBundle\Entity</argument>
                  <argument key="ApplicationSonataMediaBundle">Application\Sonata\MediaBundle\Entity</argument>
                </argument>
              </call>
              <call method="setSecondLevelCacheEnabled">
                <argument>false</argument>
              </call>
              <call method="setSecondLevelCacheConfiguration">
                <argument type="service">
                  <service class="Doctrine\ORM\Cache\CacheConfiguration">
                    <call method="setCacheLogger">
                      <argument type="service">
                        <service class="Doctrine\ORM\Cache\Logging\CacheLoggerChain">
                          <call method="setLogger">
                            <argument>statistics</argument>
                            <argument type="service">
                              <service class="Doctrine\ORM\Cache\Logging\StatisticsCacheLogger"/>
                            </argument>
                          </call>
                        </service>
                      </argument>
                    </call>
                    <call method="setCacheFactory">
                      <argument type="service">
                        <service class="Doctrine\ORM\Cache\DefaultCacheFactory">
                          <argument type="service" id="doctrine.orm.default_second_level_cache.regions_configuration"/>
                          <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_second_level_cache.region_cache_driver"/>
                        </service>
                      </argument>
                    </call>
                    <call method="setRegionsConfiguration">
                      <argument type="service">
                        <service class="Doctrine\ORM\Cache\RegionsConfiguration"/>
                      </argument>
                    </call>
                  </service>
                </argument>
              </call>
              <call method="setMetadataCacheImpl">
                <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
              </call>
              <call method="setQueryCacheImpl">
                <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
              </call>
              <call method="setResultCacheImpl">
                <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
              </call>
              <call method="setMetadataDriverImpl">
                <argument type="service">
                  <service class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                          <argument type="service" id="annotation_reader"/>
                          <argument type="collection">
                            <argument>/var/www/wolopay/src/AppBundle/Entity</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>AppBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                          <argument type="collection">
                            <argument key="/var/www/wolopay/vendor/lexik/translation-bundle/Resources/config/doctrine">Lexik\Bundle\TranslationBundle\Entity</argument>
                            <argument key="/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                            <argument key="/var/www/wolopay/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                          </argument>
                          <call method="setGlobalBasename">
                            <argument>mapping</argument>
                          </call>
                        </service>
                      </argument>
                      <argument>Lexik\Bundle\TranslationBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                          <argument type="collection">
                            <argument key="/var/www/wolopay/vendor/lexik/translation-bundle/Resources/config/doctrine">Lexik\Bundle\TranslationBundle\Entity</argument>
                            <argument key="/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                            <argument key="/var/www/wolopay/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                          </argument>
                          <call method="setGlobalBasename">
                            <argument>mapping</argument>
                          </call>
                        </service>
                      </argument>
                      <argument>Sonata\MediaBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                          <argument type="collection">
                            <argument key="/var/www/wolopay/vendor/lexik/translation-bundle/Resources/config/doctrine">Lexik\Bundle\TranslationBundle\Entity</argument>
                            <argument key="/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                            <argument key="/var/www/wolopay/src/Application/Sonata/MediaBundle/Resources/config/doctrine">Application\Sonata\MediaBundle\Entity</argument>
                          </argument>
                          <call method="setGlobalBasename">
                            <argument>mapping</argument>
                          </call>
                        </service>
                      </argument>
                      <argument>Application\Sonata\MediaBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
                          <argument type="service">
                            <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                              <argument type="collection">
                                <argument key="/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/config/doctrine-mapping">FOS\UserBundle\Model</argument>
                              </argument>
                              <argument>.orm.xml</argument>
                            </service>
                          </argument>
                        </service>
                      </argument>
                      <argument>FOS\UserBundle\Model</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                          <argument type="collection">
                            <argument key="/var/www/wolopay/vendor/lexik/translation-bundle/Resources/config/model">Lexik\Bundle\TranslationBundle\Model</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>Lexik\Bundle\TranslationBundle\Model</argument>
                    </call>
                  </service>
                </argument>
              </call>
              <call method="setProxyDir">
                <argument>/var/www/wolopay/var/cache/test_dev/doctrine/orm/Proxies</argument>
              </call>
              <call method="setProxyNamespace">
                <argument>Proxies</argument>
              </call>
              <call method="setAutoGenerateProxyClasses">
                <argument>true</argument>
              </call>
              <call method="setClassMetadataFactoryName">
                <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
              </call>
              <call method="setDefaultRepositoryClassName">
                <argument>Doctrine\ORM\EntityRepository</argument>
              </call>
              <call method="setNamingStrategy">
                <argument type="service">
                  <service class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
                </argument>
              </call>
              <call method="setQuoteStrategy">
                <argument type="service">
                  <service class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
                </argument>
              </call>
              <call method="setEntityListenerResolver">
                <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
              </call>
              <call method="addCustomStringFunction">
                <argument>ifelse</argument>
                <argument>AppBundle\Doctrine\IfElse</argument>
              </call>
              <call method="addCustomNumericFunction">
                <argument>rand</argument>
                <argument>AppBundle\Doctrine\CustomFunctions\Mysql\RandFunction</argument>
              </call>
              <call method="addCustomDatetimeFunction">
                <argument>date_format</argument>
                <argument>AppBundle\Doctrine\CustomFunctions\SQLLite\DateFormatFunction</argument>
              </call>
            </service>
          </argument>
          <factory class="Doctrine\ORM\EntityManager" method="create"/>
          <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
        </service>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
      <call method="add">
        <argument type="service" id="misd_guzzle.param_converter"/>
        <argument>-100</argument>
        <argument>guzzle</argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.converter.request_body"/>
        <argument>0</argument>
        <argument>fos_rest.request_body</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service">
        <service class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
      </argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="captcha.type" class="Gregwar\CaptchaBundle\Type\CaptchaType">
      <tag name="form.type" alias="captcha"/>
      <argument type="service" id="session"/>
      <argument type="service" id="gregwar_captcha.generator"/>
      <argument type="service" id="translator"/>
      <argument type="collection">
        <argument key="length">5</argument>
        <argument key="width">130</argument>
        <argument key="height">50</argument>
        <argument key="font">/var/www/wolopay/vendor/gregwar/captcha-bundle/DependencyInjection/../Generator/Font/captcha.ttf</argument>
        <argument key="keep_value">false</argument>
        <argument key="charset">abcdefhjkmnprstuvwxyz23456789</argument>
        <argument key="as_file">false</argument>
        <argument key="as_url">false</argument>
        <argument key="reload">false</argument>
        <argument key="image_folder">captcha</argument>
        <argument key="web_path">/var/www/wolopay/app/../web</argument>
        <argument key="gc_freq">100</argument>
        <argument key="expiration">60</argument>
        <argument key="quality">30</argument>
        <argument key="invalid_message">Bad code value</argument>
        <argument key="bypass_code">null</argument>
        <argument key="whitelist_key">captcha_whitelist_key</argument>
        <argument key="humanity">0</argument>
        <argument key="distortion">true</argument>
        <argument key="max_front_lines">null</argument>
        <argument key="max_behind_lines">null</argument>
        <argument key="interpolation">true</argument>
        <argument key="text_color" type="collection"/>
        <argument key="background_color" type="collection"/>
        <argument key="background_images" type="collection"/>
        <argument key="disabled">false</argument>
        <argument key="ignore_all_effects">false</argument>
      </argument>
    </service>
    <service id="gregwar_captcha.generator" class="Gregwar\CaptchaBundle\Generator\CaptchaGenerator">
      <argument type="service" id="router"/>
      <argument type="service" id="gregwar_captcha.captcha_builder"/>
      <argument type="service" id="gregwar_captcha.phrase_builder"/>
      <argument type="service" id="gregwar_captcha.image_file_handler"/>
    </service>
    <service id="gregwar_captcha.image_file_handler" class="Gregwar\CaptchaBundle\Generator\ImageFileHandler">
      <argument>captcha</argument>
      <argument>/var/www/wolopay/app/../web</argument>
      <argument>100</argument>
      <argument>60</argument>
    </service>
    <service id="gregwar_captcha.captcha_builder" class="Gregwar\Captcha\CaptchaBuilder"/>
    <service id="gregwar_captcha.phrase_builder" class="Gregwar\Captcha\PhraseBuilder"/>
    <service id="braincrafted_bootstrap.form.type.collection" class="Braincrafted\Bundle\BootstrapBundle\Form\Type\BootstrapCollectionType">
      <tag name="form.type" alias="bootstrap_collection"/>
    </service>
    <service id="braincrafted_bootstrap.form.type.money" class="Braincrafted\Bundle\BootstrapBundle\Form\Type\MoneyType">
      <tag name="form.type" alias="money"/>
    </service>
    <service id="braincrafted_bootstrap.form.type.form_actions" class="Braincrafted\Bundle\BootstrapBundle\Form\Type\FormActionsType">
      <tag name="form.type" alias="form_actions"/>
    </service>
    <service id="braincrafted_bootstrap.form.type.form_control_static" class="Braincrafted\Bundle\BootstrapBundle\Form\Type\FormStaticControlType">
      <tag name="form.type" alias="bs_static"/>
    </service>
    <service id="braincrafted_bootstrap.form.extension.typesetter_extension" class="Braincrafted\Bundle\BootstrapBundle\Form\Extension\TypeSetterExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" alias="form"/>
    </service>
    <service id="braincrafted_bootstrap.form.extension.form_action_button" class="Braincrafted\Bundle\BootstrapBundle\Form\Extension\ButtonTypeExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\ButtonType" alias="button"/>
    </service>
    <service id="braincrafted_bootstrap.form.extension.static_control" class="Braincrafted\Bundle\BootstrapBundle\Form\Extension\StaticControlExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" alias="form"/>
    </service>
    <service id="braincrafted_bootstrap.form.extension.input_group_button" class="Braincrafted\Bundle\BootstrapBundle\Form\Extension\InputGroupButtonExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\TextType" alias="text"/>
    </service>
    <service id="braincrafted_bootstrap.twig.icon_extension" class="Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapIconExtension">
      <tag name="twig.extension"/>
      <argument>glyphicon</argument>
      <argument>span</argument>
    </service>
    <service id="braincrafted_bootstrap.twig.button_extension" class="Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapButtonExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="braincrafted_bootstrap.twig.icon_extension"/>
    </service>
    <service id="braincrafted_bootstrap.twig.label_extension" class="Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapLabelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="braincrafted_bootstrap.twig.badge_extension" class="Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapBadgeExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="braincrafted_bootstrap.twig.form_extension" class="Braincrafted\Bundle\BootstrapBundle\Twig\BootstrapFormExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="braincrafted_bootstrap.flash" class="Braincrafted\Bundle\BootstrapBundle\Session\FlashMessage">
      <argument type="service" id="session"/>
    </service>
    <service id="guzzle.client" class="Guzzle\Service\Client">
      <tag name="guzzle.client"/>
      <call method="addSubscriber">
        <argument type="service" id="misd_guzzle.log.array"/>
      </call>
      <call method="addSubscriber">
        <argument type="service" id="misd_guzzle.listener.request_listener"/>
      </call>
      <call method="addSubscriber">
        <argument type="service" id="misd_guzzle.listener.command_listener"/>
      </call>
    </service>
    <service id="misd_guzzle.log.array" class="Guzzle\Plugin\Log\LogPlugin" public="false">
      <tag name="misd_guzzle.plugin"/>
      <argument type="service" id="misd_guzzle.log.adapter.array"/>
    </service>
    <service id="misd_guzzle.listener.request_listener" class="Misd\GuzzleBundle\EventListener\RequestListener" public="false">
      <tag name="misd_guzzle.plugin"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="misd_guzzle.log.adapter.array" class="Guzzle\Log\ArrayLogAdapter" public="false"/>
    <service id="misd_guzzle.request.visitor.body" class="Misd\GuzzleBundle\Service\Command\LocationVisitor\Request\JMSSerializerBodyVisitor">
      <argument type="service" id="jms_serializer" on-invalid="ignore"/>
    </service>
    <service id="misd_guzzle.response.parser.fallback" class="Guzzle\Service\Command\OperationResponseParser" factory-method="getInstance" factory-class="Guzzle\Service\Command\OperationResponseParser"/>
    <service id="misd_guzzle.response.parser" class="Misd\GuzzleBundle\Service\Command\JMSSerializerResponseParser">
      <argument type="service" id="jms_serializer" on-invalid="ignore"/>
      <argument type="service" id="misd_guzzle.response.parser.fallback"/>
    </service>
    <service id="misd_guzzle.listener.command_listener" class="Misd\GuzzleBundle\EventListener\CommandListener">
      <tag name="misd_guzzle.plugin"/>
      <argument type="service" id="jms_serializer" on-invalid="null"/>
      <argument type="service" id="misd_guzzle.request.visitor.body"/>
      <argument type="service" id="misd_guzzle.response.parser"/>
    </service>
    <service id="misd_guzzle.param_converter" class="Misd\GuzzleBundle\Request\ParamConverter\GuzzleParamConverter3x">
      <tag name="request.param_converter" converter="guzzle" priority="-100"/>
    </service>
    <service id="guzzle.service_builder" class="Guzzle\Service\Builder\ServiceBuilder" factory-method="factory" factory-class="Guzzle\Service\Builder\ServiceBuilder">
      <argument>/var/www/wolopay/app/config/webservices.json</argument>
      <call method="addGlobalPlugin">
        <argument type="service" id="misd_guzzle.log.array"/>
      </call>
      <call method="addGlobalPlugin">
        <argument type="service" id="misd_guzzle.listener.request_listener"/>
      </call>
      <call method="addGlobalPlugin">
        <argument type="service" id="misd_guzzle.listener.command_listener"/>
      </call>
    </service>
    <service id="misd_guzzle.cache.doctrine.filesystem.adapter" class="Doctrine\Common\Cache\FilesystemCache">
      <argument>/var/www/wolopay/var/cache/test_dev/guzzle/</argument>
    </service>
    <service id="misd_guzzle.cache.doctrine.filesystem" class="Guzzle\Cache\DoctrineCacheAdapter">
      <argument type="service" id="misd_guzzle.cache.doctrine.filesystem.adapter"/>
    </service>
    <service id="misd_guzzle.cache.filesystem" class="Guzzle\Plugin\Cache\CachePlugin">
      <argument type="service" id="misd_guzzle.cache.doctrine.filesystem"/>
    </service>
    <service id="stof_doctrine_extensions.listener.translatable" class="Gedmo\Translatable\TranslatableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default" priority="-10"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="setDefaultLocale">
        <argument>en</argument>
      </call>
      <call method="setTranslatableLocale">
        <argument>en</argument>
      </call>
      <call method="setTranslationFallback">
        <argument>false</argument>
      </call>
      <call method="setPersistDefaultLocaleTranslation">
        <argument>false</argument>
      </call>
      <call method="setSkipOnLoad">
        <argument>false</argument>
      </call>
    </service>
    <service id="stof_doctrine_extensions.event_listener.locale" class="Stof\DoctrineExtensionsBundle\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="stof_doctrine_extensions.listener.translatable"/>
    </service>
    <service id="stof_doctrine_extensions.uploadable.manager" class="Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager">
      <argument type="service">
        <service class="Gedmo\Uploadable\UploadableListener" public="false">
          <argument type="service">
            <service class="Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter" public="false"/>
          </argument>
          <call method="setAnnotationReader">
            <argument type="service" id="annotation_reader"/>
          </call>
          <call method="setDefaultFileInfoClass">
            <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
          </call>
        </service>
      </argument>
      <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
    </service>
    <service id="fos_js_routing.extractor" class="FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor">
      <argument type="service" id="router"/>
      <argument type="collection"/>
      <argument>/var/www/wolopay/var/cache/test_dev</argument>
      <argument type="collection">
        <argument key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</argument>
        <argument key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</argument>
        <argument key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</argument>
        <argument key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</argument>
        <argument key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</argument>
        <argument key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</argument>
        <argument key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</argument>
        <argument key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</argument>
        <argument key="AppBundle">AppBundle\AppBundle</argument>
        <argument key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</argument>
        <argument key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</argument>
        <argument key="GregwarCaptchaBundle">Gregwar\CaptchaBundle\GregwarCaptchaBundle</argument>
        <argument key="BraincraftedBootstrapBundle">Braincrafted\Bundle\BootstrapBundle\BraincraftedBootstrapBundle</argument>
        <argument key="MisdGuzzleBundle">Misd\GuzzleBundle\MisdGuzzleBundle</argument>
        <argument key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</argument>
        <argument key="FOSJsRoutingBundle">FOS\JsRoutingBundle\FOSJsRoutingBundle</argument>
        <argument key="GfreeauGetJWTBundle">Gfreeau\Bundle\GetJWTBundle\GfreeauGetJWTBundle</argument>
        <argument key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</argument>
        <argument key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</argument>
        <argument key="LexikJWTAuthenticationBundle">Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle</argument>
        <argument key="EscapeWSSEAuthenticationBundle">Escape\WSSEAuthenticationBundle\EscapeWSSEAuthenticationBundle</argument>
        <argument key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</argument>
        <argument key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</argument>
        <argument key="LexikTranslationBundle">Lexik\Bundle\TranslationBundle\LexikTranslationBundle</argument>
        <argument key="JMSDiExtraBundle">JMS\DiExtraBundle\JMSDiExtraBundle</argument>
        <argument key="JMSAopBundle">JMS\AopBundle\JMSAopBundle</argument>
        <argument key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</argument>
        <argument key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</argument>
        <argument key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</argument>
        <argument key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</argument>
        <argument key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</argument>
        <argument key="SonataIntlBundle">Sonata\IntlBundle\SonataIntlBundle</argument>
        <argument key="SonataMediaBundle">Sonata\MediaBundle\SonataMediaBundle</argument>
        <argument key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</argument>
        <argument key="ApplicationSonataMediaBundle">Application\Sonata\MediaBundle\ApplicationSonataMediaBundle</argument>
        <argument key="IbrowsSonataTranslationBundle">Ibrows\SonataTranslationBundle\IbrowsSonataTranslationBundle</argument>
        <argument key="BeSimpleSoapBundle">BeSimple\SoapBundle\BeSimpleSoapBundle</argument>
        <argument key="BazingaFakerBundle">Bazinga\Bundle\FakerBundle\BazingaFakerBundle</argument>
        <argument key="KnpSnappyBundle">Knp\Bundle\SnappyBundle\KnpSnappyBundle</argument>
        <argument key="SymfonyConsoleFormBundle">Matthias\SymfonyConsoleForm\Bundle\SymfonyConsoleFormBundle</argument>
        <argument key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</argument>
        <argument key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</argument>
        <argument key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</argument>
        <argument key="RaulFraileLadybugBundle">RaulFraile\Bundle\LadybugBundle\RaulFraileLadybugBundle</argument>
        <argument key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</argument>
      </argument>
    </service>
    <service id="fos_js_routing.controller" class="FOS\JsRoutingBundle\Controller\Controller">
      <argument type="service" id="fos_js_routing.serializer"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument type="collection">
        <argument key="enabled">false</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="fos_js_routing.serializer" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer" public="false"/>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="json" type="service">
          <service class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false"/>
        </argument>
      </argument>
    </service>
    <service id="fos_rest.view.exception_wrapper_handler" class="FOS\RestBundle\View\ExceptionWrapperHandler"/>
    <service id="fos_rest.serializer.exception_wrapper_serialize_handler" class="FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="fos_rest.serializer.exception_wrapper_normalizer" class="FOS\RestBundle\Serializer\ExceptionWrapperNormalizer">
      <tag name="serializer.normalizer"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="fos_rest.routing.loader.controller" class="FOS\RestBundle\Routing\Loader\RestRouteLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="fos_rest.routing.loader.reader.controller"/>
      <argument>json</argument>
    </service>
    <service id="fos_rest.routing.loader.processor" class="FOS\RestBundle\Routing\Loader\RestRouteProcessor"/>
    <service id="fos_rest.routing.loader.yaml_collection" class="FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="xml">false</argument>
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>json</argument>
    </service>
    <service id="fos_rest.routing.loader.xml_collection" class="FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="xml">false</argument>
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>json</argument>
    </service>
    <service id="fos_rest.routing.loader.reader.controller" class="FOS\RestBundle\Routing\Loader\Reader\RestControllerReader">
      <argument type="service" id="fos_rest.routing.loader.reader.action"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="fos_rest.routing.loader.reader.action" class="FOS\RestBundle\Routing\Loader\Reader\RestActionReader">
      <argument type="service" id="annotation_reader"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="fos_rest.inflector.doctrine"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="xml">false</argument>
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Util\FormatNegotiator">
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.8615024800e4193600fd69885f7587200427156c3f94286d4b2ddc9c87897c17c762ebe2"/>
        <argument type="collection">
          <argument key="prefer_extension">2.0</argument>
          <argument key="priorities" type="collection">
            <argument>json</argument>
            <argument>xml</argument>
            <argument>yml</argument>
          </argument>
          <argument key="fallback_format">json</argument>
          <argument key="methods">null</argument>
          <argument key="stop">false</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27"/>
        <argument type="collection">
          <argument key="fallback_format">html</argument>
          <argument key="prefer_extension">2.0</argument>
          <argument key="methods">null</argument>
          <argument key="stop">false</argument>
          <argument key="priorities" type="collection"/>
        </argument>
      </call>
    </service>
    <service id="fos_rest.exception_format_negotiator" class="FOS\RestBundle\Util\FormatNegotiator">
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.8615024800e4193600fd69885f7587200427156c3f94286d4b2ddc9c87897c17c762ebe2"/>
        <argument type="collection">
          <argument key="prefer_extension">2.0</argument>
          <argument key="priorities" type="collection">
            <argument>json</argument>
            <argument>xml</argument>
            <argument>yml</argument>
          </argument>
          <argument key="fallback_format">json</argument>
          <argument key="methods">null</argument>
          <argument key="stop">false</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27"/>
        <argument type="collection">
          <argument key="fallback_format">html</argument>
          <argument key="prefer_extension">2.0</argument>
          <argument key="methods">null</argument>
          <argument key="stop">false</argument>
          <argument key="priorities" type="collection"/>
        </argument>
      </call>
    </service>
    <service id="fos_rest.inflector.doctrine" class="FOS\RestBundle\Util\Inflector\DoctrineInflector"/>
    <service id="fos_rest.violation_formatter" class="FOS\RestBundle\Util\ViolationFormatter"/>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="fos_rest.violation_formatter"/>
      <argument type="service" id="validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader">
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="fos_rest.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>fos_rest.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="fos_rest.controller.exception" class="FOS\RestBundle\Controller\ExceptionController">
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_rest.converter.request_body" class="FOS\RestBundle\Request\RequestBodyParamConverter">
      <tag name="request.param_converter" converter="fos_rest.request_body"/>
      <argument type="service" id="jms_serializer"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="validator" on-invalid="ignore"/>
      <argument>validationErrors</argument>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.normalizer.camel_keys_with_leading_underscore" class="FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
        <argument key="xml">fos_rest.decoder.xml</argument>
      </argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id="fos_rest.format_listener" class="FOS\RestBundle\EventListener\FormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="34"/>
      <argument type="service" id="fos_rest.format_negotiator"/>
    </service>
    <service id="fos_rest.param_fetcher_listener" class="FOS\RestBundle\EventListener\ParamFetcherListener">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController" priority="5"/>
      <argument type="service" id="service_container"/>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="FOS\RestBundle\Util\ExceptionWrapper" type="collection">
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.exception_wrapper_serialize_handler</argument>
              <argument>serializeToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.exception_wrapper_serialize_handler</argument>
              <argument>serializeToXml</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\Media" type="collection">
            <argument key="json" type="collection">
              <argument>application.sonata.listener.serialization_listener</argument>
              <argument>serializeImageToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>application.sonata.listener.serialization_listener</argument>
              <argument>serializeImageToXml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>application.sonata.listener.serialization_listener</argument>
              <argument>serializeImageToYml</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sO</argument>
      <argument>UTC</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service">
        <service class="Metadata\Driver\LazyLoadingDriver" public="false">
          <argument type="service" id="service_container"/>
          <argument>jms_serializer.metadata_driver</argument>
        </service>
      </argument>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service">
          <service class="Metadata\Cache\FileCache" public="false">
            <argument>/var/www/wolopay/var/cache/test_dev/jms_serializer</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="AppBundle\Service\OverrideThirdBundles\JsonSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="lexik_jwt_authentication.jwt_encoder" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoder">
      <argument type="service" id="lexik_jwt_authentication.openssl_key_loader"/>
    </service>
    <service id="lexik_jwt_authentication.jwt_manager" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager">
      <argument type="service" id="lexik_jwt_authentication.jwt_encoder"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>86400</argument>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
      <call method="setRequest">
        <argument type="service" id="request_stack" on-invalid="null" strict="false"/>
      </call>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_success" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_failure" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="lexik_jwt_authentication.openssl_key_loader" class="Lexik\Bundle\JWTAuthenticationBundle\Services\OpenSSLKeyLoader">
      <argument>/var/www/wolopay/app/config/jwt/test/private.pem</argument>
      <argument>/var/www/wolopay/app/config/jwt/test/public.pem</argument>
      <argument>1234</argument>
    </service>
    <service id="escape_wsse_authentication.provider" class="AppBundle\Security\Authentication\Provider\ProviderWSSEOverride">
      <argument type="service" id="security.user_checker.gettoken"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>300</argument>
      <argument>/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/</argument>
    </service>
    <service id="escape_wsse_authentication.listener" class="Escape\WSSEAuthenticationBundle\Security\Http\Firewall\Listener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="escape_wsse_authentication.entry_point" class="Escape\WSSEAuthenticationBundle\Security\Http\EntryPoint\EntryPoint">
      <argument type="service" id="logger"/>
      <argument>null</argument>
      <argument>UsernameToken</argument>
    </service>
    <service id="escape_wsse_authentication.encoder" class="Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder">
      <argument>sha1</argument>
      <argument>true</argument>
      <argument>1</argument>
    </service>
    <service id="escape_wsse_authentication.nonce_cache" class="Doctrine\Common\Cache\PhpFileCache">
      <argument>/var/www/wolopay/var/cache/test_dev/security/nonces</argument>
    </service>
    <service id="nelmio_api_doc.formatter.markdown_formatter" class="Nelmio\ApiDocBundle\Formatter\MarkdownFormatter"/>
    <service id="nelmio_api_doc.formatter.simple_formatter" class="Nelmio\ApiDocBundle\Formatter\SimpleFormatter"/>
    <service id="nelmio_api_doc.formatter.html_formatter" class="Nelmio\ApiDocBundle\Formatter\HtmlFormatter" lazy="true">
      <call method="setTemplatingEngine">
        <argument type="service" id="templating"/>
      </call>
      <call method="setMotdTemplate">
        <argument>NelmioApiDocBundle::Components/motd.html.twig</argument>
      </call>
      <call method="setApiName">
        <argument>Wolopay Api doc</argument>
      </call>
      <call method="setEnableSandbox">
        <argument>true</argument>
      </call>
      <call method="setEndpoint">
        <argument>null</argument>
      </call>
      <call method="setRequestFormatMethod">
        <argument>accept_header</argument>
      </call>
      <call method="setRequestFormats">
        <argument type="collection">
          <argument key="json">application/json</argument>
          <argument key="xml">application/xml</argument>
        </argument>
      </call>
      <call method="setDefaultRequestFormat">
        <argument>json</argument>
      </call>
      <call method="setAcceptType">
        <argument>null</argument>
      </call>
      <call method="setBodyFormats">
        <argument type="collection">
          <argument>form</argument>
          <argument>json</argument>
        </argument>
      </call>
      <call method="setDefaultBodyFormat">
        <argument>form</argument>
      </call>
      <call method="setAuthentication">
        <argument type="collection">
          <argument key="name">Authorization</argument>
          <argument key="delivery">http</argument>
          <argument key="type">basic</argument>
          <argument key="custom_endpoint">false</argument>
        </argument>
      </call>
      <call method="setDefaultSectionsOpened">
        <argument>true</argument>
      </call>
    </service>
    <service id="nelmio_api_doc.formatter.swagger_formatter" class="Nelmio\ApiDocBundle\Formatter\SwaggerFormatter">
      <argument>dot_notation</argument>
      <call method="setBasePath">
        <argument>/api</argument>
      </call>
      <call method="setApiVersion">
        <argument>0.1</argument>
      </call>
      <call method="setSwaggerVersion">
        <argument>1.2</argument>
      </call>
      <call method="setInfo">
        <argument type="collection">
          <argument key="title">Symfony2</argument>
          <argument key="description">My awesome Symfony2 app!</argument>
          <argument key="TermsOfServiceUrl">null</argument>
          <argument key="contact">null</argument>
          <argument key="license">null</argument>
          <argument key="licenseUrl">null</argument>
        </argument>
      </call>
      <call method="setAuthenticationConfig">
        <argument type="collection">
          <argument key="name">Authorization</argument>
          <argument key="delivery">http</argument>
          <argument key="type">basic</argument>
          <argument key="custom_endpoint">false</argument>
        </argument>
      </call>
    </service>
    <service id="nelmio_api_doc.doc_comment_extractor" class="Nelmio\ApiDocBundle\Util\DocCommentExtractor"/>
    <service id="nelmio_api_doc.extractor.api_doc_extractor" class="Nelmio\ApiDocBundle\Extractor\ApiDocExtractor" lazy="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="router"/>
      <argument type="service" id="annotation_reader"/>
      <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
          <argument type="service" id="kernel"/>
        </service>
      </argument>
      <argument type="collection">
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
            <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
          </service>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.json_serializable_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.collection_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.form_errors_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.form_type_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.validation_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.jms_metadata_parser"/>
      </call>
    </service>
    <service id="nelmio_api_doc.form.extension.description_form_type_extension" class="Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="nelmio_api_doc.twig.extension.extra_markdown" class="Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="nelmio_api_doc.parser.collection_parser" class="Nelmio\ApiDocBundle\Parser\CollectionParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
    </service>
    <service id="nelmio_api_doc.parser.form_errors_parser" class="Nelmio\ApiDocBundle\Parser\FormErrorsParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
    </service>
    <service id="nelmio_api_doc.parser.json_serializable_parser" class="Nelmio\ApiDocBundle\Parser\JsonSerializableParser">
      <tag name="nelmio_api_doc.extractor.parser" priority="1"/>
    </service>
    <service id="nelmio_api_doc.event_listener.request" class="Nelmio\ApiDocBundle\EventListener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="service" id="nelmio_api_doc.extractor.api_doc_extractor"/>
      <argument type="service" id="nelmio_api_doc.formatter.html_formatter"/>
      <argument>_doc</argument>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\EventListener\LastLoginListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user_checker.gettoken"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="fos_user.user_provider.username_email" class="FOS\UserBundle\Security\EmailUserProvider" public="false">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.listener.authentication" class="FOS\UserBundle\EventListener\AuthenticationListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.security.login_manager"/>
      <argument>main</argument>
    </service>
    <service id="fos_user.listener.flash" class="FOS\UserBundle\EventListener\FlashListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service">
        <service class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
          <argument type="service" id="fos_user.user_manager"/>
        </service>
      </argument>
    </service>
    <service id="fos_user.profile.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_profile_form</argument>
      <argument>fos_user_profile</argument>
      <argument type="collection">
        <argument>Profile</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>AppBundle\Entity\ClientUser</argument>
    </service>
    <service id="fos_user.registration.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_registration_form</argument>
      <argument>fos_user_registration</argument>
      <argument type="collection">
        <argument>Registration</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>AppBundle\Entity\ClientUser</argument>
    </service>
    <service id="fos_user.change_password.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_change_password_form</argument>
      <argument>fos_user_change_password</argument>
      <argument type="collection">
        <argument>ChangePassword</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
      <argument>AppBundle\Entity\ClientUser</argument>
    </service>
    <service id="fos_user.resetting.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_resetting_form</argument>
      <argument>fos_user_resetting</argument>
      <argument type="collection">
        <argument>ResetPassword</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
      <argument>AppBundle\Entity\ClientUser</argument>
    </service>
    <service id="fos_user.listener.resetting" class="FOS\UserBundle\EventListener\ResettingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="router"/>
      <argument>86400</argument>
    </service>
    <service id="lexik_translation.translator" class="Lexik\Bundle\TranslationBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.selector"/>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
        <argument key="lexik_translation.loader.database" type="collection">
          <argument>database</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/wolopay/var/cache/test_dev/translations</argument>
        <argument key="debug">true</argument>
      </argument>
      <argument type="service" id="session" on-invalid="ignore"/>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
        <argument>af</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
        <argument>lb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
        <argument>ca</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
        <argument>nn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
        <argument>az</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
        <argument>mn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
        <argument>ar</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
        <argument>fa</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
        <argument>pt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
        <argument>lt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
        <argument>id</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
        <argument>th</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
        <argument>gl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
        <argument>sv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
        <argument>tr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
        <argument>vi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
        <argument>hu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
        <argument>ro</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
        <argument>cy</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
        <argument>hr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
        <argument>et</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
        <argument>sq</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
        <argument>fi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
        <argument>he</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
        <argument>sr_Latn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
        <argument>da</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
        <argument>zh_TW</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
        <argument>el</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
        <argument>no</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
        <argument>hy</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
        <argument>sr_Cyrl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
        <argument>eu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
        <argument>lb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
        <argument>ca</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
        <argument>az</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
        <argument>mn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
        <argument>ar</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
        <argument>fa</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
        <argument>pt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
        <argument>lt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
        <argument>id</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
        <argument>lv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
        <argument>gl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
        <argument>sv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
        <argument>hu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
        <argument>ro</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
        <argument>hr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
        <argument>et</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
        <argument>fi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
        <argument>he</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
        <argument>sr_Latn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
        <argument>da</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
        <argument>el</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
        <argument>no</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
        <argument>hy</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
        <argument>sr_Cyrl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
        <argument>eu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.es.xlf</argument>
        <argument>es</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.tr.xlf</argument>
        <argument>tr</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ja.xlf</argument>
        <argument>ja</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Latn.xlf</argument>
        <argument>sr_Latn</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sv.xlf</argument>
        <argument>sv</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.da.xlf</argument>
        <argument>da</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ru.xlf</argument>
        <argument>ru</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.bg.xlf</argument>
        <argument>bg</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.en.xlf</argument>
        <argument>en</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_BR.xlf</argument>
        <argument>pt_BR</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.he.xlf</argument>
        <argument>he</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fr.xlf</argument>
        <argument>fr</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.cs.xlf</argument>
        <argument>cs</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ca.xlf</argument>
        <argument>ca</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ar.xlf</argument>
        <argument>ar</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hu.xlf</argument>
        <argument>hu</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ua.xlf</argument>
        <argument>ua</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sk.xlf</argument>
        <argument>sk</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.de.xlf</argument>
        <argument>de</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pl.xlf</argument>
        <argument>pl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.az.xlf</argument>
        <argument>az</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_PT.xlf</argument>
        <argument>pt_PT</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.th.xlf</argument>
        <argument>th</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.zh_CN.xlf</argument>
        <argument>zh_CN</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.nl.xlf</argument>
        <argument>nl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fa.xlf</argument>
        <argument>fa</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sl.xlf</argument>
        <argument>sl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hr.xlf</argument>
        <argument>hr</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lb.xlf</argument>
        <argument>lb</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.el.xlf</argument>
        <argument>el</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ro.xlf</argument>
        <argument>ro</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Cyrl.xlf</argument>
        <argument>sr_Cyrl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.it.xlf</argument>
        <argument>it</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.vi.xlf</argument>
        <argument>vi</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.id.xlf</argument>
        <argument>id</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.gl.xlf</argument>
        <argument>gl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lt.xlf</argument>
        <argument>lt</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.no.xlf</argument>
        <argument>no</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.fr.yml</argument>
        <argument>fr</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.it.yml</argument>
        <argument>it</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.ro.yml</argument>
        <argument>ro</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.bg.yml</argument>
        <argument>bg</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.en.yml</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.nl.yml</argument>
        <argument>nl</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.pl.yml</argument>
        <argument>pl</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.ro.yml</argument>
        <argument>ro</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.tr.yml</argument>
        <argument>tr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.uk.yml</argument>
        <argument>uk</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.pt_BR.yml</argument>
        <argument>pt_BR</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.ru.yml</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.ru.yml</argument>
        <argument>ru</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.pl.yml</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.bg.yml</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.fr.yml</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.nl.yml</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.de.yml</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.de.yml</argument>
        <argument>de</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.cs.yml</argument>
        <argument>cs</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.it.yml</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.en.yml</argument>
        <argument>en</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.uk.yml</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.es.yml</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.es.yml</argument>
        <argument>es</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.ar.yml</argument>
        <argument>ar</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.tr.yml</argument>
        <argument>tr</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.zh_CN.yml</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.zh_CN.yml</argument>
        <argument>zh_CN</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.pt_BR.yml</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/gregwar_captcha.ar.yml</argument>
        <argument>ar</argument>
        <argument>gregwar_captcha</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/translations/validators.cs.yml</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lb.yml</argument>
        <argument>lb</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sk.yml</argument>
        <argument>sk</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.th.yml</argument>
        <argument>th</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.he.yml</argument>
        <argument>he</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ro.yml</argument>
        <argument>ro</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.zh_CN.yml</argument>
        <argument>zh_CN</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sv.yml</argument>
        <argument>sv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sr_Latn.yml</argument>
        <argument>sr_Latn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.en.yml</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.el.yml</argument>
        <argument>el</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.vi.yml</argument>
        <argument>vi</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.id.yml</argument>
        <argument>id</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ar.yml</argument>
        <argument>ar</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.es.yml</argument>
        <argument>es</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ca.yml</argument>
        <argument>ca</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lv.yml</argument>
        <argument>lv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lv.yml</argument>
        <argument>lv</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ca.yml</argument>
        <argument>ca</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.eu.yml</argument>
        <argument>eu</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ru.yml</argument>
        <argument>ru</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.da.yml</argument>
        <argument>da</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt.yml</argument>
        <argument>pt</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fi.yml</argument>
        <argument>fi</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hu.yml</argument>
        <argument>hu</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.tr.yml</argument>
        <argument>tr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hr.yml</argument>
        <argument>hr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ru.yml</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pl.yml</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bg.yml</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sk.yml</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nb.yml</argument>
        <argument>nb</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fr.yml</argument>
        <argument>fr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt.yml</argument>
        <argument>pt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.id.yml</argument>
        <argument>id</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nl.yml</argument>
        <argument>nl</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.he.yml</argument>
        <argument>he</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.vi.yml</argument>
        <argument>vi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt_BR.yml</argument>
        <argument>pt_BR</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fr.yml</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lt.yml</argument>
        <argument>lt</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fi.yml</argument>
        <argument>fi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nl.yml</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.de.yml</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pl.yml</argument>
        <argument>pl</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ro.yml</argument>
        <argument>ro</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.uk.yml</argument>
        <argument>uk</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.el.yml</argument>
        <argument>el</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.it.yml</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.en.yml</argument>
        <argument>en</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.cs.yml</argument>
        <argument>cs</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sr_Latn.yml</argument>
        <argument>sr_Latn</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sv.yml</argument>
        <argument>sv</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.de.yml</argument>
        <argument>de</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fa.yml</argument>
        <argument>fa</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.uk.yml</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.es.yml</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.it.yml</argument>
        <argument>it</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.da.yml</argument>
        <argument>da</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ar.yml</argument>
        <argument>ar</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.zh_CN.yml</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hu.yml</argument>
        <argument>hu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fa.yml</argument>
        <argument>fa</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.eu.yml</argument>
        <argument>eu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt_BR.yml</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bg.yml</argument>
        <argument>bg</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ja.yml</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hr.yml</argument>
        <argument>hr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.et.yml</argument>
        <argument>et</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ja.yml</argument>
        <argument>ja</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.cs.yml</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nb.yml</argument>
        <argument>nb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sl.yml</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.th.yml</argument>
        <argument>th</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sl.yml</argument>
        <argument>sl</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.tr.yml</argument>
        <argument>tr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lt.yml</argument>
        <argument>lt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.lt.yml</argument>
        <argument>lt</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.de.yml</argument>
        <argument>de</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.sk.yml</argument>
        <argument>sk</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.es.yml</argument>
        <argument>es</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.en.yml</argument>
        <argument>en</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.ru.yml</argument>
        <argument>ru</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.ro.yml</argument>
        <argument>ro</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.nl.yml</argument>
        <argument>nl</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.fr.yml</argument>
        <argument>fr</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/translations/LexikTranslationBundle.it.yml</argument>
        <argument>it</argument>
        <argument>LexikTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.zh_CN.xliff</argument>
        <argument>zh_CN</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ro.xliff</argument>
        <argument>ro</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.uk.xliff</argument>
        <argument>uk</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ca.xliff</argument>
        <argument>ca</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hu.xliff</argument>
        <argument>hu</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hr.xliff</argument>
        <argument>hr</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lb.xliff</argument>
        <argument>lb</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ar.xliff</argument>
        <argument>ar</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fi.xliff</argument>
        <argument>fi</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt.xliff</argument>
        <argument>pt</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fa.xliff</argument>
        <argument>fa</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ja.xliff</argument>
        <argument>ja</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.eu.xliff</argument>
        <argument>eu</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fa.xliff</argument>
        <argument>fa</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lb.xliff</argument>
        <argument>lb</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.uk.xliff</argument>
        <argument>uk</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ca.xliff</argument>
        <argument>ca</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt.xliff</argument>
        <argument>pt</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.eu.xliff</argument>
        <argument>eu</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hr.xliff</argument>
        <argument>hr</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ja.xliff</argument>
        <argument>ja</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ro.xliff</argument>
        <argument>ro</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.zh_CN.xliff</argument>
        <argument>zh_CN</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hu.xliff</argument>
        <argument>hu</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ar.xliff</argument>
        <argument>ar</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.hu.xliff</argument>
        <argument>hu</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/SonataAdminBundle.en.yml</argument>
        <argument>en</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/SonataAdminBundle.de.yml</argument>
        <argument>de</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/IbrowsSonataTranslationBundle.en.yml</argument>
        <argument>en</argument>
        <argument>IbrowsSonataTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/IbrowsSonataTranslationBundle.es.yml</argument>
        <argument>es</argument>
        <argument>IbrowsSonataTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/SonataAdminBundle.es.yml</argument>
        <argument>es</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/translations/IbrowsSonataTranslationBundle.de.yml</argument>
        <argument>de</argument>
        <argument>IbrowsSonataTranslationBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/user_notifications.en.yml</argument>
        <argument>en</argument>
        <argument>user_notifications</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/shop.es.yml</argument>
        <argument>es</argument>
        <argument>shop</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/messages.es.yml</argument>
        <argument>es</argument>
        <argument>messages</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/sms.es.yml</argument>
        <argument>es</argument>
        <argument>sms</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/admin.en.yml</argument>
        <argument>en</argument>
        <argument>admin</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/default.en.yml</argument>
        <argument>en</argument>
        <argument>default</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/shop.en.yml</argument>
        <argument>en</argument>
        <argument>shop</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/admin.es.yml</argument>
        <argument>es</argument>
        <argument>admin</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/messages.en.yml</argument>
        <argument>en</argument>
        <argument>messages</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/default.es.yml</argument>
        <argument>es</argument>
        <argument>default</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/wolopay/app/Resources/translations/sms.en.yml</argument>
        <argument>en</argument>
        <argument>sms</argument>
      </call>
      <call method="addDatabaseResources"/>
    </service>
    <service id="lexik_translation.loader.database" class="Lexik\Bundle\TranslationBundle\Translation\Loader\DatabaseLoader">
      <tag name="translation.loader" alias="database"/>
      <argument type="service" id="lexik_translation.translation_storage"/>
    </service>
    <service id="lexik_translation.trans_unit.manager" class="Lexik\Bundle\TranslationBundle\Manager\TransUnitManager">
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.file.manager"/>
      <argument>/var/www/wolopay/app</argument>
    </service>
    <service id="lexik_translation.file.manager" class="Lexik\Bundle\TranslationBundle\Manager\FileManager">
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument>/var/www/wolopay/app</argument>
    </service>
    <service id="lexik_translation.locale.manager" class="Lexik\Bundle\TranslationBundle\Manager\LocaleManager">
      <argument type="collection">
        <argument>cz</argument>
        <argument>de</argument>
        <argument>en</argument>
        <argument>es</argument>
        <argument>fr</argument>
        <argument>it</argument>
        <argument>ko</argument>
        <argument>pl</argument>
        <argument>pt</argument>
      </argument>
    </service>
    <service id="lexik_translation.importer.file" class="Lexik\Bundle\TranslationBundle\Translation\Importer\FileImporter">
      <argument type="collection">
        <argument key="php" type="service" id="translation.loader.php"/>
        <argument key="yml" type="service" id="translation.loader.yml"/>
        <argument key="xlf" type="service" id="translation.loader.xliff"/>
        <argument key="xliff" type="service" id="translation.loader.xliff"/>
        <argument key="po" type="service" id="translation.loader.po"/>
        <argument key="mo" type="service" id="translation.loader.mo"/>
        <argument key="ts" type="service" id="translation.loader.qt"/>
        <argument key="csv" type="service" id="translation.loader.csv"/>
        <argument key="res" type="service" id="translation.loader.res"/>
        <argument key="dat" type="service" id="translation.loader.dat"/>
        <argument key="ini" type="service" id="translation.loader.ini"/>
        <argument key="json" type="service" id="translation.loader.json"/>
        <argument key="database" type="service" id="lexik_translation.loader.database"/>
      </argument>
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.trans_unit.manager"/>
      <argument type="service" id="lexik_translation.file.manager"/>
      <call method="setCaseInsensitiveInsert">
        <argument>false</argument>
      </call>
    </service>
    <service id="lexik_translation.exporter_collector" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\ExporterCollector">
      <call method="addExporter">
        <argument>lexik_translation.exporter.xliff</argument>
        <argument type="service" id="lexik_translation.exporter.xliff"/>
      </call>
      <call method="addExporter">
        <argument>lexik_translation.exporter.json</argument>
        <argument type="service" id="lexik_translation.exporter.json"/>
      </call>
      <call method="addExporter">
        <argument>lexik_translation.exporter.yml</argument>
        <argument type="service" id="lexik_translation.exporter.yml"/>
      </call>
      <call method="addExporter">
        <argument>lexik_translation.exporter.php</argument>
        <argument type="service" id="lexik_translation.exporter.php"/>
      </call>
    </service>
    <service id="lexik_translation.exporter.xliff" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\XliffExporter">
      <tag name="lexik_translation.exporter" alias="xlf"/>
    </service>
    <service id="lexik_translation.exporter.json" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\JsonExporter">
      <tag name="lexik_translation.exporter" alias="json"/>
    </service>
    <service id="lexik_translation.exporter.yml" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\YamlExporter">
      <tag name="lexik_translation.exporter" alias="yml"/>
      <argument>false</argument>
    </service>
    <service id="lexik_translation.exporter.php" class="Lexik\Bundle\TranslationBundle\Translation\Exporter\PhpExporter">
      <tag name="lexik_translation.exporter" alias="php"/>
    </service>
    <service id="lexik_translation.data_grid.formatter" class="Lexik\Bundle\TranslationBundle\Util\DataGrid\DataGridFormatter">
      <argument type="service" id="lexik_translation.locale.manager"/>
      <argument>orm</argument>
    </service>
    <service id="lexik_translation.data_grid.request_handler" class="Lexik\Bundle\TranslationBundle\Util\DataGrid\DataGridRequestHandler">
      <argument type="service" id="lexik_translation.trans_unit.manager"/>
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.locale.manager"/>
      <call method="setCreateMissing">
        <argument>false</argument>
      </call>
      <call method="setGridListNRows">
        <argument>100</argument>
      </call>
    </service>
    <service id="lexik_translation.overview.stats_aggregator" class="Lexik\Bundle\TranslationBundle\Util\Overview\StatsAggregator">
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.locale.manager"/>
    </service>
    <service id="lexik_translation.form.handler.trans_unit" class="Lexik\Bundle\TranslationBundle\Form\Handler\TransUnitFormHandler">
      <argument type="service" id="lexik_translation.trans_unit.manager"/>
      <argument type="service" id="lexik_translation.file.manager"/>
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument type="service" id="lexik_translation.locale.manager"/>
      <argument>/var/www/wolopay/app</argument>
    </service>
    <service id="lexik_translation.listener.get_database_resources" class="Lexik\Bundle\TranslationBundle\EventDispatcher\GetDatabaseResourcesListener">
      <tag name="kernel.event_listener" event="lexik_translation.event.get_database_resources" method="onGetDatabaseResources"/>
      <argument type="service" id="lexik_translation.translation_storage"/>
      <argument>orm</argument>
    </service>
    <service id="lexik_translation.translation_storage" class="lexik_translation.orm.translation_storage.class">
      <argument type="service" id="doctrine"/>
      <argument>default</argument>
      <argument type="collection">
        <argument key="trans_unit">%lexik_translation.orm.trans_unit.class%</argument>
        <argument key="translation">%lexik_translation.orm.translation.class%</argument>
        <argument key="file">%lexik_translation.orm.file.class%</argument>
      </argument>
    </service>
    <service id="jms_di_extra.metadata.metadata_factory" class="Metadata\MetadataFactory">
      <argument type="service">
        <service class="Metadata\Driver\LazyLoadingDriver" public="false">
          <argument type="service" id="service_container"/>
          <argument>jms_di_extra.metadata_driver</argument>
        </service>
      </argument>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service">
          <service class="Metadata\Cache\FileCache" public="false">
            <argument>/var/www/wolopay/var/cache/test_dev/jms_diextra/metadata</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="jms_di_extra.metadata.converter" class="JMS\DiExtraBundle\Metadata\MetadataConverter"/>
    <service id="jms_di_extra.controller_resolver" class="JMS\DiExtraBundle\HttpKernel\ControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="jms_aop.pointcut_container" class="JMS\AopBundle\Aop\PointcutContainer"/>
    <service id="jms_aop.interceptor_loader" class="JMS\AopBundle\Aop\InterceptorLoader">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator"/>
      <argument type="collection">
        <argument key="success" type="collection">
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="warning" type="collection">
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_range_picker" class="Sonata\CoreBundle\Form\Type\DateRangePickerType">
      <tag name="form.type" alias="sonata_type_date_range_picker"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_range_picker" class="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">
      <tag name="form.type" alias="sonata_type_datetime_range_picker"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.color_selector" class="Sonata\CoreBundle\Form\Type\ColorSelectorType">
      <tag name="form.type" alias="sonata_type_color_selector"/>
    </service>
    <service id="sonata.core.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.core.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.core.twig.extension.wrapping" class="Sonata\CoreBundle\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.core.twig.extension.text" class="Twig_Extensions_Extension_Text">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain">
      <call method="addAdapter">
        <argument type="service">
          <service class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
            <argument type="service" id="doctrine" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.core.slugify.cocur" class="Cocur\Slugify\Slugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.core.slugify.native" class="Sonata\CoreBundle\Component\NativeSlugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.template</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="SonataBlockBundle:Block:block_container.html.twig">SonataBlockBundle default template</argument>
      </argument>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="false">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection">
          <argument>cms</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection">
          <argument>cms</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.media</argument>
        <argument type="collection">
          <argument>cms</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.feature_media</argument>
        <argument>sonata.media.block.feature_media</argument>
        <argument type="collection">
          <argument>cms</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument type="collection">
          <argument>cms</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.search_result">sonata.cache.noop</argument>
          <argument key="sonata.media.block.media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery">sonata.cache.noop</argument>
          <argument key="sonata.media.block.feature_media">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.search_result">sonata.cache.noop</argument>
          <argument key="sonata.media.block.media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery">sonata.cache.noop</argument>
          <argument key="sonata.media.block.feature_media">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.block.context_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.user.block.account</argument>
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.media.block.feature_media</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">SonataBlockBundle:Block:block_base.html.twig</argument>
        <argument key="block_container">SonataBlockBundle:Block:block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer"/>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory">
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
            <tag name="knp_menu.factory_extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher">
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider">
      <argument type="service" id="service_container"/>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="list">knp_menu.renderer.list</argument>
        <argument key="twig">knp_menu.renderer.twig</argument>
      </argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.listener.voters" class="Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>BraincraftedBootstrapBundle:Menu:bootstrap.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool">
      <argument type="service" id="service_container"/>
      <argument>WoloPay</argument>
      <argument>/img/logo_min.png</argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonataadmin/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonataadmin/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/App.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonataadmin/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/AdminLTE/css/font-awesome.min.css</argument>
          <argument>bundles/sonataadmin/vendor/AdminLTE/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/AdminLTE/css/AdminLTE.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonataadmin/vendor/select2/select2.css</argument>
          <argument>bundles/sonataadmin/vendor/select2/select2-bootstrap.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
        </argument>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection">
          <argument>nvia_shop_app.admin.app</argument>
          <argument>nvia_shop_app.admin.app_shop</argument>
          <argument>nvia_shop_app.admin.article</argument>
          <argument>nvia_shop_app.admin.item</argument>
          <argument>nvia_shop_app.admin.app_shop_has_articles</argument>
          <argument>nvia_shop_app.admin.article_has_pmpc</argument>
          <argument>nvia_shop_app.admin.shop_css</argument>
          <argument>nvia_shop_app.admin.offer_programmer</argument>
          <argument>nvia_app_shop.admin.transaction</argument>
          <argument>nvia_app_shop.admin.payment</argument>
          <argument>nvia_app_shop.admin.payment_service_category</argument>
          <argument>nvia_app_shop.admin.purchase_notification</argument>
          <argument>nvia_app_shop.admin.promo</argument>
          <argument>nvia_app_shop.admin.promo_code</argument>
          <argument>nvia_api.admin.app_api_credentials</argument>
          <argument>nvia_common.admin.client</argument>
          <argument>nvia_common.admin.client_user</argument>
          <argument>nvia_common.admin.client_user_notification</argument>
          <argument>nvia_pay_method_config.admin.pay_method</argument>
          <argument>nvia_pay_method_config.admin.provider</argument>
          <argument>nvia_pay_method_config.admin.pay_method_has_provider</argument>
          <argument>nvia_pay_method_config.admin.pay_method_provider_has_country</argument>
          <argument>nvia_pay_method_config.admin.sms</argument>
          <argument>nvia_pay_method_config.admin.sms_alias</argument>
          <argument>nvia_pay_method_config.admin.sms_operator</argument>
          <argument>nvia_pay_method_config.admin.voice</argument>
          <argument>nvia_app_shop.admin.purchase</argument>
          <argument>app.admin.client_user_has_app</argument>
          <argument>app.admin.offer</argument>
          <argument>app.admin.app_has_pay_method_provider_country</argument>
          <argument>app.admin.subscription</argument>
          <argument>app.admin.single_payment</argument>
          <argument>app.admin.single_free_payment</argument>
          <argument>app.admin.single_custom_payment</argument>
          <argument>app.admin.affiliate</argument>
          <argument>app.admin.fin_invoice</argument>
          <argument>app.admin.fin_movement</argument>
          <argument>app.admin.client_document</argument>
          <argument>sonata.media.admin.media</argument>
          <argument>sonata.media.admin.gallery</argument>
          <argument>sonata.media.admin.gallery_has_media</argument>
          <argument>ibrows_sonata_translation.admin.orm</argument>
        </argument>
      </call>
      <call method="setAdminGroups">
        <argument type="collection">
          <argument key="sonata.admin.group.common" type="collection">
            <argument key="label">Clients</argument>
            <argument key="label_catalogue">CommonBundle</argument>
            <argument key="icon">&lt;i class="fa fa-group"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>nvia_common.admin.client</argument>
              <argument>nvia_common.admin.client_user</argument>
              <argument>nvia_common.admin.client_user_notification</argument>
              <argument>app.admin.affiliate</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.app" type="collection">
            <argument key="label">App</argument>
            <argument key="label_catalogue">AppShopBundle</argument>
            <argument key="icon">&lt;i class="fa fa-rocket"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>nvia_shop_app.admin.app</argument>
              <argument>nvia_shop_app.admin.app_shop</argument>
              <argument>nvia_app_shop.admin.promo</argument>
              <argument>nvia_shop_app.admin.offer_programmer</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.paymethod_config" type="collection">
            <argument key="label">PayMethods Config</argument>
            <argument key="label_catalogue">PayMethodConfigBundle</argument>
            <argument key="icon">&lt;i class="fa fa-credit-card"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>nvia_pay_method_config.admin.provider</argument>
              <argument>nvia_pay_method_config.admin.pay_method</argument>
              <argument>nvia_pay_method_config.admin.pay_method_has_provider</argument>
              <argument>nvia_pay_method_config.admin.pay_method_provider_has_country</argument>
              <argument>nvia_pay_method_config.admin.sms</argument>
              <argument>nvia_pay_method_config.admin.sms_alias</argument>
              <argument>nvia_pay_method_config.admin.sms_operator</argument>
              <argument>nvia_pay_method_config.admin.voice</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.payments" type="collection">
            <argument key="label">Payments</argument>
            <argument key="label_catalogue">Payments</argument>
            <argument key="icon">&lt;i class="fa fa-shopping-cart"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>nvia_app_shop.admin.transaction</argument>
              <argument>nvia_app_shop.admin.payment</argument>
              <argument>nvia_app_shop.admin.purchase</argument>
              <argument>nvia_app_shop.admin.purchase_notification</argument>
              <argument>app.admin.subscription</argument>
              <argument>app.admin.single_payment</argument>
              <argument>app.admin.single_free_payment</argument>
              <argument>app.admin.single_custom_payment</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="group.billing" type="collection">
            <argument key="label">Billing</argument>
            <argument key="label_catalogue">Billing</argument>
            <argument key="icon">&lt;i class="fa fa-money"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>app.admin.fin_invoice</argument>
              <argument>app.admin.fin_movement</argument>
              <argument>app.admin.client_document</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="group.translation" type="collection">
            <argument key="label">Translation</argument>
            <argument key="icon">&lt;i class="fa fa-globe"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument>ibrows_sonata_translation.admin.orm</argument>
            </argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
            <argument key="label_catalogue">SonataAdminBundle</argument>
          </argument>
        </argument>
      </call>
      <call method="setAdminClasses">
        <argument type="collection">
          <argument key="AppBundle\Entity\App" type="collection">
            <argument>nvia_shop_app.admin.app</argument>
          </argument>
          <argument key="AppBundle\Entity\AppShop" type="collection">
            <argument>nvia_shop_app.admin.app_shop</argument>
          </argument>
          <argument key="AppBundle\Entity\Article" type="collection">
            <argument>nvia_shop_app.admin.article</argument>
          </argument>
          <argument key="AppBundle\Entity\Item" type="collection">
            <argument>nvia_shop_app.admin.item</argument>
          </argument>
          <argument key="AppBundle\Entity\AppShopHasArticle" type="collection">
            <argument>nvia_shop_app.admin.app_shop_has_articles</argument>
          </argument>
          <argument key="AppBundle\Entity\ArticleHasPMPC" type="collection">
            <argument>nvia_shop_app.admin.article_has_pmpc</argument>
          </argument>
          <argument key="AppBundle\Entity\ShopCss" type="collection">
            <argument>nvia_shop_app.admin.shop_css</argument>
          </argument>
          <argument key="AppBundle\Entity\OfferProgrammer" type="collection">
            <argument>nvia_shop_app.admin.offer_programmer</argument>
          </argument>
          <argument key="AppBundle\Entity\Transaction" type="collection">
            <argument>nvia_app_shop.admin.transaction</argument>
          </argument>
          <argument key="AppBundle\Entity\Payment" type="collection">
            <argument>nvia_app_shop.admin.payment</argument>
          </argument>
          <argument key="AppBundle\Entity\PaymentServiceCategory" type="collection">
            <argument>nvia_app_shop.admin.payment_service_category</argument>
          </argument>
          <argument key="AppBundle\Entity\PurchaseNotification" type="collection">
            <argument>nvia_app_shop.admin.purchase_notification</argument>
          </argument>
          <argument key="AppBundle\Entity\Promo" type="collection">
            <argument>nvia_app_shop.admin.promo</argument>
          </argument>
          <argument key="AppBundle\Entity\PromoCode" type="collection">
            <argument>nvia_app_shop.admin.promo_code</argument>
          </argument>
          <argument key="AppBundle\Entity\AppApiCredentials" type="collection">
            <argument>nvia_api.admin.app_api_credentials</argument>
          </argument>
          <argument key="AppBundle\Entity\Client" type="collection">
            <argument>nvia_common.admin.client</argument>
          </argument>
          <argument key="AppBundle\Entity\ClientUser" type="collection">
            <argument>nvia_common.admin.client_user</argument>
          </argument>
          <argument key="AppBundle\Entity\ClientUserNotification" type="collection">
            <argument>nvia_common.admin.client_user_notification</argument>
          </argument>
          <argument key="AppBundle\Entity\PayMethod" type="collection">
            <argument>nvia_pay_method_config.admin.pay_method</argument>
          </argument>
          <argument key="AppBundle\Entity\Provider" type="collection">
            <argument>nvia_pay_method_config.admin.provider</argument>
          </argument>
          <argument key="AppBundle\Entity\PayMethodHasProvider" type="collection">
            <argument>nvia_pay_method_config.admin.pay_method_has_provider</argument>
          </argument>
          <argument key="AppBundle\Entity\PayMethodProviderHasCountry" type="collection">
            <argument>nvia_pay_method_config.admin.pay_method_provider_has_country</argument>
          </argument>
          <argument key="AppBundle\Entity\SMS" type="collection">
            <argument>nvia_pay_method_config.admin.sms</argument>
          </argument>
          <argument key="AppBundle\Entity\SMSAlias" type="collection">
            <argument>nvia_pay_method_config.admin.sms_alias</argument>
          </argument>
          <argument key="AppBundle\Entity\SMSOperator" type="collection">
            <argument>nvia_pay_method_config.admin.sms_operator</argument>
          </argument>
          <argument key="AppBundle\Entity\Voice" type="collection">
            <argument>nvia_pay_method_config.admin.voice</argument>
          </argument>
          <argument key="AppBundle\Entity\Purchase" type="collection">
            <argument>nvia_app_shop.admin.purchase</argument>
          </argument>
          <argument key="AppBundle\Entity\ClientUserHasApp" type="collection">
            <argument>app.admin.client_user_has_app</argument>
          </argument>
          <argument key="AppBundle\Entity\Offer" type="collection">
            <argument>app.admin.offer</argument>
          </argument>
          <argument key="AppBundle\Entity\AppHasPayMethodProviderCountry" type="collection">
            <argument>app.admin.app_has_pay_method_provider_country</argument>
          </argument>
          <argument key="AppBundle\Entity\Subscription" type="collection">
            <argument>app.admin.subscription</argument>
          </argument>
          <argument key="AppBundle\Entity\SinglePayment" type="collection">
            <argument>app.admin.single_payment</argument>
          </argument>
          <argument key="AppBundle\Entity\SingleFreePayment" type="collection">
            <argument>app.admin.single_free_payment</argument>
          </argument>
          <argument key="AppBundle\Entity\SingleCustomPayment" type="collection">
            <argument>app.admin.single_custom_payment</argument>
          </argument>
          <argument key="AppBundle\Entity\Affiliate" type="collection">
            <argument>app.admin.affiliate</argument>
          </argument>
          <argument key="AppBundle\Entity\FinInvoice" type="collection">
            <argument>app.admin.fin_invoice</argument>
          </argument>
          <argument key="AppBundle\Entity\FinMovement" type="collection">
            <argument>app.admin.fin_movement</argument>
          </argument>
          <argument key="AppBundle\Entity\ClientDocument" type="collection">
            <argument>app.admin.client_document</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\Media" type="collection">
            <argument>sonata.media.admin.media</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\Gallery" type="collection">
            <argument>sonata.media.admin.gallery</argument>
          </argument>
          <argument key="Application\Sonata\MediaBundle\Entity\GalleryHasMedia" type="collection">
            <argument>sonata.media.admin.gallery_has_media</argument>
          </argument>
          <argument key="Lexik\Bundle\TranslationBundle\Entity\TransUnit" type="collection">
            <argument>ibrows_sonata_translation.admin.orm</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument>nvia_shop_app.admin.app</argument>
        <argument>nvia_shop_app.admin.app_shop</argument>
        <argument>nvia_shop_app.admin.article</argument>
        <argument>nvia_shop_app.admin.item</argument>
        <argument>nvia_shop_app.admin.app_shop_has_articles</argument>
        <argument>nvia_shop_app.admin.article_has_pmpc</argument>
        <argument>nvia_shop_app.admin.shop_css</argument>
        <argument>nvia_shop_app.admin.offer_programmer</argument>
        <argument>nvia_app_shop.admin.transaction</argument>
        <argument>nvia_app_shop.admin.payment</argument>
        <argument>nvia_app_shop.admin.payment_service_category</argument>
        <argument>nvia_app_shop.admin.purchase_notification</argument>
        <argument>nvia_app_shop.admin.promo</argument>
        <argument>nvia_app_shop.admin.promo_code</argument>
        <argument>nvia_api.admin.app_api_credentials</argument>
        <argument>nvia_common.admin.client</argument>
        <argument>nvia_common.admin.client_user</argument>
        <argument>nvia_common.admin.client_user_notification</argument>
        <argument>nvia_pay_method_config.admin.pay_method</argument>
        <argument>nvia_pay_method_config.admin.provider</argument>
        <argument>nvia_pay_method_config.admin.pay_method_has_provider</argument>
        <argument>nvia_pay_method_config.admin.pay_method_provider_has_country</argument>
        <argument>nvia_pay_method_config.admin.sms</argument>
        <argument>nvia_pay_method_config.admin.sms_alias</argument>
        <argument>nvia_pay_method_config.admin.sms_operator</argument>
        <argument>nvia_pay_method_config.admin.voice</argument>
        <argument>nvia_app_shop.admin.purchase</argument>
        <argument>app.admin.client_user_has_app</argument>
        <argument>app.admin.offer</argument>
        <argument>app.admin.app_has_pay_method_provider_country</argument>
        <argument>app.admin.subscription</argument>
        <argument>app.admin.single_payment</argument>
        <argument>app.admin.single_free_payment</argument>
        <argument>app.admin.single_custom_payment</argument>
        <argument>app.admin.affiliate</argument>
        <argument>app.admin.fin_invoice</argument>
        <argument>app.admin.fin_movement</argument>
        <argument>app.admin.client_document</argument>
        <argument>sonata.media.admin.media</argument>
        <argument>sonata.media.admin.gallery</argument>
        <argument>sonata.media.admin.gallery_has_media</argument>
        <argument>ibrows_sonata_translation.admin.orm</argument>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="doctrine_orm_boolean">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="doctrine_orm_callback">sonata.admin.orm.filter.type.callback</argument>
        <argument key="doctrine_orm_choice">sonata.admin.orm.filter.type.choice</argument>
        <argument key="doctrine_orm_model">sonata.admin.orm.filter.type.model</argument>
        <argument key="doctrine_orm_string">sonata.admin.orm.filter.type.string</argument>
        <argument key="doctrine_orm_number">sonata.admin.orm.filter.type.number</argument>
        <argument key="doctrine_orm_date">sonata.admin.orm.filter.type.date</argument>
        <argument key="doctrine_orm_date_range">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="doctrine_orm_datetime">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="doctrine_orm_time">sonata.admin.orm.filter.type.time</argument>
        <argument key="doctrine_orm_datetime_range">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="doctrine_orm_class">sonata.admin.orm.filter.type.class</argument>
      </argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy"/>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter"/>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType">
      <tag name="form.type" alias="sonata_type_model"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelTypeList">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.field.mopa" class="Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension">
      <tag name="form.type_extension" alias="form"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\AdminBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator">
      <argument type="service" id="router"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache">
      <argument>/var/www/wolopay/var/cache/test_dev/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:list_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</argument>
        <argument key="date">SonataIntlBundle:CRUD:list_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:list_time.html.twig</argument>
        <argument key="datetime">SonataIntlBundle:CRUD:list_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="smallint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="bigint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="integer">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="decimal">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="currency">SonataIntlBundle:CRUD:list_currency.html.twig</argument>
        <argument key="percent">SonataIntlBundle:CRUD:list_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:list_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:list_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:show_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</argument>
        <argument key="date">SonataIntlBundle:CRUD:show_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:show_time.html.twig</argument>
        <argument key="datetime">SonataIntlBundle:CRUD:show_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="smallint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="bigint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="integer">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="decimal">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="currency">SonataIntlBundle:CRUD:show_currency.html.twig</argument>
        <argument key="percent">SonataIntlBundle:CRUD:show_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:show_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:show_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" shared="false" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator"/>
    <service id="sonata.intl.locale_detector.request_stack" class="Sonata\IntlBundle\Locale\RequestStackDetector">
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
    </service>
    <service id="sonata.intl.templating.helper.locale" class="Sonata\IntlBundle\Templating\Helper\LocaleHelper">
      <tag name="templating.helper" alias="locale"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
    </service>
    <service id="sonata.intl.templating.helper.number" class="Sonata\IntlBundle\Templating\Helper\NumberHelper">
      <tag name="templating.helper" alias="number"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
    </service>
    <service id="sonata.intl.templating.helper.datetime" class="Sonata\IntlBundle\Templating\Helper\DateTimeHelper">
      <tag name="templating.helper" alias="datetime"/>
      <argument type="service" id="sonata.intl.timezone_detector.chain"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
    </service>
    <service id="sonata.intl.timezone_detector.chain" class="Sonata\IntlBundle\Timezone\ChainTimezoneDetector">
      <argument>UTC</argument>
      <call method="addDetector">
        <argument type="service" id="sonata.intl.timezone_detector.locale"/>
      </call>
    </service>
    <service id="sonata.intl.timezone_detector.locale" class="Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector">
      <tag name="sonata_intl.timezone_detector" alias="locale"/>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.media.pool" class="Sonata\MediaBundle\Provider\Pool">
      <argument>default</argument>
      <call method="addContext">
        <argument>default</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
        </argument>
        <argument type="collection">
          <argument key="default_shop" type="collection">
            <argument key="width">123</argument>
            <argument key="quality">99</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>image_normal</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="image_normal_shop" type="collection">
            <argument key="width">123</argument>
            <argument key="quality">90</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>app_tab</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="app_tab_shop" type="collection">
            <argument key="width">100</argument>
            <argument key="height">50</argument>
            <argument key="quality">90</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>client</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="client_pdf" type="collection">
            <argument key="height">50</argument>
            <argument key="width">false</argument>
            <argument key="quality">80</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>app</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="app_done" type="collection">
            <argument key="height">26</argument>
            <argument key="quality">90</argument>
            <argument key="width">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="app_email" type="collection">
            <argument key="height">50</argument>
            <argument key="quality">90</argument>
            <argument key="width">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="app_shop" type="collection">
            <argument key="width">150</argument>
            <argument key="quality">90</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="app_shop_done" type="collection">
            <argument key="height">60</argument>
            <argument key="quality">90</argument>
            <argument key="width">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>article</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="article_shop" type="collection">
            <argument key="width">123</argument>
            <argument key="height">123</argument>
            <argument key="quality">90</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="article_shop_modular" type="collection">
            <argument key="height">67</argument>
            <argument key="quality">90</argument>
            <argument key="width">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="article_shop_tooltip" type="collection">
            <argument key="width">200</argument>
            <argument key="quality">90</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>offer</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="offer_shop" type="collection">
            <argument key="width">123</argument>
            <argument key="quality">90</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="offer_shop_modular" type="collection">
            <argument key="height">67</argument>
            <argument key="quality">90</argument>
            <argument key="width">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="offer_shop_tooltip" type="collection">
            <argument key="width">200</argument>
            <argument key="quality">90</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>item</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="item_shop" type="collection">
            <argument key="width">123</argument>
            <argument key="height">123</argument>
            <argument key="quality">90</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="item_shop_modular" type="collection">
            <argument key="height">67</argument>
            <argument key="quality">90</argument>
            <argument key="width">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="item_shop_tooltip" type="collection">
            <argument key="width">200</argument>
            <argument key="quality">90</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>item_tab</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="item_tab_shop" type="collection">
            <argument key="width">100</argument>
            <argument key="height">50</argument>
            <argument key="quality">90</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>pay_method</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="pay_method_shop" type="collection">
            <argument key="width">130</argument>
            <argument key="quality">90</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>sms_operator</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="sms_operator_shop" type="collection">
            <argument key="height">60</argument>
            <argument key="quality">90</argument>
            <argument key="width">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>invoice</argument>
        <argument type="collection">
          <argument>sonata.media.provider.file</argument>
        </argument>
        <argument type="collection">
          <argument key="invoice_normal" type="collection">
            <argument key="width">32</argument>
            <argument key="quality">99</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>client_document</argument>
        <argument type="collection">
          <argument>sonata.media.provider.file</argument>
        </argument>
        <argument type="collection">
          <argument key="client_document_normal" type="collection">
            <argument key="width">32</argument>
            <argument key="quality">99</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addDownloadSecurity">
        <argument>sonata.media.security.superadmin_strategy</argument>
        <argument type="service" id="sonata.media.security.superadmin_strategy"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.image</argument>
        <argument type="service" id="sonata.media.provider.image"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.file</argument>
        <argument type="service" id="sonata.media.provider.file"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.youtube</argument>
        <argument type="service" id="sonata.media.provider.youtube"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.dailymotion</argument>
        <argument type="service" id="sonata.media.provider.dailymotion"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.vimeo</argument>
        <argument type="service" id="sonata.media.provider.vimeo"/>
      </call>
    </service>
    <service id="sonata.media.thumbnail.format" class="Sonata\MediaBundle\Thumbnail\FormatThumbnail">
      <argument>jpg</argument>
    </service>
    <service id="sonata.media.provider.image" class="Sonata\MediaBundle\Provider\ImageProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.image</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>jpg</argument>
        <argument>png</argument>
        <argument>jpeg</argument>
      </argument>
      <argument type="collection">
        <argument>image/pjpeg</argument>
        <argument>image/jpeg</argument>
        <argument>image/png</argument>
        <argument>image/x-png</argument>
      </argument>
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_image.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_shop</argument>
        <argument type="collection">
          <argument key="width">123</argument>
          <argument key="quality">99</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>image_normal_shop</argument>
        <argument type="collection">
          <argument key="width">123</argument>
          <argument key="quality">90</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>app_tab_shop</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="height">50</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>client_pdf</argument>
        <argument type="collection">
          <argument key="height">50</argument>
          <argument key="width">false</argument>
          <argument key="quality">80</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>app_done</argument>
        <argument type="collection">
          <argument key="height">26</argument>
          <argument key="quality">90</argument>
          <argument key="width">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>app_email</argument>
        <argument type="collection">
          <argument key="height">50</argument>
          <argument key="quality">90</argument>
          <argument key="width">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>app_shop</argument>
        <argument type="collection">
          <argument key="width">150</argument>
          <argument key="quality">90</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>app_shop_done</argument>
        <argument type="collection">
          <argument key="height">60</argument>
          <argument key="quality">90</argument>
          <argument key="width">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>article_shop</argument>
        <argument type="collection">
          <argument key="width">123</argument>
          <argument key="height">123</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>article_shop_modular</argument>
        <argument type="collection">
          <argument key="height">67</argument>
          <argument key="quality">90</argument>
          <argument key="width">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>article_shop_tooltip</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="quality">90</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>offer_shop</argument>
        <argument type="collection">
          <argument key="width">123</argument>
          <argument key="quality">90</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>offer_shop_modular</argument>
        <argument type="collection">
          <argument key="height">67</argument>
          <argument key="quality">90</argument>
          <argument key="width">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>offer_shop_tooltip</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="quality">90</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>item_shop</argument>
        <argument type="collection">
          <argument key="width">123</argument>
          <argument key="height">123</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>item_shop_modular</argument>
        <argument type="collection">
          <argument key="height">67</argument>
          <argument key="quality">90</argument>
          <argument key="width">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>item_shop_tooltip</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="quality">90</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>item_tab_shop</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="height">50</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>pay_method_shop</argument>
        <argument type="collection">
          <argument key="width">130</argument>
          <argument key="quality">90</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sms_operator_shop</argument>
        <argument type="collection">
          <argument key="height">60</argument>
          <argument key="quality">90</argument>
          <argument key="width">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.file" class="Sonata\MediaBundle\Provider\FileProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.file</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>pdf</argument>
        <argument>txt</argument>
        <argument>rtf</argument>
        <argument>doc</argument>
        <argument>docx</argument>
        <argument>xls</argument>
        <argument>xlsx</argument>
        <argument>ppt</argument>
        <argument>pptx</argument>
        <argument>odt</argument>
        <argument>odg</argument>
        <argument>odp</argument>
        <argument>ods</argument>
        <argument>odc</argument>
        <argument>odf</argument>
        <argument>odb</argument>
        <argument>csv</argument>
        <argument>xml</argument>
      </argument>
      <argument type="collection">
        <argument>application/pdf</argument>
        <argument>application/x-pdf</argument>
        <argument>application/rtf</argument>
        <argument>text/html</argument>
        <argument>text/rtf</argument>
        <argument>text/plain</argument>
        <argument>application/excel</argument>
        <argument>application/msword</argument>
        <argument>application/vnd.ms-excel</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.oasis.opendocument.text</argument>
        <argument>application/vnd.oasis.opendocument.graphics</argument>
        <argument>application/vnd.oasis.opendocument.presentation</argument>
        <argument>application/vnd.oasis.opendocument.spreadsheet</argument>
        <argument>application/vnd.oasis.opendocument.chart</argument>
        <argument>application/vnd.oasis.opendocument.formula</argument>
        <argument>application/vnd.oasis.opendocument.database</argument>
        <argument>application/vnd.oasis.opendocument.image</argument>
        <argument>text/comma-separated-values</argument>
        <argument>text/xml</argument>
        <argument>application/xml</argument>
        <argument>application/zip</argument>
      </argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_file.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_shop</argument>
        <argument type="collection">
          <argument key="width">123</argument>
          <argument key="quality">99</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>invoice_normal</argument>
        <argument type="collection">
          <argument key="width">32</argument>
          <argument key="quality">99</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>client_document_normal</argument>
        <argument type="collection">
          <argument key="width">32</argument>
          <argument key="quality">99</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.youtube" class="Sonata\MediaBundle\Provider\YouTubeProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.youtube</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <argument>false</argument>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_youtube.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_shop</argument>
        <argument type="collection">
          <argument key="width">123</argument>
          <argument key="quality">99</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.dailymotion" class="Sonata\MediaBundle\Provider\DailyMotionProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.dailymotion</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_dailymotion.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_shop</argument>
        <argument type="collection">
          <argument key="width">123</argument>
          <argument key="quality">99</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.vimeo" class="Sonata\MediaBundle\Provider\VimeoProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.vimeo</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_vimeo.html.twig</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="quality">80</argument>
          <argument key="width">100</argument>
          <argument key="format">jpg</argument>
          <argument key="height">false</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.file_get_contents" class="Buzz\Client\FileGetContents">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.curl" class="Buzz\Client\Curl">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.browser" class="Buzz\Browser">
      <argument type="service" id="sonata.media.buzz.connector.file_get_contents"/>
    </service>
    <service id="sonata.media.adapter.image.gd" class="Imagine\Gd\Imagine"/>
    <service id="sonata.media.adapter.image.imagick" class="Imagine\Imagick\Imagine"/>
    <service id="sonata.media.adapter.image.gmagick" class="Imagine\Gmagick\Imagine"/>
    <service id="sonata.media.resizer.simple" class="Sonata\MediaBundle\Resizer\SimpleResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="sonata.media.resizer.square" class="Sonata\MediaBundle\Resizer\SquareResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="sonata.media.cdn.server" class="Sonata\MediaBundle\CDN\Server">
      <argument>/uploads/media</argument>
    </service>
    <service id="sonata.media.twig.extension" class="Sonata\MediaBundle\Twig\Extension\MediaExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.twig.global" class="Sonata\MediaBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.block.media" class="Sonata\MediaBundle\Block\MediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.feature_media" class="Sonata\MediaBundle\Block\FeatureMediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.feature_media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.gallery" class="Sonata\MediaBundle\Block\GalleryBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.security.public_strategy" class="Sonata\MediaBundle\Security\PublicDownloadStrategy">
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.media.security.forbidden_strategy" class="Sonata\MediaBundle\Security\ForbiddenDownloadStrategy">
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.media.security.superadmin_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service" id="security.context"/>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
        <argument>ROLE_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.media.security.connected_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service" id="security.context"/>
      <argument type="collection">
        <argument>IS_AUTHENTICATED_FULLY</argument>
        <argument>IS_AUTHENTICATED_REMEMBERED</argument>
      </argument>
    </service>
    <service id="sonata.media.form.type.media" class="Sonata\MediaBundle\Form\Type\MediaType">
      <tag name="form.type" alias="sonata_media_type"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
    </service>
    <service id="sonata.media.adapter.filesystem.local" class="Sonata\MediaBundle\Filesystem\Local">
      <argument>/var/www/wolopay/app/../web/uploads/media</argument>
      <argument>false</argument>
    </service>
    <service id="sonata.media.adapter.service.s3" class="AmazonS3">
      <argument type="collection"/>
    </service>
    <service id="sonata.media.filesystem.local" class="Gaufrette\Filesystem">
      <argument type="service" id="sonata.media.adapter.filesystem.local"/>
    </service>
    <service id="sonata.media.metadata.proxy" class="Sonata\MediaBundle\Metadata\ProxyMetadataBuilder">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.media.metadata.amazon" class="Sonata\MediaBundle\Metadata\AmazonMetadataBuilder"/>
    <service id="sonata.media.metadata.noop" class="Sonata\MediaBundle\Metadata\NoopMetadataBuilder"/>
    <service id="sonata.media.validator.format" class="Sonata\MediaBundle\Validator\FormatValidator">
      <tag name="validator.constraint_validator" alias="sonata.media.validator.format"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.serializer.handler.media" class="Sonata\MediaBundle\Serializer\MediaSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.serializer.handler.gallery" class="Sonata\MediaBundle\Serializer\GallerySerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.api.form.type.doctrine.media" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_media_api_form_doctrine_media"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_doctrine_media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.api.form.type.media" class="Sonata\MediaBundle\Form\Type\ApiMediaType">
      <tag name="form.type" alias="sonata_media_api_form_media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
    </service>
    <service id="sonata.media.api.form.type.gallery" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_media_api_form_gallery"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_gallery</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.api.form.type.gallery_has_media" class="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">
      <tag name="form.type" alias="sonata_media_api_form_gallery_has_media"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_gallery_has_media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.controller.api.gallery" class="Sonata\MediaBundle\Controller\Api\GalleryController">
      <argument type="service" id="sonata.media.manager.gallery"/>
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="form.factory"/>
      <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
    </service>
    <service id="sonata.media.controller.api.media" class="Sonata\MediaBundle\Controller\Api\MediaController">
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.media.manager.media" class="Sonata\MediaBundle\Entity\MediaManager">
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.manager.gallery" class="Sonata\MediaBundle\Entity\GalleryManager">
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.generator.default" class="Sonata\MediaBundle\Generator\DefaultGenerator"/>
    <service id="sonata.media.doctrine.event_subscriber" class="Sonata\MediaBundle\Listener\ORM\MediaEventSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.admin.media" class="Sonata\MediaBundle\Admin\ORM\MediaAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_media" label_catalogue="%sonata.media.admin.media.translation_domain%" label="media" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.media.admin.media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
      <argument>SonataMediaBundle:MediaAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <call method="setModelManager">
        <argument type="service" id="sonata.media.admin.media.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>media</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataMediaBundle:MediaAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataMediaBundle:MediaAdmin:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataMediaBundle:MediaAdmin:inner_row_media.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_flat_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.admin.media.manager" class="Sonata\MediaBundle\Admin\Manager\DoctrineORMManager">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.admin.gallery" class="Sonata\MediaBundle\Admin\GalleryAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="sonata_media" label="gallery" label_catalogue="%sonata.media.admin.gallery.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.media.admin.gallery</argument>
      <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
      <argument>SonataMediaBundle:GalleryAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>gallery</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataMediaBundle:GalleryAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.admin.gallery_has_media" class="Sonata\MediaBundle\Admin\GalleryHasMediaAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="sonata_media" label_catalogue="%sonata.media.admin.gallery_has_media.translation_domain%" label="gallery_has_media" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.media.admin.gallery_has_media</argument>
      <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>gallery_has_media</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.easy_extends.generator.bundle" class="Sonata\EasyExtendsBundle\Generator\BundleGenerator"/>
    <service id="sonata.easy_extends.generator.orm" class="Sonata\EasyExtendsBundle\Generator\OrmGenerator"/>
    <service id="sonata.easy_extends.generator.odm" class="Sonata\EasyExtendsBundle\Generator\OdmGenerator"/>
    <service id="sonata.easy_extends.generator.phpcr" class="Sonata\EasyExtendsBundle\Generator\PHPCRGenerator"/>
    <service id="sonata.easy_extends.generator.serializer" class="Sonata\EasyExtendsBundle\Generator\SerializerGenerator"/>
    <service id="sonata.easy_extends.doctrine.mapper" class="Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection"/>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\Media</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">media</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">gallery</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Gallery</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">gallery_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>Application\Sonata\MediaBundle\Entity\Gallery</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">Application\Sonata\MediaBundle\Entity\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">gallery</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="ibrows_sonata_translation.admin.orm" class="AppBundle\Admin\TranslationAdmin" shared="false" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="group.translation" label_catalogue="IbrowsSonataTranslationBundle" label="translation.title"/>
      <argument>ibrows_sonata_translation.admin.orm</argument>
      <argument>Lexik\Bundle\TranslationBundle\Entity\TransUnit</argument>
      <argument>IbrowsSonataTranslationBundle:TranslationCRUD</argument>
      <call method="setEditableOptions">
        <argument type="collection">
          <argument key="mode">inline</argument>
          <argument key="type">textarea</argument>
          <argument key="emptytext">Empty</argument>
          <argument key="placement">top</argument>
        </argument>
      </call>
      <call method="setTranslationDomain">
        <argument>IbrowsSonataTranslationBundle</argument>
      </call>
      <call method="setTransUnitManager">
        <argument type="service" id="lexik_translation.trans_unit.manager"/>
      </call>
      <call method="setManagedLocales">
        <argument type="collection">
          <argument>cz</argument>
          <argument>de</argument>
          <argument>en</argument>
          <argument>es</argument>
          <argument>fr</argument>
          <argument>it</argument>
          <argument>ko</argument>
          <argument>pl</argument>
          <argument>pt</argument>
        </argument>
      </call>
      <call method="setDefaultSelections">
        <argument type="collection">
          <argument key="nonTranslatedOnly">false</argument>
        </argument>
      </call>
      <call method="setEmptyPrefixes">
        <argument type="collection">
          <argument>__</argument>
          <argument>new_</argument>
          <argument></argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>translation.title</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">::sonata_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="besimple.soap.request_format.listener" class="BeSimple\SoapBundle\EventListener\RequestFormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
    </service>
    <service id="besimple.soap.definition.loader" class="Symfony\Component\Config\Loader\DelegatingLoader">
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationFileLoader" public="false">
                <tag name="besimple.soap.definition.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationClassLoader" public="false">
                    <tag name="besimple.soap.definition.loader"/>
                    <argument type="service" id="annotation_reader"/>
                    <argument type="service" id="besimple.soap.type.repository"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationClassLoader" public="false">
                <tag name="besimple.soap.definition.loader"/>
                <argument type="service" id="annotation_reader"/>
                <argument type="service" id="besimple.soap.type.repository"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="BeSimple\SoapBundle\ServiceDefinition\Loader\AnnotationComplexTypeLoader" public="false">
                <tag name="besimple.soap.definition.loader"/>
                <argument type="service" id="annotation_reader"/>
                <argument type="service" id="besimple.soap.type.repository"/>
              </service>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="besimple.soap.converter.collection" class="BeSimple\SoapCommon\Converter\TypeConverterCollection">
      <call method="add">
        <argument type="service">
          <service class="BeSimple\SoapCommon\Converter\DateTimeTypeConverter" public="false">
            <tag name="besimple.soap.converter"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="BeSimple\SoapCommon\Converter\DateTypeConverter" public="false">
            <tag name="besimple.soap.converter"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="besimple.soap.response" class="BeSimple\SoapBundle\Soap\SoapResponse"/>
    <service id="besimple.soap.response.listener" class="BeSimple\SoapBundle\EventListener\SoapResponseListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView"/>
      <argument type="service" id="besimple.soap.response"/>
    </service>
    <service id="besimple.soap.exception_listener" class="BeSimple\SoapBundle\EventListener\SoapExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="service_container"/>
      <argument>BeSimpleSoapBundle:SoapWebService:exception</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="besimple.soap.type.repository" class="BeSimple\SoapCommon\Definition\Type\TypeRepository">
      <argument type="service">
        <service class="BeSimple\SoapServer\Classmap" public="false"/>
      </argument>
      <call method="addXmlNamespace">
        <argument>xsd</argument>
        <argument>http://www.w3.org/2001/XMLSchema</argument>
      </call>
      <call method="addType">
        <argument>string</argument>
        <argument>xsd:string</argument>
      </call>
      <call method="addType">
        <argument>boolean</argument>
        <argument>xsd:boolean</argument>
      </call>
      <call method="addType">
        <argument>int</argument>
        <argument>xsd:int</argument>
      </call>
      <call method="addType">
        <argument>float</argument>
        <argument>xsd:float</argument>
      </call>
      <call method="addType">
        <argument>date</argument>
        <argument>xsd:date</argument>
      </call>
      <call method="addType">
        <argument>dateTime</argument>
        <argument>xsd:dateTime</argument>
      </call>
    </service>
    <service id="besimple.soap.cache" class="BeSimple\SoapBundle\Cache">
      <argument>true</argument>
      <argument>1</argument>
      <argument>/var/www/wolopay/var/cache/test_dev/besimple/soap/cache</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="besimple.soap.context.statsapi" class="BeSimple\SoapBundle\WebServiceContext">
      <argument type="service" id="besimple.soap.definition.loader"/>
      <argument type="service" id="besimple.soap.converter.collection"/>
      <argument type="collection">
        <argument key="cache_dir">/var/www/wolopay/var/cache/test_dev/besimple/soap</argument>
        <argument key="debug">true</argument>
        <argument key="cache_type">null</argument>
        <argument key="binder_request_header_class">BeSimple\SoapBundle\ServiceBinding\RpcLiteralRequestHeaderMessageBinder</argument>
        <argument key="binder_request_class">BeSimple\SoapBundle\ServiceBinding\RpcLiteralRequestMessageBinder</argument>
        <argument key="binder_response_class">BeSimple\SoapBundle\ServiceBinding\RpcLiteralResponseMessageBinder</argument>
        <argument key="wsdl_stylesheet">null</argument>
        <argument key="namespace">http://sym2_pay_gateway.test/ws/StatsApi</argument>
        <argument key="resource">@AppBundle/Controller/Soap/StatsController.php</argument>
        <argument key="resource_type">annotation</argument>
        <argument key="name">StatsApi</argument>
      </argument>
      <argument type="service" id="besimple.soap.cache"/>
    </service>
    <service id="faker.generator" class="Faker\Factory">
      <argument>en_US</argument>
      <call method="seed">
        <argument>248848403</argument>
      </call>
      <factory class="Faker\Factory" method="create"/>
    </service>
    <service id="faker.populator" class="Faker\ORM\Doctrine\Populator">
      <argument type="service" id="faker.generator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="faker.formatter_factory" class="Bazinga\Bundle\FakerBundle\Factory\FormatterFactory"/>
    <service id="knp_snappy.pdf" class="Knp\Bundle\SnappyBundle\Snappy\LoggableGenerator">
      <tag name="monolog.logger" channel="snappy"/>
      <argument type="service">
        <service class="Knp\Snappy\Pdf" public="false">
          <argument>/usr/local/bin/wkhtmltopdf</argument>
          <argument type="collection"/>
          <argument type="collection"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.snappy" on-invalid="null"/>
    </service>
    <service id="knp_snappy.image" class="Knp\Bundle\SnappyBundle\Snappy\LoggableGenerator">
      <tag name="monolog.logger" channel="snappy"/>
      <argument type="service">
        <service class="Knp\Snappy\Image" public="false">
          <argument>wkhtmltoimage</argument>
          <argument type="collection"/>
          <argument type="collection"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.snappy" on-invalid="null"/>
    </service>
    <service id="matthias_symfony_console_form.delegating_interactor" class="Matthias\SymfonyConsoleForm\Bridge\Interaction\DelegatingInteractor" public="false">
      <call method="addInteractor">
        <argument type="service">
          <service class="Matthias\SymfonyConsoleForm\Bridge\Interaction\FieldWithNoInteractionInteractor" public="false"/>
        </argument>
      </call>
      <call method="addInteractor">
        <argument type="service">
          <service class="Matthias\SymfonyConsoleForm\Bridge\Interaction\NonInteractiveRootInteractor" public="false">
            <argument type="service" id="matthias_symfony_console_form.delegating_interactor"/>
          </service>
        </argument>
      </call>
      <call method="addInteractor">
        <argument type="service">
          <service class="Matthias\SymfonyConsoleForm\Bridge\Interaction\CollectionInteractor" public="false">
            <argument type="service" id="matthias_symfony_console_form.delegating_interactor"/>
          </service>
        </argument>
      </call>
      <call method="addInteractor">
        <argument type="service">
          <service class="Matthias\SymfonyConsoleForm\Bridge\Interaction\CompoundInteractor" public="false">
            <argument type="service" id="matthias_symfony_console_form.delegating_interactor"/>
          </service>
        </argument>
      </call>
      <call method="addInteractor">
        <argument type="service">
          <service class="Matthias\SymfonyConsoleForm\Bridge\Interaction\FieldInteractor" public="false">
            <argument type="service">
              <service class="Matthias\SymfonyConsoleForm\Bridge\Transformer\TypeAncestryBasedTransformerResolver" public="false">
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\CheckboxType</argument>
                  <argument type="service">
                    <service class="AppBundle\Service\ConsoleForm\CheckboxTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\CheckboxType"/>
                    </service>
                  </argument>
                </call>
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\IntegerType</argument>
                  <argument type="service">
                    <service class="AppBundle\Service\ConsoleForm\IntegerTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\IntegerType"/>
                    </service>
                  </argument>
                </call>
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
                  <argument type="service">
                    <service class="AppBundle\Service\ConsoleForm\NumberTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\NumberType"/>
                    </service>
                  </argument>
                </call>
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\TextType</argument>
                  <argument type="service">
                    <service class="Matthias\SymfonyConsoleForm\Bridge\Transformer\TextTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\TextType"/>
                    </service>
                  </argument>
                </call>
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
                  <argument type="service">
                    <service class="Matthias\SymfonyConsoleForm\Bridge\Transformer\DateTimeTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\TimeType"/>
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\DateType"/>
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\DateTimeType"/>
                    </service>
                  </argument>
                </call>
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\DateType</argument>
                  <argument type="service">
                    <service class="Matthias\SymfonyConsoleForm\Bridge\Transformer\DateTimeTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\TimeType"/>
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\DateType"/>
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\DateTimeType"/>
                    </service>
                  </argument>
                </call>
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\DateTimeType</argument>
                  <argument type="service">
                    <service class="Matthias\SymfonyConsoleForm\Bridge\Transformer\DateTimeTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\TimeType"/>
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\DateType"/>
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\DateTimeType"/>
                    </service>
                  </argument>
                </call>
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\PasswordType</argument>
                  <argument type="service">
                    <service class="Matthias\SymfonyConsoleForm\Bridge\Transformer\PasswordTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\PasswordType"/>
                    </service>
                  </argument>
                </call>
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
                  <argument type="service">
                    <service class="Matthias\SymfonyConsoleForm\Bridge\Transformer\ChoiceTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\CountryType"/>
                    </service>
                  </argument>
                </call>
                <call method="addTransformer">
                  <argument>Symfony\Component\Form\Extension\Core\Type\CountryType</argument>
                  <argument type="service">
                    <service class="Matthias\SymfonyConsoleForm\Bridge\Transformer\ChoiceTransformer" public="false">
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
                      <tag name="form_to_question_transformer" form_type="Symfony\Component\Form\Extension\Core\Type\CountryType"/>
                    </service>
                  </argument>
                </call>
              </service>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="matthias_symfony_console_form.handle_form_based_command_event_listener" class="Matthias\SymfonyConsoleForm\Console\EventListener\HandleFormBasedCommandEventListener">
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand" priority="200"/>
      <argument type="service" id="console_form_helper"/>
    </service>
    <service id="matthias_symfony_console_form.set_input_definition_of_form_based_command_event_listener" class="Matthias\SymfonyConsoleForm\Console\EventListener\SetInputDefinitionOfFormBasedCommandEventListener">
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand" priority="2000"/>
      <argument type="service">
        <service class="Matthias\SymfonyConsoleForm\Console\Input\CachedInputDefinitionFactory" public="false">
          <argument type="service">
            <service class="Matthias\SymfonyConsoleForm\Console\Input\FormBasedInputDefinitionFactory" public="false">
              <argument type="service" id="form.factory"/>
            </service>
          </argument>
          <argument>/var/www/wolopay/var/cache/test_dev/matthias_symfony_console_form</argument>
          <argument>true</argument>
        </service>
      </argument>
    </service>
    <service id="matthias_symfony_console_form.console_form_type_extension" class="Matthias\SymfonyConsoleForm\Form\ConsoleFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="matthias_symfony_console.register_styles_event_listener" class="Matthias\SymfonyConsoleForm\Console\EventListener\RegisterOutputFormatterStylesEventListener">
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand" priority="1000"/>
      <argument type="service">
        <service class="Matthias\SymfonyConsoleForm\Console\Formatter\StylesCollection" public="false">
          <call method="set">
            <argument>fieldset</argument>
            <argument type="service">
              <service class="Symfony\Component\Console\Formatter\OutputFormatterStyle" public="false">
                <tag name="console_style" style="fieldset"/>
                <argument>yellow</argument>
                <argument>null</argument>
                <argument type="collection">
                  <argument>bold</argument>
                </argument>
              </service>
            </argument>
          </call>
          <call method="set">
            <argument>default</argument>
            <argument type="service">
              <service class="Symfony\Component\Console\Formatter\OutputFormatterStyle" public="false">
                <tag name="console_style" style="default"/>
                <argument>green</argument>
              </service>
            </argument>
          </call>
          <call method="set">
            <argument>question</argument>
            <argument type="service">
              <service class="Symfony\Component\Console\Formatter\OutputFormatterStyle" public="false">
                <tag name="console_style" style="question"/>
                <argument>black</argument>
                <argument>cyan</argument>
              </service>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="matthias_symfony_console_form.register_helpers_event_listener" class="Matthias\SymfonyConsoleForm\Console\EventListener\RegisterHelpersEventListener">
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand" priority="1000"/>
      <argument type="service">
        <service class="Matthias\SymfonyConsoleForm\Console\Helper\HelperCollection" public="false">
          <call method="set">
            <argument type="service" id="console_form_helper"/>
          </call>
        </service>
      </argument>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController">
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="data_collector.request" type="collection">
          <argument>request</argument>
          <argument>@WebProfiler/Collector/request.html.twig</argument>
        </argument>
        <argument key="data_collector.time" type="collection">
          <argument>time</argument>
          <argument>@WebProfiler/Collector/time.html.twig</argument>
        </argument>
        <argument key="data_collector.memory" type="collection">
          <argument>memory</argument>
          <argument>@WebProfiler/Collector/memory.html.twig</argument>
        </argument>
        <argument key="data_collector.ajax" type="collection">
          <argument>ajax</argument>
          <argument>@WebProfiler/Collector/ajax.html.twig</argument>
        </argument>
        <argument key="data_collector.form" type="collection">
          <argument>form</argument>
          <argument>@WebProfiler/Collector/form.html.twig</argument>
        </argument>
        <argument key="data_collector.exception" type="collection">
          <argument>exception</argument>
          <argument>@WebProfiler/Collector/exception.html.twig</argument>
        </argument>
        <argument key="data_collector.logger" type="collection">
          <argument>logger</argument>
          <argument>@WebProfiler/Collector/logger.html.twig</argument>
        </argument>
        <argument key="data_collector.events" type="collection">
          <argument>events</argument>
          <argument>@WebProfiler/Collector/events.html.twig</argument>
        </argument>
        <argument key="data_collector.router" type="collection">
          <argument>router</argument>
          <argument>@WebProfiler/Collector/router.html.twig</argument>
        </argument>
        <argument key="data_collector.translation" type="collection">
          <argument>translation</argument>
          <argument>@WebProfiler/Collector/translation.html.twig</argument>
        </argument>
        <argument key="data_collector.security" type="collection">
          <argument>security</argument>
          <argument>@Security/Collector/security.html.twig</argument>
        </argument>
        <argument key="data_collector.twig" type="collection">
          <argument>twig</argument>
          <argument>@WebProfiler/Collector/twig.html.twig</argument>
        </argument>
        <argument key="data_collector.doctrine" type="collection">
          <argument>db</argument>
          <argument>@Doctrine/Collector/db.html.twig</argument>
        </argument>
        <argument key="swiftmailer.data_collector" type="collection">
          <argument>swiftmailer</argument>
          <argument>@Swiftmailer/Collector/swiftmailer.html.twig</argument>
        </argument>
        <argument key="data_collector.dump" type="collection">
          <argument>dump</argument>
          <argument>@Debug/Profiler/dump.html.twig</argument>
        </argument>
        <argument key="misd_guzzle.data_collector" type="collection">
          <argument>guzzle</argument>
          <argument>MisdGuzzleBundle:Collector:guzzle</argument>
        </argument>
        <argument key="sonata.block.data_collector" type="collection">
          <argument>block</argument>
          <argument>SonataBlockBundle:Profiler:block.html.twig</argument>
        </argument>
        <argument key="data_collector.ladybug_data_collector" type="collection">
          <argument>ladybug</argument>
          <argument>RaulFraileLadybugBundle:Collector:ladybug</argument>
        </argument>
        <argument key="data_collector.config" type="collection">
          <argument>config</argument>
          <argument>@WebProfiler/Collector/config.html.twig</argument>
        </argument>
      </argument>
      <argument>bottom</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="sensio_distribution.security_checker" class="SensioLabs\Security\SecurityChecker"/>
    <service id="sensio_distribution.security_checker.command" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="sensio_distribution.security_checker"/>
    </service>
    <service id="ladybug.dumper" class="Ladybug\Dumper">
      <call method="setOptions">
        <argument type="collection">
          <argument key="extra_helpers" type="collection">
            <argument>RaulFraile\Bundle\LadybugBundle\DataCollector\LadybugDataCollector:log</argument>
          </argument>
          <argument key="theme">modern</argument>
          <argument key="expanded">false</argument>
          <argument key="silenced">false</argument>
          <argument key="array_max_nesting_level">9</argument>
          <argument key="object_max_nesting_level">3</argument>
        </argument>
      </call>
    </service>
    <service id="data_collector.ladybug_data_collector" class="RaulFraile\Bundle\LadybugBundle\DataCollector\LadybugDataCollector">
      <tag name="data_collector" template="RaulFraileLadybugBundle:Collector:ladybug" id="ladybug"/>
      <argument type="service" id="ladybug.dumper"/>
    </service>
    <service id="ladybug.event_listener.ladybug_config_listener" class="RaulFraile\Bundle\LadybugBundle\EventListener\LadybugConfigListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="collection">
        <argument key="extra_helpers" type="collection">
          <argument>RaulFraile\Bundle\LadybugBundle\DataCollector\LadybugDataCollector:log</argument>
        </argument>
        <argument key="theme">modern</argument>
        <argument key="expanded">false</argument>
        <argument key="silenced">false</argument>
        <argument key="array_max_nesting_level">9</argument>
        <argument key="object_max_nesting_level">3</argument>
      </argument>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>javascript: var r = new XMLHttpRequest; r.open('get', 'http://localhost:8091?message=%%f:%%l');r.send()</argument>
      <argument>UTF-8</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="data_collector.dump"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="app.gamer_wallet" class="AppBundle\Payment\Util\GamerWalletService">
      <tag name="kernel.event_listener" event="shop.payment.completed"/>
      <tag name="kernel.event_listener" event="shop.payment.cancelled"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="common.currency"/>
      <argument type="service" id="command.common.node_emit"/>
      <argument type="service" id="jms_serializer"/>
      <argument type="service" id="shop.payment.payment_process"/>
    </service>
    <service id="app.cart_extra_cost" class="AppBundle\Payment\Util\CartExtraCost\CartExtraCostService">
      <property name="container" type="service" id="service_container"/>
    </service>
    <service id="shop.payment.payment_process" class="AppBundle\Payment\Util\PaymentProcessService">
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="common.currency"/>
      <argument type="service" id="shop_app.article"/>
      <argument>false</argument>
      <argument type="service" id="app.cart_extra_cost"/>
      <argument type="service" id="app.article_temp_price"/>
      <argument type="service" id="country"/>
    </service>
    <service id="shop.payment.calculate_fee_service" class="AppBundle\Payment\Util\CalculateFee">
      <argument type="service" id="logger"/>
      <argument type="service" id="common.currency"/>
    </service>
    <service id="app.article_temp_price" class="AppBundle\Payment\Util\ArticleExtraCost\ArticleTempPriceService">
      <property name="container" type="service" id="service_container"/>
    </service>
    <service id="shop.payment.validation.price_hack" class="AppBundle\Payment\Validation\PaymentPriceHackService">
      <argument type="service" id="logger"/>
    </service>
    <service id="app.internal_payment_notification" class="AppBundle\Payment\Other\InternalPaymentNotificationService">
      <tag name="kernel.event_listener" event="shop.payment.completed"/>
      <tag name="kernel.event_listener" event="shop.payment.cancelled"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="businessActive">false</property>
      <property name="currencyExchangeService" type="service" id="common.currency"/>
    </service>
    <service id="_jms_di_extra.unnamed.service_0" class="AppBundle\Payment\PayMethod\AbstractPayMethod">
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.steam_web_ipn_pay_method" class="AppBundle\Payment\PayMethod\Steam\SteamWebIpnPayMethod">
      <argument>false</argument>
      <argument type="service" id="service_container"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.wallet_ipn_pay_method" class="AppBundle\Payment\PayMethod\Wallet\WalletPayMethod">
      <argument type="service" id="app.gamer_wallet"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.neteller_ipn_pay_method" class="AppBundle\Payment\PayMethod\Neteller\NetellerIpnPayMethod">
      <argument>false</argument>
      <argument>en</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.test_ipn_pay_method" class="AppBundle\Payment\PayMethod\Test\TestPayMethod">
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.adyen_ipn_pay_method" class="AppBundle\Payment\PayMethod\Adyen\AdyenIpnPayMethod">
      <argument>false</argument>
      <argument>en</argument>
      <argument type="service" id="shop.subscription.finished"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.adyen_subscription_ipn_pay_method" class="AppBundle\Payment\PayMethod\Adyen\AdyenSubscriptionIpnPayMethod">
      <argument>false</argument>
      <argument>en</argument>
      <argument type="service" id="shop.subscription.finished"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.ukash_ipn_pay_method" class="AppBundle\Payment\PayMethod\Ukash\UkashPayMethod">
      <argument>false</argument>
      <argument>UKASH10082</argument>
      <argument>12345678901234567890</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.g2a_ipn_pay_method" class="AppBundle\Payment\PayMethod\G2A\G2AIpnPayMethod">
      <argument>true</argument>
      <argument type="service" id="service_container"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.paypal_t_ipn_pay_method" class="AppBundle\Payment\PayMethod\PayPal\PayPalIpnBasicPayMethod">
      <argument>false</argument>
      <argument>mbrualla@nviasms.com</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.paypal_ipn_subscription_pay_method_old" class="AppBundle\Payment\PayMethod\PayPal\PayPalIpnSubscriptionBasicPayMethod">
      <argument>false</argument>
      <argument>mbrualla@nviasms.com</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.paypal_ipn_pay_method" class="AppBundle\Payment\PayMethod\PayPal\PayPalIpnApiRestPayMethod">
      <argument>false</argument>
      <argument>mbrualla@nviasms.com</argument>
      <argument>/var/www/wolopay/app</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.paypal_credit_card_ipn_pay_method" class="AppBundle\Payment\PayMethod\PayPal\PayPalCreditCardIpnApiRestPayMethod">
      <argument>false</argument>
      <argument>mbrualla@nviasms.com</argument>
      <argument>/var/www/wolopay/app</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.paypal_ipn_subscription_pay_method" class="AppBundle\Payment\PayMethod\PayPal\PayPalIpnSubscriptionApiRestPayMethod">
      <argument>false</argument>
      <argument>mbrualla@nviasms.com</argument>
      <argument>/var/www/wolopay/app</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.boa_compra_ipn_pay_method" class="AppBundle\Payment\PayMethod\BoaCompra\BoaCompraIpnPayMethod">
      <argument>false</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.boa_compra_subscription_ipn_pay_method" class="AppBundle\Payment\PayMethod\BoaCompra\BoaCompraSubscriptionIpnPayMethod">
      <argument>false</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.nvia_sms_ipn_pay_method" class="AppBundle\Payment\PayMethod\SMS\SMSPayMethod">
      <argument type="service" id="service_container"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.fortuno_sms_ipn_pay_method" class="AppBundle\Payment\PayMethod\SMS\FortunoSMSPayMethod">
      <argument type="service" id="service_container"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.tigo_ipn_pay_method" class="AppBundle\Payment\PayMethod\Tigo\TigoIpnPayMethod">
      <argument>false</argument>
      <argument type="service" id="validator"/>
      <argument type="service" id="templating"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.chrome_store_ipn_pay_method" class="AppBundle\Payment\PayMethod\ExternalStores\ChromeStore">
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.facebook_ipn_pay_method" class="AppBundle\Payment\PayMethod\ExternalStores\FacebookIpnPayMethod">
      <argument>en</argument>
      <argument>false</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.facebook_subscription_ipn_pay_method" class="AppBundle\Payment\PayMethod\ExternalStores\FacebookSubscriptionIpnPayMethod">
      <argument>en</argument>
      <argument>false</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.xsolla_ipn_pay_method" class="AppBundle\Payment\PayMethod\Xsolla\XsollaPayMethod">
      <argument>false</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.xsolla_subscription_ipn_pay_method" class="AppBundle\Payment\PayMethod\Xsolla\XsollaSubscriptionPayMethod">
      <argument>false</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.nvia_promo_code_pay_method" class="AppBundle\Payment\PayMethod\PromoCode\PromoCodePayMethod">
      <argument type="service" id="service_container"/>
      <argument type="service" id="app.shop.promo"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.cherry_credits_ipn_pay_method" class="AppBundle\Payment\PayMethod\CherryCredits\CherryCreditsIpnPayMethod">
      <argument>false</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.rixty_ipn_pay_method" class="AppBundle\Payment\PayMethod\Rixty\RixtyPayMethod">
      <argument>false</argument>
      <argument>169f8139-a300-4892-9f44-31a9ab1b4d64</argument>
      <argument>96e2b7d709df80</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.nvia_voice_ipn_pay_method" class="AppBundle\Payment\PayMethod\Voice\VoicePayMethod">
      <argument type="service" id="service_container"/>
      <argument>false</argument>
      <argument>169f8139-a300-4892-9f44-31a9ab1b4d64</argument>
      <argument>96e2b7d709df80</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.paysafecard_ipn_pay_method" class="AppBundle\Payment\PayMethod\PaySafeCard\PaySafeCardPayMethod">
      <argument>en</argument>
      <argument>false</argument>
      <argument>psc_clickgestionsl_test</argument>
      <argument>MsQc2OT1OwKAy</argument>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.payment.mol_thailand_ipn_pay_method" class="AppBundle\Payment\PayMethod\MOL\MOLThailandIpnPayMethod">
      <argument type="service" id="service_container"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="translator" type="service" id="translator"/>
      <property name="paymentProcessService" type="service" id="shop.payment.payment_process"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="locale">en</property>
      <property name="router" type="service" id="router"/>
    </service>
    <service id="shop.subscription.started" class="AppBundle\Payment\Actions\SubscriptionStarted">
      <property name="container" type="service" id="service_container"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="shop.payment.dispute" class="AppBundle\Payment\Actions\PaymentDisputed">
      <argument type="service" id="logger"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument>miguelgd1985@gmail.com</argument>
      <argument>miguelgd1985@gmail.com</argument>
    </service>
    <service id="shop.payment.completed" class="AppBundle\Payment\Actions\PaymentCompleted">
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="shop.payment.calculate_fee_service"/>
      <argument type="service" id="command.shop.app_notification.send"/>
      <argument type="service" id="common.currency"/>
      <argument type="service" id="app.purchase_manager"/>
      <argument type="service" id="shop_app.article"/>
      <argument type="service" id="app.purchase_notification"/>
    </service>
    <service id="shop.payment.purchase_extra_cost" class="AppBundle\Payment\Actions\PurchaseExtraCost">
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="shop.payment.calculate_fee_service"/>
      <argument type="service" id="command.shop.app_notification.send"/>
      <argument type="service" id="common.currency"/>
      <argument type="service" id="app.purchase_manager"/>
    </service>
    <service id="shop.payment.unblocked" class="AppBundle\Payment\Actions\PaymentUnBlocked">
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="shop.payment.dispute_end" class="AppBundle\Payment\Actions\PaymentDisputedEnd">
      <argument type="service" id="logger"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument>miguelgd1985@gmail.com</argument>
      <argument>miguelgd1985@gmail.com</argument>
      <argument type="service" id="shop.payment.cancelled"/>
      <argument type="service" id="shop.payment.un_cancelled"/>
    </service>
    <service id="shop.payment.pending" class="AppBundle\Payment\Actions\PaymentPending">
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="shop.payment.un_cancelled" class="AppBundle\Payment\Actions\PaymentUnCancelled">
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="shop.subscription.finished" class="AppBundle\Payment\Actions\SubscriptionFinished">
      <property name="container" type="service" id="service_container"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="shop.payment.blocked" class="AppBundle\Payment\Actions\PaymentBlocked">
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="shop.payment.cancelled" class="AppBundle\Payment\Actions\PaymentCancelled">
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="app.purchase_manager"/>
      <argument type="service" id="app.purchase_notification"/>
    </service>
    <service id="shop.payment.failed" class="AppBundle\Payment\Actions\PaymentFailed">
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="shop.subscription.failed" class="AppBundle\Payment\Actions\SubscriptionFailed">
      <property name="container" type="service" id="service_container"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="shop.subscription.canceled" class="AppBundle\Payment\Actions\SubscriptionCancelled">
      <property name="container" type="service" id="service_container"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="transaction.validator.value_current" class="AppBundle\Validator\Constraints\TransactionGeneralValidator">
      <tag name="validator.constraint_validator" alias="transaction_general_validation"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="country"/>
    </service>
    <service id="shop.form.data_transformer.transaction_id" class="AppBundle\Form\DataTransformer\TransactionIdToStringTransformer">
      <tag name="form.type" alias="transaction_text"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="command.common.node_emit" class="AppBundle\Command\NodeJsCommand">
      <tag name="console.command"/>
      <tag name="kernel.event_listener" event="shop.payment.completed" priority="-10"/>
      <tag name="kernel.event_listener" event="shop.payment.pending" priority="-10"/>
      <argument>http://sym2_pay_gateway.test</argument>
      <argument>3001</argument>
      <argument type="service" id="jms_serializer"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="command.paymethods_complete_configuration" class="AppBundle\Command\PayMethodsCompleteConfigurationCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="appShopHasArticleService" type="service" id="app_shop_has_article"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="command.shop.simulate_payment_cancel" class="AppBundle\Command\SimulateCancelPaymentCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="router" type="service" id="router"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="paymentCancelled" type="service" id="shop.payment.cancelled"/>
    </service>
    <service id="command.time_zone_to_each_country" class="AppBundle\Command\TimeZoneToEachCountryCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="shop.command.transaction.create" class="AppBundle\Command\TransactionCreateCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="ipInfoService" type="service" id="common.ip_info"/>
      <property name="logger" type="service" id="logger"/>
      <property name="validator" type="service" id="validator"/>
      <property name="eventDispatcher" type="service" id="debug.event_dispatcher"/>
      <property name="transactionLifeTime">3600</property>
      <property name="isProduction">false</property>
    </service>
    <service id="shop.command.transaction_temp.expire" class="AppBundle\Command\TransactionTempExpiredCommand">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <argument>3600</argument>
      <argument type="service" id="shop.logger.transaction_helper"/>
      <argument type="service" id="command.common.node_emit"/>
    </service>
    <service id="command.shop.simulate_payment_complete" class="AppBundle\Command\SimulatePaymentCompleteProcessCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="router" type="service" id="router"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="paymentCompleted" type="service" id="shop.payment.completed"/>
      <property name="subscriptionStarted" type="service" id="shop.subscription.started"/>
      <property name="streamHelper" type="service" id="shop.logger.transaction_helper"/>
    </service>
    <service id="command.internal_payment_notification" class="AppBundle\Command\InternalPaymentNotificationCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="internalPaymentNotification" type="service" id="app.internal_payment_notification"/>
    </service>
    <service id="command.shop.offer.sync" class="AppBundle\Command\OfferCommand">
      <tag name="console.command"/>
      <tag name="kernel.event_listener" event="shop.payment.completed"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="shop_app.business_intelligent" class="AppBundle\Command\BusinessIntelligentCommand">
      <tag name="console.command"/>
      <tag name="kernel.event_listener" event="shop.payment.completed"/>
      <tag name="kernel.event_listener" event="shop.payment.cancelled"/>
      <tag name="kernel.event_listener" event="shop.transaction.started"/>
      <tag name="kernel.event_listener" event="shop.purchase.extra_cost"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <argument>false</argument>
      <argument type="service" id="common.currency"/>
      <argument>/var/www/wolopay/app</argument>
      <argument>test_dev</argument>
      <argument type="service" id="common.ip_info"/>
      <argument>php</argument>
    </service>
    <service id="shop_app.business_intelligent_resend" class="AppBundle\Command\BusinessIntelligentResendExtraCostCommand">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <argument>false</argument>
      <argument type="service" id="common.currency"/>
      <argument>/var/www/wolopay/app</argument>
      <argument>test_dev</argument>
      <argument type="service" id="common.ip_info"/>
      <argument>php</argument>
    </service>
    <service id="api.command.wsse" class="AppBundle\Command\WSSECommand">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="command.need_make_payment_request" class="AppBundle\Command\SubscriptionNeedMakePaymentRequestCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="container" type="service" id="service_container"/>
      <property name="paymentCompleted" type="service" id="shop.payment.completed"/>
      <property name="streamHelper" type="service" id="shop.logger.transaction_helper"/>
      <property name="rootDir">/var/www/wolopay/app</property>
    </service>
    <service id="command.date_to_utc" class="AppBundle\Command\DatesChangeToUTCCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="app.import_temp" class="AppBundle\Command\AppImportCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="container" type="service" id="service_container"/>
    </service>
    <service id="command.nginx_clear_cache" class="AppBundle\Command\NginxClearCacheCommand">
      <tag name="console.command"/>
      <property name="env">test_dev</property>
      <property name="rootDir">/var/www/wolopay/app</property>
    </service>
    <service id="command.currency_exchange" class="AppBundle\Command\CurrencyExchangeCommand">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
    </service>
    <service id="command.shop.simulate_extra_cost" class="AppBundle\Command\SimulatePurchaseExtraCostCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="purchaseExtraCost" type="service" id="shop.payment.purchase_extra_cost"/>
    </service>
    <service id="command.payment_cancel" class="AppBundle\Command\PaymentCancelCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="paymentCancelled" type="service" id="shop.payment.cancelled"/>
      <property name="subscriptionCancelled" type="service" id="shop.subscription.canceled"/>
    </service>
    <service id="command.app_fakedata_populate" class="AppBundle\Command\PopulateAppFakeData">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="isProduction">false</property>
      <property name="apiClient" type="service" id="api.make_request"/>
      <property name="transactionCreateService" type="service" id="shop.command.transaction.create"/>
      <property name="simulatePaymentCompleteService" type="service" id="command.shop.simulate_payment_complete"/>
    </service>
    <service id="command.xsolla_sync" class="AppBundle\Command\XsollaSyncCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="command.currency_exchange"/>
      <property name="transUnitManager" type="service" id="lexik_translation.trans_unit.manager"/>
      <property name="mediaManager" type="service" id="sonata.media.manager.media"/>
      <property name="localeAvailable" type="collection">
        <property>en</property>
        <property>es</property>
        <property>fr</property>
        <property>pl</property>
        <property>it</property>
        <property>de</property>
        <property>cz</property>
        <property>pt</property>
        <property>ko</property>
      </property>
      <property name="emailInfo">miguelgd1985@gmail.com</property>
    </service>
    <service id="app.billing.client.owes_command" class="AppBundle\Command\Billing\BillingClientOwesCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="knpSnappyPdf" type="service" id="knp_snappy.pdf"/>
      <property name="templating" type="service" id="templating"/>
      <property name="eventDispatcher" type="service" id="debug.event_dispatcher"/>
      <property name="serializer" type="service" id="jms_serializer"/>
      <property name="rootDir">/var/www/wolopay/app</property>
      <property name="container" type="service" id="service_container"/>
    </service>
    <service id="app.billing.client.send_invoice_command" class="AppBundle\Command\Billing\BillingClientSendInvoiceCommand">
      <tag name="console.command"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="emailService" type="service" id="app.emails"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="app.migration" class="AppBundle\Command\MigrationPGCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="mediaManager" type="service" id="sonata.media.manager.media"/>
      <property name="transUnitManager" type="service" id="lexik_translation.trans_unit.manager"/>
      <property name="currencyService" type="service" id="common.currency"/>
    </service>
    <service id="shop.command.subscription.expire" class="AppBundle\Command\SubscriptionExpiredCommand">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="shop.subscription.finished"/>
    </service>
    <service id="app.business_intelligent_sync" class="AppBundle\Command\BusinessIntelligentSyncCommand">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <argument>false</argument>
      <argument type="service" id="common.currency"/>
      <argument>/var/www/wolopay/app</argument>
      <argument>test_dev</argument>
      <argument type="service" id="common.ip_info"/>
      <argument>php</argument>
      <property name="businessIntelligentCommand" type="service" id="shop_app.business_intelligent"/>
    </service>
    <service id="shop.command.transaction.expire" class="AppBundle\Command\TransactionExpiredCommand">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <argument>3600</argument>
      <argument type="service" id="shop.logger.transaction_helper"/>
      <argument type="service" id="command.common.node_emit"/>
    </service>
    <service id="command.shop.app_notification.send" class="AppBundle\Command\AppNotificationCommand">
      <tag name="kernel.event_listener" event="shop.payment.completed"/>
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="eventDispatcher" type="service" id="debug.event_dispatcher"/>
      <property name="logger" type="service" id="logger"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="rootDir">/var/www/wolopay/app</property>
      <property name="phpExePath">php</property>
      <property name="env">test_dev</property>
      <property name="streamHelper" type="service" id="shop.logger.transaction_helper"/>
    </service>
    <service id="command.shop.simulate_send_ipn_voice" class="AppBundle\Command\SimulateSendIpnVoiceProcessCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="router" type="service" id="router"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
    </service>
    <service id="command.idcgames.import.gameraffiliateids" class="AppBundle\Command\IDCGamesGamerAffiliateImport">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
    </service>
    <service id="command.nginx_call_routes_with_cache" class="AppBundle\Command\NginxCallRoutesWithCacheCommand">
      <tag name="console.command"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="router" type="service" id="router"/>
      <property name="logger" type="service" id="logger"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
    </service>
    <service id="command.shop.simulate_send_ipn_sms" class="AppBundle\Command\SimulateSendIpnSMSProcessCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
      <property name="router" type="service" id="router"/>
      <property name="log" type="service" id="logger"/>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
    </service>
    <service id="command.fortuno_sync" class="AppBundle\Command\FortunoSyncCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyService" type="service" id="command.currency_exchange"/>
      <property name="transUnitManager" type="service" id="lexik_translation.trans_unit.manager"/>
      <property name="translator" type="service" id="translator"/>
      <property name="localeAvailable" type="collection">
        <property>en</property>
        <property>es</property>
        <property>fr</property>
        <property>pl</property>
        <property>it</property>
        <property>de</property>
        <property>cz</property>
        <property>pt</property>
        <property>ko</property>
      </property>
      <property name="emailInfo">miguelgd1985@gmail.com</property>
    </service>
    <service id="command.app_paymethods_add" class="AppBundle\Command\PayMethodsAppAddCommand">
      <tag name="console.command"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="appShopHasArticleService" type="service" id="app_shop_has_article"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="app.kernel_exception" class="AppBundle\Listener\KernelExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception"/>
      <property name="templating" type="service" id="templating"/>
      <property name="logger" type="service" id="logger"/>
      <property name="mailer" type="service" id="swiftmailer.mailer.default"/>
      <property name="emailApp">miguelgd1985@gmail.com</property>
    </service>
    <service id="nvia.shop_app.listener.transaction_serializer_listener" class="AppBundle\Entity\Serializer\GenericSerializerListener">
      <tag name="jms_serializer.event_subscriber"/>
      <property name="container" type="service" id="service_container"/>
      <property name="router" type="service" id="router"/>
      <property name="requestStack" type="service" id="request_stack"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="localeAvailable" type="collection">
        <property>en</property>
        <property>es</property>
        <property>fr</property>
        <property>pl</property>
        <property>it</property>
        <property>de</property>
        <property>cz</property>
        <property>pt</property>
        <property>ko</property>
      </property>
    </service>
    <service id="app.gamer" class="AppBundle\Service\GamerService">
      <tag name="kernel.event_listener" event="app.gamer.create"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="guzzle" type="service" id="guzzle.client"/>
    </service>
    <service id="app_shop_has_article" class="AppBundle\Service\AppShopHasArticleService">
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="offerCommand" type="service" id="command.shop.offer.sync"/>
      <property name="currencyService" type="service" id="common.currency"/>
      <property name="countryService" type="service" id="country"/>
      <property name="env">test_dev</property>
      <property name="rootDir">/var/www/wolopay/app</property>
    </service>
    <service id="app.form_helper" class="AppBundle\Service\FormHelper">
      <property name="validator" type="service" id="validator"/>
      <property name="formFactory" type="service" id="form.factory"/>
    </service>
    <service id="app.purchase_manager" class="AppBundle\Service\PurchaseManager">
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="shop.payment.calculate_fee_service"/>
      <argument type="service" id="command.shop.app_notification.send"/>
      <argument type="service" id="common.currency"/>
    </service>
    <service id="app.shop.promo" class="AppBundle\Service\Promo\PromoService">
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="app.blacklist" class="AppBundle\Service\BlacklistService">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="common.ip_info"/>
      <argument>false</argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="common.currency" class="AppBundle\Service\CurrencyService">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="shop_app.offer" class="AppBundle\Service\OfferService">
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="offerCommand" type="service" id="command.shop.offer.sync"/>
      <property name="env">test_dev</property>
      <property name="rootDir">/var/www/wolopay/app</property>
    </service>
    <service id="shop_app.article" class="AppBundle\Service\ArticleService">
      <tag name="kernel.event_listener" event="shop.payment.completed"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="common.currency"/>
      <argument type="service" id="shop.payment.calculate_fee_service"/>
    </service>
    <service id="app.app" class="AppBundle\Service\AppService">
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="common.ip_info" class="AppBundle\Service\IPInfoService">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="app.translate_helper" class="AppBundle\Service\TranslateHelperService">
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="transLexik" type="service" id="lexik_translation.trans_unit.manager"/>
    </service>
    <service id="app.purchase_notification" class="AppBundle\Service\PurchaseNotificationService">
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="currencyExchange" type="service" id="common.currency"/>
    </service>
    <service id="country" class="AppBundle\Service\CountryService">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="app.pay_method" class="AppBundle\Service\PayMethodService">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="common.currency"/>
      <argument type="service" id="shop.payment.calculate_fee_service"/>
      <argument type="service" id="shop.payment.payment_process"/>
    </service>
    <service id="app_tab" class="AppBundle\Service\AppTabService">
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="logger" type="service" id="logger"/>
      <property name="offerCommand" type="service" id="command.shop.offer.sync"/>
      <property name="env">test_dev</property>
      <property name="rootDir">/var/www/wolopay/app</property>
    </service>
    <service id="app.emails" class="AppBundle\Service\EmailService">
      <tag name="kernel.event_listener" event="shop.payment.completed"/>
      <tag name="kernel.event_listener" event="payment.notification.failed"/>
      <tag name="kernel.event_listener" event="shop.payment.cancelled"/>
      <tag name="kernel.event_listener" event="app.billing_invoices.generated"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="isProduction">false</property>
      <property name="mailer" type="service" id="swiftmailer.mailer.default"/>
      <property name="emailApp">miguelgd1985@gmail.com</property>
      <property name="emailInvoices">miguelgd1985@gmail.com</property>
      <property name="emailBilling">miguelgd1985@gmail.com</property>
      <property name="emailDevelopers">miguelgd1985@gmail.com</property>
      <property name="emailInfoWolopay">miguelgd1985@gmail.com</property>
      <property name="emailFinance">miguelgd1985@gmail.com</property>
      <property name="kernelRootDir">/var/www/wolopay/app</property>
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="twig" type="service" id="templating"/>
      <property name="logger" type="service" id="logger"/>
      <property name="translator" type="service" id="translator"/>
      <property name="router" type="service" id="router"/>
      <property name="mediaExtension" type="service" id="sonata.media.twig.extension"/>
    </service>
    <service id="app.client_user_notifications" class="AppBundle\Service\ClientUserNotificationService">
      <tag name="kernel.event_listener" event="shop.payment.cancelled"/>
      <tag name="kernel.event_listener" event="payment.notification.failed"/>
      <property name="em" type="service" id="doctrine.orm.default_entity_manager"/>
      <property name="translator" type="service" id="translator"/>
      <property name="logger" type="service" id="logger"/>
    </service>
    <service id="app.user_details" class="AppBundle\Logger\UserDetails">
      <tag name="kernel.event_listener" event="kernel.exception"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="shop.logger.transaction_helper" class="AppBundle\Logger\Util\StreamHandlerDynamicFileHelper">
      <argument type="service" id="logger"/>
    </service>
    <service id="app.api_language" class="AppBundle\Api\ApiLanguage">
      <tag name="kernel.event_listener" event="kernel.request"/>
      <property name="localesAvailable" type="collection">
        <property>en</property>
        <property>es</property>
        <property>fr</property>
        <property>pl</property>
        <property>it</property>
        <property>de</property>
        <property>cz</property>
        <property>pt</property>
        <property>ko</property>
      </property>
    </service>
    <service id="api.make_request" class="AppBundle\Api\ApiRequestClient">
      <property name="domainMain">http://sym2_pay_gateway.test</property>
      <property name="guzzle" type="service" id="guzzle.client"/>
    </service>
    <service id="application.sonata.listener.serialization_listener" class="Application\Sonata\MediaBundle\Entity\Serializer\MediaSerializer">
      <tag name="jms_serializer.subscribing_handler"/>
      <property name="container" type="service" id="service_container"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.assetic" class="Symfony\Bridge\Monolog\Logger">
      <argument>assetic</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.snappy" class="Symfony\Bridge\Monolog\Logger">
      <argument>snappy</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.handler.debug" class="Symfony\Bridge\Monolog\Handler\DebugHandler">
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="fos_rest.request_matcher.8615024800e4193600fd69885f7587200427156c3f94286d4b2ddc9c87897c17c762ebe2" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.request_matcher.0dfc4cce134bee15f08405cb5cea4845b13ff7d8c8f779004218432a2c552bd0cd9f9d27" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="nelmio_api_doc.parser.form_type_parser" class="Nelmio\ApiDocBundle\Parser\FormTypeParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="form.factory"/>
      <argument>true</argument>
    </service>
    <service id="nelmio_api_doc.parser.validation_parser" class="Nelmio\ApiDocBundle\Parser\ValidationParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="nelmio_api_doc.parser.jms_metadata_parser" class="Nelmio\ApiDocBundle\Parser\JmsMetadataParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
    </service>
    <service id="form.extension" class="Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="app_shop_form_type_app">app_shop_form_type_app</argument>
        <argument key="AppBundle\Form\Type\AppType">app_shop_form_type_app</argument>
        <argument key="form">form.type.form</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType">form.type.form</argument>
        <argument key="birthday">form.type.birthday</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\BirthdayType">form.type.birthday</argument>
        <argument key="checkbox">form.type.checkbox</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CheckboxType">form.type.checkbox</argument>
        <argument key="choice">form.type.choice</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType">form.type.choice</argument>
        <argument key="collection">form.type.collection</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CollectionType">form.type.collection</argument>
        <argument key="country">form.type.country</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CountryType">form.type.country</argument>
        <argument key="date">form.type.date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType">form.type.date</argument>
        <argument key="datetime">form.type.datetime</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType">form.type.datetime</argument>
        <argument key="email">form.type.email</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\EmailType">form.type.email</argument>
        <argument key="file">form.type.file</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType">form.type.file</argument>
        <argument key="hidden">form.type.hidden</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\HiddenType">form.type.hidden</argument>
        <argument key="integer">form.type.integer</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\IntegerType">form.type.integer</argument>
        <argument key="language">form.type.language</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\LanguageType">form.type.language</argument>
        <argument key="locale">form.type.locale</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\LocaleType">form.type.locale</argument>
        <argument key="money">braincrafted_bootstrap.form.type.money</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\MoneyType">form.type.money</argument>
        <argument key="number">form.type.number</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\NumberType">form.type.number</argument>
        <argument key="password">form.type.password</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\PasswordType">form.type.password</argument>
        <argument key="percent">form.type.percent</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\PercentType">form.type.percent</argument>
        <argument key="radio">form.type.radio</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RadioType">form.type.radio</argument>
        <argument key="range">form.type.range</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RangeType">form.type.range</argument>
        <argument key="repeated">form.type.repeated</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType">form.type.repeated</argument>
        <argument key="search">form.type.search</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SearchType">form.type.search</argument>
        <argument key="textarea">form.type.textarea</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextareaType">form.type.textarea</argument>
        <argument key="text">form.type.text</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType">form.type.text</argument>
        <argument key="time">form.type.time</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TimeType">form.type.time</argument>
        <argument key="timezone">form.type.timezone</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TimezoneType">form.type.timezone</argument>
        <argument key="url">form.type.url</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\UrlType">form.type.url</argument>
        <argument key="button">form.type.button</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ButtonType">form.type.button</argument>
        <argument key="submit">form.type.submit</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType">form.type.submit</argument>
        <argument key="reset">form.type.reset</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ResetType">form.type.reset</argument>
        <argument key="currency">form.type.currency</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CurrencyType">form.type.currency</argument>
        <argument key="entity">form.type.entity</argument>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType">form.type.entity</argument>
        <argument key="captcha">captcha.type</argument>
        <argument key="Gregwar\CaptchaBundle\Type\CaptchaType">captcha.type</argument>
        <argument key="bootstrap_collection">braincrafted_bootstrap.form.type.collection</argument>
        <argument key="Braincrafted\Bundle\BootstrapBundle\Form\Type\BootstrapCollectionType">braincrafted_bootstrap.form.type.collection</argument>
        <argument key="Braincrafted\Bundle\BootstrapBundle\Form\Type\MoneyType">braincrafted_bootstrap.form.type.money</argument>
        <argument key="form_actions">braincrafted_bootstrap.form.type.form_actions</argument>
        <argument key="Braincrafted\Bundle\BootstrapBundle\Form\Type\FormActionsType">braincrafted_bootstrap.form.type.form_actions</argument>
        <argument key="bs_static">braincrafted_bootstrap.form.type.form_control_static</argument>
        <argument key="Braincrafted\Bundle\BootstrapBundle\Form\Type\FormStaticControlType">braincrafted_bootstrap.form.type.form_control_static</argument>
        <argument key="fos_user_username">fos_user.username_form_type</argument>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType">fos_user.username_form_type</argument>
        <argument key="fos_user_profile">fos_user.profile.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType">fos_user.profile.form.type</argument>
        <argument key="fos_user_registration">fos_user.registration.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType">fos_user.registration.form.type</argument>
        <argument key="fos_user_change_password">fos_user.change_password.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType">fos_user.change_password.form.type</argument>
        <argument key="fos_user_resetting">fos_user.resetting.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ResettingFormType">fos_user.resetting.form.type</argument>
        <argument key="sonata_type_immutable_array">sonata.core.form.type.array</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType">sonata.core.form.type.array</argument>
        <argument key="sonata_type_boolean">sonata.core.form.type.boolean</argument>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType">sonata.core.form.type.boolean</argument>
        <argument key="sonata_type_collection">sonata.core.form.type.collection</argument>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType">sonata.core.form.type.collection</argument>
        <argument key="sonata_type_translatable_choice">sonata.core.form.type.translatable_choice</argument>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">sonata.core.form.type.translatable_choice</argument>
        <argument key="sonata_type_date_range">sonata.core.form.type.date_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType">sonata.core.form.type.date_range</argument>
        <argument key="sonata_type_datetime_range">sonata.core.form.type.datetime_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType">sonata.core.form.type.datetime_range</argument>
        <argument key="sonata_type_date_picker">sonata.core.form.type.date_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType">sonata.core.form.type.date_picker</argument>
        <argument key="sonata_type_datetime_picker">sonata.core.form.type.datetime_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType">sonata.core.form.type.datetime_picker</argument>
        <argument key="sonata_type_date_range_picker">sonata.core.form.type.date_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType">sonata.core.form.type.date_range_picker</argument>
        <argument key="sonata_type_datetime_range_picker">sonata.core.form.type.datetime_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">sonata.core.form.type.datetime_range_picker</argument>
        <argument key="sonata_type_equal">sonata.core.form.type.equal</argument>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType">sonata.core.form.type.equal</argument>
        <argument key="sonata_type_color_selector">sonata.core.form.type.color_selector</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType">sonata.core.form.type.color_selector</argument>
        <argument key="sonata_block_service_choice">sonata.block.form.type.block</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType">sonata.block.form.type.block</argument>
        <argument key="sonata_type_container_template_choice">sonata.block.form.type.container_template</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType">sonata.block.form.type.container_template</argument>
        <argument key="sonata_type_admin">sonata.admin.form.type.admin</argument>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType">sonata.admin.form.type.admin</argument>
        <argument key="sonata_type_model">sonata.admin.form.type.model_choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType">sonata.admin.form.type.model_choice</argument>
        <argument key="sonata_type_model_list">sonata.admin.form.type.model_list</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelTypeList">sonata.admin.form.type.model_list</argument>
        <argument key="sonata_type_model_reference">sonata.admin.form.type.model_reference</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType">sonata.admin.form.type.model_reference</argument>
        <argument key="sonata_type_model_hidden">sonata.admin.form.type.model_hidden</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType">sonata.admin.form.type.model_hidden</argument>
        <argument key="sonata_type_model_autocomplete">sonata.admin.form.type.model_autocomplete</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">sonata.admin.form.type.model_autocomplete</argument>
        <argument key="sonata_type_native_collection">sonata.admin.form.type.collection</argument>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType">sonata.admin.form.type.collection</argument>
        <argument key="sonata_type_filter_number">sonata.admin.form.filter.type.number</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType">sonata.admin.form.filter.type.number</argument>
        <argument key="sonata_type_filter_choice">sonata.admin.form.filter.type.choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">sonata.admin.form.filter.type.choice</argument>
        <argument key="sonata_type_filter_default">sonata.admin.form.filter.type.default</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType">sonata.admin.form.filter.type.default</argument>
        <argument key="sonata_type_filter_date">sonata.admin.form.filter.type.date</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType">sonata.admin.form.filter.type.date</argument>
        <argument key="sonata_type_filter_date_range">sonata.admin.form.filter.type.daterange</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">sonata.admin.form.filter.type.daterange</argument>
        <argument key="sonata_type_filter_datetime">sonata.admin.form.filter.type.datetime</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">sonata.admin.form.filter.type.datetime</argument>
        <argument key="sonata_type_filter_datetime_range">sonata.admin.form.filter.type.datetime_range</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">sonata.admin.form.filter.type.datetime_range</argument>
        <argument key="sonata_media_type">sonata.media.form.type.media</argument>
        <argument key="Sonata\MediaBundle\Form\Type\MediaType">sonata.media.form.type.media</argument>
        <argument key="sonata_media_api_form_doctrine_media">sonata.media.api.form.type.doctrine.media</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType">sonata.media.api.form.type.gallery_has_media</argument>
        <argument key="sonata_media_api_form_media">sonata.media.api.form.type.media</argument>
        <argument key="Sonata\MediaBundle\Form\Type\ApiMediaType">sonata.media.api.form.type.media</argument>
        <argument key="sonata_media_api_form_gallery">sonata.media.api.form.type.gallery</argument>
        <argument key="sonata_media_api_form_gallery_has_media">sonata.media.api.form.type.gallery_has_media</argument>
        <argument key="transaction_text">shop.form.data_transformer.transaction_id</argument>
        <argument key="AppBundle\Form\DataTransformer\TransactionIdToStringTransformer">shop.form.data_transformer.transaction_id</argument>
      </argument>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>braincrafted_bootstrap.form.extension.typesetter_extension</argument>
          <argument>braincrafted_bootstrap.form.extension.static_control</argument>
          <argument>nelmio_api_doc.form.extension.description_form_type_extension</argument>
          <argument>matthias_symfony_console_form.console_form_type_extension</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ButtonType" type="collection">
          <argument>braincrafted_bootstrap.form.extension.form_action_button</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType" type="collection">
          <argument>braincrafted_bootstrap.form.extension.input_group_button</argument>
        </argument>
        <argument key="form" type="collection">
          <argument>sonata.admin.form.extension.field</argument>
          <argument>sonata.admin.form.extension.field.mopa</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument>form.type_guesser.validator</argument>
        <argument>form.type_guesser.doctrine</argument>
      </argument>
      <argument type="collection">
        <argument key="form">Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument key="birthday">Symfony\Component\Form\Extension\Core\Type\BirthdayType</argument>
        <argument key="checkbox">Symfony\Component\Form\Extension\Core\Type\CheckboxType</argument>
        <argument key="choice">Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument key="collection">Symfony\Component\Form\Extension\Core\Type\CollectionType</argument>
        <argument key="country">Symfony\Component\Form\Extension\Core\Type\CountryType</argument>
        <argument key="date">Symfony\Component\Form\Extension\Core\Type\DateType</argument>
        <argument key="datetime">Symfony\Component\Form\Extension\Core\Type\DateTimeType</argument>
        <argument key="email">Symfony\Component\Form\Extension\Core\Type\EmailType</argument>
        <argument key="file">Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument key="hidden">Symfony\Component\Form\Extension\Core\Type\HiddenType</argument>
        <argument key="integer">Symfony\Component\Form\Extension\Core\Type\IntegerType</argument>
        <argument key="language">Symfony\Component\Form\Extension\Core\Type\LanguageType</argument>
        <argument key="locale">Symfony\Component\Form\Extension\Core\Type\LocaleType</argument>
        <argument key="money">Symfony\Component\Form\Extension\Core\Type\MoneyType</argument>
        <argument key="number">Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
        <argument key="password">Symfony\Component\Form\Extension\Core\Type\PasswordType</argument>
        <argument key="percent">Symfony\Component\Form\Extension\Core\Type\PercentType</argument>
        <argument key="radio">Symfony\Component\Form\Extension\Core\Type\RadioType</argument>
        <argument key="repeated">Symfony\Component\Form\Extension\Core\Type\RepeatedType</argument>
        <argument key="search">Symfony\Component\Form\Extension\Core\Type\SearchType</argument>
        <argument key="textarea">Symfony\Component\Form\Extension\Core\Type\TextareaType</argument>
        <argument key="text">Symfony\Component\Form\Extension\Core\Type\TextType</argument>
        <argument key="time">Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
        <argument key="timezone">Symfony\Component\Form\Extension\Core\Type\TimezoneType</argument>
        <argument key="url">Symfony\Component\Form\Extension\Core\Type\UrlType</argument>
        <argument key="button">Symfony\Component\Form\Extension\Core\Type\ButtonType</argument>
        <argument key="submit">Symfony\Component\Form\Extension\Core\Type\SubmitType</argument>
        <argument key="reset">Symfony\Component\Form\Extension\Core\Type\ResetType</argument>
        <argument key="currency">Symfony\Component\Form\Extension\Core\Type\CurrencyType</argument>
        <argument key="entity">Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument key="sonata_type_immutable_array">Sonata\CoreBundle\Form\Type\ImmutableArrayType</argument>
        <argument key="sonata_type_boolean">Sonata\CoreBundle\Form\Type\BooleanType</argument>
        <argument key="sonata_type_collection">Sonata\CoreBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_translatable_choice">Sonata\CoreBundle\Form\Type\TranslatableChoiceType</argument>
        <argument key="sonata_type_date_range">Sonata\CoreBundle\Form\Type\DateRangeType</argument>
        <argument key="sonata_type_datetime_range">Sonata\CoreBundle\Form\Type\DateTimeRangeType</argument>
        <argument key="sonata_type_date_picker">Sonata\CoreBundle\Form\Type\DatePickerType</argument>
        <argument key="sonata_type_datetime_picker">Sonata\CoreBundle\Form\Type\DateTimePickerType</argument>
        <argument key="sonata_type_date_range_picker">Sonata\CoreBundle\Form\Type\DateRangePickerType</argument>
        <argument key="sonata_type_datetime_range_picker">Sonata\CoreBundle\Form\Type\DateTimeRangePickerType</argument>
        <argument key="sonata_type_equal">Sonata\CoreBundle\Form\Type\EqualType</argument>
        <argument key="sonata_type_color_selector">Sonata\CoreBundle\Form\Type\ColorSelectorType</argument>
      </argument>
      <argument type="collection">
        <argument key="form" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>nelmio_api_doc.form.extension.description_form_type_extension</argument>
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>nelmio_api_doc.form.extension.description_form_type_extension</argument>
        </argument>
        <argument key="repeated" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="submit" type="collection">
          <argument>form.type_extension.submit.validator</argument>
          <argument>form.type_extension.submit.validator</argument>
        </argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/var/www/wolopay/var/cache/test_dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
      <argument>/var/www/wolopay/app/../var/sessions</argument>
    </service>
    <service id="templating.loader" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating" class="Symfony\Bundle\TwigBundle\TwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="translator" class="Symfony\Component\Translation\DataCollectorTranslator">
      <argument type="service">
        <service class="Symfony\Component\Translation\LoggingTranslator" public="false">
          <tag name="monolog.logger" channel="translation"/>
          <argument type="service" id="lexik_translation.translator"/>
          <argument type="service" id="monolog.logger.translation"/>
        </service>
      </argument>
    </service>
    <service id="router" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>/var/www/wolopay/app/config/routing.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/wolopay/var/cache/test_dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appTest_devUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appTest_devUrlMatcher</argument>
        <argument key="strict_requirements">null</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\CachedReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\Common\Cache\FilesystemCache" public="false">
          <argument>/var/www/wolopay/var/cache/test_dev/annotations</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="security.encoder_factory" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="FOS\UserBundle\Model\UserInterface" type="collection">
          <argument key="class">%security.encoder.digest.class%</argument>
          <argument key="arguments" type="collection">
            <argument>sha512</argument>
            <argument>true</argument>
            <argument>5000</argument>
          </argument>
        </argument>
        <argument key="AppBundle\Entity\AppApiCredentials" type="collection">
          <argument key="class">%security.encoder.plain.class%</argument>
          <argument key="arguments" type="collection">
            <argument>false</argument>
          </argument>
        </argument>
        <argument key="AppBundle\Entity\Transaction" type="collection">
          <argument key="class">%security.encoder.plain.class%</argument>
          <argument key="arguments" type="collection">
            <argument>false</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.password_encoder" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.user_checker.gettoken" class="Symfony\Component\Security\Core\User\UserChecker"/>
    <service id="twig.loader" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/app/Resources/TwigBundle/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/src/AppBundle/Resources/views</argument>
        <argument>App</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/views</argument>
        <argument>GregwarCaptcha</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/braincrafted/bootstrap-bundle/Braincrafted/Bundle/BootstrapBundle/Resources/views</argument>
        <argument>BraincraftedBootstrap</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/misd/guzzle-bundle/Resources/views</argument>
        <argument>MisdGuzzle</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/app/Resources/NelmioApiDocBundle/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/app/Resources/FOSUserBundle/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/app/Resources/LexikTranslationBundle/views</argument>
        <argument>LexikTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/lexik/translation-bundle/Resources/views</argument>
        <argument>LexikTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/sonata-project/block-bundle/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/sonata-project/intl-bundle/Resources/views</argument>
        <argument>SonataIntl</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/sonata-project/media-bundle/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/src/Application/Sonata/MediaBundle/Resources/views</argument>
        <argument>ApplicationSonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/views</argument>
        <argument>IbrowsSonataTranslation</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/raulfraile/ladybug-bundle/RaulFraile/Bundle/LadybugBundle/Resources/views</argument>
        <argument>RaulFraileLadybug</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/wolopay/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
    </service>
    <service id="logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
      <autowiring-type>Psr\Log\LoggerInterface</autowiring-type>
    </service>
    <service id="swiftmailer.mailer.default.transport" class="Swift_Transport_SpoolTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.spool" class="Swift_MemorySpool"/>
    <service id="swiftmailer.mailer.default.transport.real" class="Swift_Transport_NullTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
    </service>
    <service id="fos_rest.view_handler" class="FOS\RestBundle\View\ViewHandler">
      <argument type="collection">
        <argument key="xml">false</argument>
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>true</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <call method="setExclusionStrategyGroups">
        <argument></argument>
      </call>
      <call method="setExclusionStrategyVersion">
        <argument></argument>
      </call>
      <call method="setSerializeNullStrategy">
        <argument>true</argument>
      </call>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="jms_serializer.metadata_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver">
      <argument type="service">
        <service class="Metadata\Driver\DriverChain" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/wolopay/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/wolopay/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/var/www/wolopay/vendor/symfony/assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/wolopay/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/wolopay/vendor/sensio/framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="AppBundle">/var/www/wolopay/src/AppBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\MigrationsBundle">/var/www/wolopay/vendor/doctrine/doctrine-migrations-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">/var/www/wolopay/vendor/doctrine/doctrine-fixtures-bundle/Resources/config/serializer</argument>
                      <argument key="Gregwar\CaptchaBundle">/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/config/serializer</argument>
                      <argument key="Braincrafted\Bundle\BootstrapBundle">/var/www/wolopay/vendor/braincrafted/bootstrap-bundle/Braincrafted/Bundle/BootstrapBundle/Resources/config/serializer</argument>
                      <argument key="Misd\GuzzleBundle">/var/www/wolopay/vendor/misd/guzzle-bundle/Resources/config/serializer</argument>
                      <argument key="Stof\DoctrineExtensionsBundle">/var/www/wolopay/vendor/stof/doctrine-extensions-bundle/Resources/config/serializer</argument>
                      <argument key="FOS\JsRoutingBundle">/var/www/wolopay/vendor/friendsofsymfony/jsrouting-bundle/Resources/config/serializer</argument>
                      <argument key="Gfreeau\Bundle\GetJWTBundle">/var/www/wolopay/vendor/gfreeau/get-jwt-bundle/Gfreeau/Bundle/GetJWTBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/var/www/wolopay/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/wolopay/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="Lexik\Bundle\JWTAuthenticationBundle">/var/www/wolopay/vendor/lexik/jwt-authentication-bundle/Lexik/Bundle/JWTAuthenticationBundle/Resources/config/serializer</argument>
                      <argument key="Escape\WSSEAuthenticationBundle">/var/www/wolopay/vendor/escapestudios/wsse-authentication-bundle/Escape/WSSEAuthenticationBundle/Resources/config/serializer</argument>
                      <argument key="Nelmio\ApiDocBundle">/var/www/wolopay/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/config/serializer</argument>
                      <argument key="Lexik\Bundle\TranslationBundle">/var/www/wolopay/app/Resources/LexikTranslationBundle/serializer</argument>
                      <argument key="JMS\DiExtraBundle">/var/www/wolopay/vendor/jms/di-extra-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\AopBundle">/var/www/wolopay/vendor/jms/aop-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/wolopay/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/wolopay/vendor/knplabs/knp-menu-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/wolopay/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/wolopay/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">/var/www/wolopay/app/Resources/SonataMediaBundle/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/wolopay/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\MediaBundle">/var/www/wolopay/src/Application/Sonata/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Ibrows\SonataTranslationBundle">/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/config/serializer</argument>
                      <argument key="BeSimple\SoapBundle">/var/www/wolopay/vendor/besimple/soap/src/BeSimple/SoapBundle/Resources/config/serializer</argument>
                      <argument key="Bazinga\Bundle\FakerBundle">/var/www/wolopay/vendor/willdurand/faker-bundle/Bazinga/Bundle/FakerBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\SnappyBundle">/var/www/wolopay/vendor/knplabs/knp-snappy-bundle/Resources/config/serializer</argument>
                      <argument key="Matthias\SymfonyConsoleForm\Bundle">/var/www/wolopay/vendor/matthiasnoback/symfony-console-form/src/Bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/var/www/wolopay/vendor/sensio/distribution-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/wolopay/vendor/sensio/generator-bundle/Resources/config/serializer</argument>
                      <argument key="RaulFraile\Bundle\LadybugBundle">/var/www/wolopay/vendor/raulfraile/ladybug-bundle/RaulFraile/Bundle/LadybugBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\DebugBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/wolopay/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/wolopay/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/var/www/wolopay/vendor/symfony/assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/wolopay/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/wolopay/vendor/sensio/framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="AppBundle">/var/www/wolopay/src/AppBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\MigrationsBundle">/var/www/wolopay/vendor/doctrine/doctrine-migrations-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">/var/www/wolopay/vendor/doctrine/doctrine-fixtures-bundle/Resources/config/serializer</argument>
                      <argument key="Gregwar\CaptchaBundle">/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/config/serializer</argument>
                      <argument key="Braincrafted\Bundle\BootstrapBundle">/var/www/wolopay/vendor/braincrafted/bootstrap-bundle/Braincrafted/Bundle/BootstrapBundle/Resources/config/serializer</argument>
                      <argument key="Misd\GuzzleBundle">/var/www/wolopay/vendor/misd/guzzle-bundle/Resources/config/serializer</argument>
                      <argument key="Stof\DoctrineExtensionsBundle">/var/www/wolopay/vendor/stof/doctrine-extensions-bundle/Resources/config/serializer</argument>
                      <argument key="FOS\JsRoutingBundle">/var/www/wolopay/vendor/friendsofsymfony/jsrouting-bundle/Resources/config/serializer</argument>
                      <argument key="Gfreeau\Bundle\GetJWTBundle">/var/www/wolopay/vendor/gfreeau/get-jwt-bundle/Gfreeau/Bundle/GetJWTBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/var/www/wolopay/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/wolopay/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="Lexik\Bundle\JWTAuthenticationBundle">/var/www/wolopay/vendor/lexik/jwt-authentication-bundle/Lexik/Bundle/JWTAuthenticationBundle/Resources/config/serializer</argument>
                      <argument key="Escape\WSSEAuthenticationBundle">/var/www/wolopay/vendor/escapestudios/wsse-authentication-bundle/Escape/WSSEAuthenticationBundle/Resources/config/serializer</argument>
                      <argument key="Nelmio\ApiDocBundle">/var/www/wolopay/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/config/serializer</argument>
                      <argument key="Lexik\Bundle\TranslationBundle">/var/www/wolopay/app/Resources/LexikTranslationBundle/serializer</argument>
                      <argument key="JMS\DiExtraBundle">/var/www/wolopay/vendor/jms/di-extra-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\AopBundle">/var/www/wolopay/vendor/jms/aop-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/wolopay/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/wolopay/vendor/knplabs/knp-menu-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/wolopay/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/wolopay/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">/var/www/wolopay/app/Resources/SonataMediaBundle/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/wolopay/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\MediaBundle">/var/www/wolopay/src/Application/Sonata/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Ibrows\SonataTranslationBundle">/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/config/serializer</argument>
                      <argument key="BeSimple\SoapBundle">/var/www/wolopay/vendor/besimple/soap/src/BeSimple/SoapBundle/Resources/config/serializer</argument>
                      <argument key="Bazinga\Bundle\FakerBundle">/var/www/wolopay/vendor/willdurand/faker-bundle/Bazinga/Bundle/FakerBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\SnappyBundle">/var/www/wolopay/vendor/knplabs/knp-snappy-bundle/Resources/config/serializer</argument>
                      <argument key="Matthias\SymfonyConsoleForm\Bundle">/var/www/wolopay/vendor/matthiasnoback/symfony-console-form/src/Bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/var/www/wolopay/vendor/sensio/distribution-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/wolopay/vendor/sensio/generator-bundle/Resources/config/serializer</argument>
                      <argument key="RaulFraile\Bundle\LadybugBundle">/var/www/wolopay/vendor/raulfraile/ladybug-bundle/RaulFraile/Bundle/LadybugBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\DebugBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/wolopay/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/wolopay/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/var/www/wolopay/vendor/symfony/assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/wolopay/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/wolopay/vendor/sensio/framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="AppBundle">/var/www/wolopay/src/AppBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\MigrationsBundle">/var/www/wolopay/vendor/doctrine/doctrine-migrations-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">/var/www/wolopay/vendor/doctrine/doctrine-fixtures-bundle/Resources/config/serializer</argument>
                      <argument key="Gregwar\CaptchaBundle">/var/www/wolopay/vendor/gregwar/captcha-bundle/Resources/config/serializer</argument>
                      <argument key="Braincrafted\Bundle\BootstrapBundle">/var/www/wolopay/vendor/braincrafted/bootstrap-bundle/Braincrafted/Bundle/BootstrapBundle/Resources/config/serializer</argument>
                      <argument key="Misd\GuzzleBundle">/var/www/wolopay/vendor/misd/guzzle-bundle/Resources/config/serializer</argument>
                      <argument key="Stof\DoctrineExtensionsBundle">/var/www/wolopay/vendor/stof/doctrine-extensions-bundle/Resources/config/serializer</argument>
                      <argument key="FOS\JsRoutingBundle">/var/www/wolopay/vendor/friendsofsymfony/jsrouting-bundle/Resources/config/serializer</argument>
                      <argument key="Gfreeau\Bundle\GetJWTBundle">/var/www/wolopay/vendor/gfreeau/get-jwt-bundle/Gfreeau/Bundle/GetJWTBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/var/www/wolopay/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/wolopay/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="Lexik\Bundle\JWTAuthenticationBundle">/var/www/wolopay/vendor/lexik/jwt-authentication-bundle/Lexik/Bundle/JWTAuthenticationBundle/Resources/config/serializer</argument>
                      <argument key="Escape\WSSEAuthenticationBundle">/var/www/wolopay/vendor/escapestudios/wsse-authentication-bundle/Escape/WSSEAuthenticationBundle/Resources/config/serializer</argument>
                      <argument key="Nelmio\ApiDocBundle">/var/www/wolopay/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/wolopay/vendor/friendsofsymfony/user-bundle/Resources/config/serializer</argument>
                      <argument key="Lexik\Bundle\TranslationBundle">/var/www/wolopay/app/Resources/LexikTranslationBundle/serializer</argument>
                      <argument key="JMS\DiExtraBundle">/var/www/wolopay/vendor/jms/di-extra-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\AopBundle">/var/www/wolopay/vendor/jms/aop-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/wolopay/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/wolopay/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/wolopay/vendor/knplabs/knp-menu-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/wolopay/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/wolopay/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/wolopay/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">/var/www/wolopay/app/Resources/SonataMediaBundle/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/wolopay/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\MediaBundle">/var/www/wolopay/src/Application/Sonata/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Ibrows\SonataTranslationBundle">/var/www/wolopay/vendor/ibrows/sonata-translation-bundle/Resources/config/serializer</argument>
                      <argument key="BeSimple\SoapBundle">/var/www/wolopay/vendor/besimple/soap/src/BeSimple/SoapBundle/Resources/config/serializer</argument>
                      <argument key="Bazinga\Bundle\FakerBundle">/var/www/wolopay/vendor/willdurand/faker-bundle/Bazinga/Bundle/FakerBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\SnappyBundle">/var/www/wolopay/vendor/knplabs/knp-snappy-bundle/Resources/config/serializer</argument>
                      <argument key="Matthias\SymfonyConsoleForm\Bundle">/var/www/wolopay/vendor/matthiasnoback/symfony-console-form/src/Bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/var/www/wolopay/vendor/sensio/distribution-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/wolopay/vendor/sensio/generator-bundle/Resources/config/serializer</argument>
                      <argument key="RaulFraile\Bundle\LadybugBundle">/var/www/wolopay/vendor/raulfraile/ladybug-bundle/RaulFraile/Bundle/LadybugBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\DebugBundle">/var/www/wolopay/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy">
      <argument type="service">
        <service class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
          <argument type="service">
            <service class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
              <argument>_</argument>
              <argument>true</argument>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="jms_serializer.object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer" class="JMS\Serializer\Serializer">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_serialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_serialization_visitor</argument>
            <argument key="yml">jms_serializer.yaml_serialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_deserialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_deserialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
          <call method="setListeners">
            <argument type="collection">
              <argument key="serializer.pre_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
                <argument type="collection">
                  <argument type="collection">
                    <argument>nvia.shop_app.listener.transaction_serializer_listener</argument>
                    <argument>onPreSerializeTransaction</argument>
                  </argument>
                  <argument>appbundle\entity\transaction</argument>
                  <argument>null</argument>
                </argument>
              </argument>
              <argument key="serializer.post_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>nvia.shop_app.listener.transaction_serializer_listener</argument>
                    <argument>onPostSerializeTransUnit</argument>
                  </argument>
                  <argument>lexik\bundle\translationbundle\entity\transunit</argument>
                  <argument>null</argument>
                </argument>
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPostSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="fos_user.mailer" class="FOS\UserBundle\Mailer\Mailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router"/>
      <argument type="service" id="templating"/>
      <argument type="collection">
        <argument key="confirmation.template">FOSUserBundle:Registration:email.txt.twig</argument>
        <argument key="resetting.template">FOSUserBundle:Resetting:email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.util.email_canonicalizer" class="FOS\UserBundle\Util\Canonicalizer"/>
    <service id="fos_user.util.token_generator" class="FOS\UserBundle\Util\TokenGenerator">
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="fos_user.user_manager" class="FOS\UserBundle\Doctrine\UserManager">
      <argument type="service" id="security.encoder_factory"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service">
        <service class="Doctrine\ORM\EntityManager" public="false">
          <argument>null</argument>
          <factory service="doctrine" method="getManager"/>
        </service>
      </argument>
      <argument>AppBundle\Entity\ClientUser</argument>
    </service>
    <service id="jms_di_extra.service_naming_strategy" class="JMS\DiExtraBundle\Metadata\DefaultNamingStrategy"/>
    <service id="jms_di_extra.metadata_driver" class="JMS\DiExtraBundle\Metadata\Driver\AnnotationDriver">
      <argument type="service" id="annotation_reader"/>
      <argument type="service" id="jms_di_extra.service_naming_strategy"/>
    </service>
    <service id="sonata.admin.security.handler" class="Sonata\AdminBundle\Security\Handler\RoleSecurityHandler">
      <argument type="service" id="security.context" on-invalid="null"/>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
    </service>
    <service id="console_form_helper" class="Matthias\SymfonyConsoleForm\Console\Helper\FormHelper">
      <tag name="console_helper"/>
      <argument type="service">
        <service class="Matthias\SymfonyConsoleForm\Bridge\FormFactory\ConsoleFormWithDefaultValuesAndOptionsFactory" public="false">
          <argument type="service" id="form.factory"/>
          <argument type="service" id="form.registry"/>
        </service>
      </argument>
      <argument type="service" id="matthias_symfony_console_form.delegating_interactor"/>
    </service>
    <service id="knp_menu.menu_provider" class="Knp\Menu\Provider\ChainProvider">
      <argument type="collection">
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="service_container"/>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\BuilderServiceProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="service_container"/>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="kernel"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="knp_menu.factory"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fos_user.doctrine_registry" alias="doctrine"/>
    <service id="session.storage" alias="session.storage.filesystem"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="security.user_checker.api" alias="security.user_checker.gettoken"/>
    <service id="security.user_checker.shop" alias="security.user_checker.gettoken"/>
    <service id="security.user_checker.main" alias="security.user_checker.gettoken"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.real"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="doctrine.orm.default_second_level_cache.region_cache_driver" alias="doctrine_cache.providers.doctrine.orm.default_second_level_cache.region_cache_driver"/>
    <service id="fos_rest.router" alias="router"/>
    <service id="fos_rest.templating" alias="templating"/>
    <service id="fos_rest.exception_handler" alias="fos_rest.view.exception_wrapper_handler"/>
    <service id="fos_rest.inflector" alias="fos_rest.inflector.doctrine"/>
    <service id="fos_rest.validator" alias="validator"/>
    <service id="serializer" alias="jms_serializer"/>
    <service id="lexik_jwt_authentication.encoder" alias="lexik_jwt_authentication.jwt_encoder"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.email_canonicalizer"/>
    <service id="sonata.block.context_manager" alias="sonata.block.context_manager.default"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="sonata.intl.timezone_detector" alias="sonata.intl.timezone_detector.chain"/>
    <service id="sonata.intl.locale_detector" alias="sonata.intl.locale_detector.request_stack"/>
    <service id="ladybug" alias="data_collector.ladybug_data_collector"/>
    <service id="console.command.appbundle_command_apirequestcommand" alias="nvia_api.command.request"/>
    <service id="console.command.sensiolabs_security_command_securitycheckercommand" alias="sensio_distribution.security_checker.command"/>
    <service id="console.command.appbundle_command_nodejscommand" alias="command.common.node_emit"/>
    <service id="console.command.appbundle_command_paymethodscompleteconfigurationcommand" alias="command.paymethods_complete_configuration"/>
    <service id="console.command.appbundle_command_simulatecancelpaymentcommand" alias="command.shop.simulate_payment_cancel"/>
    <service id="console.command.appbundle_command_timezonetoeachcountrycommand" alias="command.time_zone_to_each_country"/>
    <service id="console.command.appbundle_command_transactioncreatecommand" alias="shop.command.transaction.create"/>
    <service id="console.command.appbundle_command_transactiontempexpiredcommand" alias="shop.command.transaction_temp.expire"/>
    <service id="console.command.appbundle_command_simulatepaymentcompleteprocesscommand" alias="command.shop.simulate_payment_complete"/>
    <service id="console.command.appbundle_command_internalpaymentnotificationcommand" alias="command.internal_payment_notification"/>
    <service id="console.command.appbundle_command_offercommand" alias="command.shop.offer.sync"/>
    <service id="console.command.appbundle_command_businessintelligentcommand" alias="shop_app.business_intelligent"/>
    <service id="console.command.appbundle_command_businessintelligentresendextracostcommand" alias="shop_app.business_intelligent_resend"/>
    <service id="console.command.appbundle_command_wssecommand" alias="api.command.wsse"/>
    <service id="console.command.appbundle_command_subscriptionneedmakepaymentrequestcommand" alias="command.need_make_payment_request"/>
    <service id="console.command.appbundle_command_dateschangetoutccommand" alias="command.date_to_utc"/>
    <service id="console.command.appbundle_command_appimportcommand" alias="app.import_temp"/>
    <service id="console.command.appbundle_command_nginxclearcachecommand" alias="command.nginx_clear_cache"/>
    <service id="console.command.appbundle_command_currencyexchangecommand" alias="command.currency_exchange"/>
    <service id="console.command.appbundle_command_simulatepurchaseextracostcommand" alias="command.shop.simulate_extra_cost"/>
    <service id="console.command.appbundle_command_paymentcancelcommand" alias="command.payment_cancel"/>
    <service id="console.command.appbundle_command_populateappfakedata" alias="command.app_fakedata_populate"/>
    <service id="console.command.appbundle_command_xsollasynccommand" alias="command.xsolla_sync"/>
    <service id="console.command.appbundle_command_billing_billingclientowescommand" alias="app.billing.client.owes_command"/>
    <service id="console.command.appbundle_command_billing_billingclientsendinvoicecommand" alias="app.billing.client.send_invoice_command"/>
    <service id="console.command.appbundle_command_migrationpgcommand" alias="app.migration"/>
    <service id="console.command.appbundle_command_subscriptionexpiredcommand" alias="shop.command.subscription.expire"/>
    <service id="console.command.appbundle_command_businessintelligentsynccommand" alias="app.business_intelligent_sync"/>
    <service id="console.command.appbundle_command_transactionexpiredcommand" alias="shop.command.transaction.expire"/>
    <service id="console.command.appbundle_command_appnotificationcommand" alias="command.shop.app_notification.send"/>
    <service id="console.command.appbundle_command_simulatesendipnvoiceprocesscommand" alias="command.shop.simulate_send_ipn_voice"/>
    <service id="console.command.appbundle_command_idcgamesgameraffiliateimport" alias="command.idcgames.import.gameraffiliateids"/>
    <service id="console.command.appbundle_command_nginxcallrouteswithcachecommand" alias="command.nginx_call_routes_with_cache"/>
    <service id="console.command.appbundle_command_simulatesendipnsmsprocesscommand" alias="command.shop.simulate_send_ipn_sms"/>
    <service id="console.command.appbundle_command_fortunosynccommand" alias="command.fortuno_sync"/>
    <service id="console.command.appbundle_command_paymethodsappaddcommand" alias="command.app_paymethods_add"/>
    <service id="fos_rest.serializer" alias="jms_serializer"/>
  </services>
</container>
