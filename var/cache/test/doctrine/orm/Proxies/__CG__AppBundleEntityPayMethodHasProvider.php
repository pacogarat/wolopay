<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PayMethodHasProvider extends \AppBundle\Entity\PayMethodHasProvider implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'payMethod', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'provider', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'payMethodProviderHasCountries', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'priceSentNet', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeCalculatedWithNet', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeProviderPercent', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeProviderFixed', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeProviderMinimal', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeCurrency', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'externalStore', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'paymentServiceCategory', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'isIframe', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'canBeCustomTransaction', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'needMakeRequestPayment', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'isOurImplementation', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'isAjax', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'order', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'extraOptions', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'active', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'createdAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'payMethod', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'provider', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'payMethodProviderHasCountries', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'priceSentNet', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeCalculatedWithNet', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeProviderPercent', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeProviderFixed', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeProviderMinimal', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'feeCurrency', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'externalStore', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'paymentServiceCategory', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'isIframe', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'canBeCustomTransaction', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'needMakeRequestPayment', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'isOurImplementation', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'isAjax', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'order', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'extraOptions', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'active', '' . "\0" . 'AppBundle\\Entity\\PayMethodHasProvider' . "\0" . 'createdAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PayMethodHasProvider $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayMethod(\AppBundle\Entity\PayMethod $payMethod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayMethod', [$payMethod]);

        return parent::setPayMethod($payMethod);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayMethod', []);

        return parent::getPayMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setProvider(\AppBundle\Entity\Provider $provider)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProvider', [$provider]);

        return parent::setProvider($provider);
    }

    /**
     * {@inheritDoc}
     */
    public function getProvider()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProvider', []);

        return parent::getProvider();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addPayMethodProviderHasCountry(\AppBundle\Entity\PayMethodProviderHasCountry $payMethodProviderHasCountries)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPayMethodProviderHasCountry', [$payMethodProviderHasCountries]);

        return parent::addPayMethodProviderHasCountry($payMethodProviderHasCountries);
    }

    /**
     * {@inheritDoc}
     */
    public function removePayMethodProviderHasCountry(\AppBundle\Entity\PayMethodProviderHasCountry $payMethodProviderHasCountries)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePayMethodProviderHasCountry', [$payMethodProviderHasCountries]);

        return parent::removePayMethodProviderHasCountry($payMethodProviderHasCountries);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayMethodProviderHasCountries()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayMethodProviderHasCountries', []);

        return parent::getPayMethodProviderHasCountries();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function isPriceSentNet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPriceSentNet', []);

        return parent::isPriceSentNet();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceSentNet($priceSentNet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceSentNet', [$priceSentNet]);

        return parent::setPriceSentNet($priceSentNet);
    }

    /**
     * {@inheritDoc}
     */
    public function isFeeCalculatedWithNet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isFeeCalculatedWithNet', []);

        return parent::isFeeCalculatedWithNet();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeeCalculatedWithNet($feeCalculatedWithNet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeeCalculatedWithNet', [$feeCalculatedWithNet]);

        return parent::setFeeCalculatedWithNet($feeCalculatedWithNet);
    }

    /**
     * {@inheritDoc}
     */
    public function setFeeProviderPercent($feeProviderPercent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeeProviderPercent', [$feeProviderPercent]);

        return parent::setFeeProviderPercent($feeProviderPercent);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeeProviderPercent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeeProviderPercent', []);

        return parent::getFeeProviderPercent();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeeProviderFixed($feeProviderFixed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeeProviderFixed', [$feeProviderFixed]);

        return parent::setFeeProviderFixed($feeProviderFixed);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeeProviderFixed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeeProviderFixed', []);

        return parent::getFeeProviderFixed();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeeProviderMinimal($feeProviderMinimal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeeProviderMinimal', [$feeProviderMinimal]);

        return parent::setFeeProviderMinimal($feeProviderMinimal);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeeProviderMinimal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeeProviderMinimal', []);

        return parent::getFeeProviderMinimal();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeeCurrency($feeCurrency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeeCurrency', [$feeCurrency]);

        return parent::setFeeCurrency($feeCurrency);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeeCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeeCurrency', []);

        return parent::getFeeCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentServiceCategory(\AppBundle\Entity\PaymentServiceCategory $paymentServiceCategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentServiceCategory', [$paymentServiceCategory]);

        return parent::setPaymentServiceCategory($paymentServiceCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentServiceCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentServiceCategory', []);

        return parent::getPaymentServiceCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsIframe($isIframe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsIframe', [$isIframe]);

        return parent::setIsIframe($isIframe);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsIframe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsIframe', []);

        return parent::getIsIframe();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAjax($isAjax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAjax', [$isAjax]);

        return parent::setIsAjax($isAjax);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAjax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAjax', []);

        return parent::getIsAjax();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$order]);

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtraOptions($extraOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtraOptions', [$extraOptions]);

        return parent::setExtraOptions($extraOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtraOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtraOptions', []);

        return parent::getExtraOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsOurImplementation($isOurImplementation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsOurImplementation', [$isOurImplementation]);

        return parent::setIsOurImplementation($isOurImplementation);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsOurImplementation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsOurImplementation', []);

        return parent::getIsOurImplementation();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanBeCustomTransaction($canBeCustomTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanBeCustomTransaction', [$canBeCustomTransaction]);

        return parent::setCanBeCustomTransaction($canBeCustomTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getCanBeCustomTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanBeCustomTransaction', []);

        return parent::getCanBeCustomTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setNeedMakeRequestPayment($needMakeRequestPayment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNeedMakeRequestPayment', [$needMakeRequestPayment]);

        return parent::setNeedMakeRequestPayment($needMakeRequestPayment);
    }

    /**
     * {@inheritDoc}
     */
    public function getNeedMakeRequestPayment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNeedMakeRequestPayment', []);

        return parent::getNeedMakeRequestPayment();
    }

    /**
     * {@inheritDoc}
     */
    public function validate(\Symfony\Component\Validator\Context\ExecutionContextInterface $context)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validate', [$context]);

        return parent::validate($context);
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalStore($externalStore)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalStore', [$externalStore]);

        return parent::setExternalStore($externalStore);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalStore()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalStore', []);

        return parent::getExternalStore();
    }

}
