<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Provider extends \AppBundle\Entity\Provider implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'currenciesAvailable', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'freeVat', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'hasClientCredentials', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'payMethodHasProviders', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'virtualCurrencyExchangeAmount', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'virtualCurrencyExchangeCurrency', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'refundEnabled', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'active', 'id', 'nameCompany', 'cif', 'country', 'createdAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'currenciesAvailable', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'freeVat', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'hasClientCredentials', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'payMethodHasProviders', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'virtualCurrencyExchangeAmount', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'virtualCurrencyExchangeCurrency', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'refundEnabled', '' . "\0" . 'AppBundle\\Entity\\Provider' . "\0" . 'active', 'id', 'nameCompany', 'cif', 'country', 'createdAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Provider $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function addCurrenciesAvailable(\AppBundle\Entity\Currency $currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCurrenciesAvailable', [$currency]);

        return parent::addCurrenciesAvailable($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCurrenciesAvailable(\AppBundle\Entity\Currency $currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCurrenciesAvailable', [$currency]);

        return parent::removeCurrenciesAvailable($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrenciesAvailable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrenciesAvailable', []);

        return parent::getCurrenciesAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function setFreeVat($freeVat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFreeVat', [$freeVat]);

        return parent::setFreeVat($freeVat);
    }

    /**
     * {@inheritDoc}
     */
    public function getFreeVat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreeVat', []);

        return parent::getFreeVat();
    }

    /**
     * {@inheritDoc}
     */
    public function isEuVatPaidByProvider()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEuVatPaidByProvider', []);

        return parent::isEuVatPaidByProvider();
    }

    /**
     * {@inheritDoc}
     */
    public function setEuVatPaidByProvider($euVatPaidByProvider)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEuVatPaidByProvider', [$euVatPaidByProvider]);

        return parent::setEuVatPaidByProvider($euVatPaidByProvider);
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasClientCredentials($hasClientCredentials)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasClientCredentials', [$hasClientCredentials]);

        return parent::setHasClientCredentials($hasClientCredentials);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasClientCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasClientCredentials', []);

        return parent::getHasClientCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getPayMethodHasProviders()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayMethodHasProviders', []);

        return parent::getPayMethodHasProviders();
    }

    /**
     * {@inheritDoc}
     */
    public function setVirtualCurrencyExchangeAmount($virtualCurrencyExchangeAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVirtualCurrencyExchangeAmount', [$virtualCurrencyExchangeAmount]);

        return parent::setVirtualCurrencyExchangeAmount($virtualCurrencyExchangeAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getVirtualCurrencyExchangeAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVirtualCurrencyExchangeAmount', []);

        return parent::getVirtualCurrencyExchangeAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setVirtualCurrencyExchangeCurrency($virtualCurrencyExchangeCurrency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVirtualCurrencyExchangeCurrency', [$virtualCurrencyExchangeCurrency]);

        return parent::setVirtualCurrencyExchangeCurrency($virtualCurrencyExchangeCurrency);
    }

    /**
     * {@inheritDoc}
     */
    public function getVirtualCurrencyExchangeCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVirtualCurrencyExchangeCurrency', []);

        return parent::getVirtualCurrencyExchangeCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefundEnabled($refundEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefundEnabled', [$refundEnabled]);

        return parent::setRefundEnabled($refundEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefundEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefundEnabled', []);

        return parent::getRefundEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameCompany($nameCompany)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameCompany', [$nameCompany]);

        return parent::setNameCompany($nameCompany);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameCompany', []);

        return parent::getNameCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setCif($cif)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCif', [$cif]);

        return parent::setCif($cif);
    }

    /**
     * {@inheritDoc}
     */
    public function getCif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCif', []);

        return parent::getCif();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(\AppBundle\Entity\Country $country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

}
